{
  "cells": [
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "1bG4jwnhVtsz"
      },
      "outputs": [],
      "source": [
        "import csv\n",
        "import datetime\n",
        "import glob\n",
        "\n",
        "import pickle\n",
        "import scipy.sparse\n",
        "import time\n",
        "import zipfile\n",
        "\n",
        "import matplotlib.pyplot as plt\n",
        "import numpy as np\n",
        "import pandas as pd\n",
        "import seaborn as sns\n",
        "\n",
        "from collections import Counter\n",
        "\n",
        "sns.set_style('whitegrid')\n",
        "sns.set_palette('pastel')\n",
        "sns.set_context('notebook')\n",
        "\n",
        "import warnings\n",
        "warnings.filterwarnings('ignore')"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "dRhN3gJ-44jR"
      },
      "source": [
        "**DEFINE TARGET IND LATER ON!**"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "I24sgHKuVv_8",
        "outputId": "ec62f812-d558-450c-ee12-4564ca1e8c65"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Mounted at /content/drive\n"
          ]
        }
      ],
      "source": [
        "from google.colab import drive\n",
        "drive.mount('/content/drive')"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "Bk8AmZgSVwCX"
      },
      "outputs": [],
      "source": [
        "with open('/content/drive/MyDrive/refit_data_by_category.pk', 'rb') as f:\n",
        "    data = pickle.load(f)\n",
        "\n",
        "train, test = data['train'], data['test']"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "5KMez0DliqLB"
      },
      "source": [
        "# **DSC & VSC (regular & transfer)**"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "3-eEmH_yqT65"
      },
      "outputs": [],
      "source": [
        "import torch\n",
        "import torch.nn as nn\n",
        "import torch.optim as optim"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "47G8bbx3113U",
        "outputId": "e3819daa-7342-470c-e398-ed5d27b0cf14"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "1\n"
          ]
        }
      ],
      "source": [
        "print(torch.cuda.device_count())"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "G4R8WKqfEUWf"
      },
      "source": [
        "### Define models"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "Lzpfh-wjZKWR"
      },
      "outputs": [],
      "source": [
        "class DSC(nn.Module):\n",
        "    def __init__(self, input_size, output_size, num_filters, filter_size, encoding_dim, enable_transfer_learning=False, DD_step=False):\n",
        "        super(DSC, self).__init__()\n",
        "        self.enable_transfer_learning = enable_transfer_learning\n",
        "        self.DD_step = DD_step # for now\n",
        "        self.encoder = nn.Sequential(\n",
        "            nn.Conv1d(1, num_filters, filter_size, padding=filter_size//2),\n",
        "            nn.ReLU(),\n",
        "            nn.Conv1d(num_filters, num_filters, filter_size, padding=filter_size//2),\n",
        "        )\n",
        "        self.decoder = nn.Sequential(\n",
        "            nn.ConvTranspose1d(num_filters, num_filters, filter_size, padding=filter_size//2),\n",
        "            nn.ReLU(),\n",
        "            nn.ConvTranspose1d(num_filters, 1, filter_size, padding=filter_size//2),\n",
        "            nn.LeakyReLU(),\n",
        "        )\n",
        "        #self.classifier = nn.Linear(encoding_dim, output_size)\n",
        "\n",
        "        if self.DD_step:\n",
        "            for param in self.encoder[:2].parameters():\n",
        "                param.requires_grad = False\n",
        "\n",
        "        if self.enable_transfer_learning:\n",
        "            for param in self.encoder[:1].parameters():\n",
        "                param.requires_grad = False\n",
        "\n",
        "    def forward(self, x):\n",
        "        z = self.encoder(x)\n",
        "        a = torch.sign(z) * torch.relu(torch.abs(z) - 0.2)   # <--------- here is where the sparsity penalty occurs. The threshold is 0.01\n",
        "        y_hat = self.decoder(a)\n",
        "        #x_hat\n",
        "        #y_hat = self.classifier(a.mean(dim=2))\n",
        "        return y_hat, a, self.encoder[0].weight"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "j44t2TxF0LBr"
      },
      "outputs": [],
      "source": [
        "import torch\n",
        "import torch.nn as nn\n",
        "import torch.nn.functional as F\n",
        "\n",
        "class VSC(nn.Module):\n",
        "    def __init__(self, input_size, output_size, num_filters, filter_size, encoding_dim, enable_transfer_learning=False, DD_step=False):#, beta):\n",
        "        super(VSC, self).__init__()\n",
        "\n",
        "        self.num_filters = num_filters\n",
        "        self.encoding_dim = encoding_dim\n",
        "        self.enable_transfer_learning = enable_transfer_learning\n",
        "        self.DD_step = DD_step\n",
        "        #self.beta = beta\n",
        "\n",
        "        self.encoder = nn.Sequential(\n",
        "            nn.Conv1d(1, num_filters, filter_size, padding=filter_size//2),\n",
        "            nn.ReLU(),\n",
        "            nn.Conv1d(num_filters, num_filters, filter_size, padding=filter_size//2),\n",
        "        )\n",
        "        self.decoder = nn.Sequential(\n",
        "            nn.ConvTranspose1d(num_filters, num_filters, filter_size, padding=filter_size//2),\n",
        "            nn.ReLU(),\n",
        "            nn.ConvTranspose1d(num_filters, 1, filter_size, padding=filter_size//2),\n",
        "            nn.LeakyReLU(),\n",
        "        )\n",
        "\n",
        "        if self.DD_step:\n",
        "            for param in self.encoder[:2].parameters():\n",
        "                param.requires_grad = False\n",
        "\n",
        "        if self.enable_transfer_learning:\n",
        "            for param in self.encoder[:1].parameters():\n",
        "                param.requires_grad = False\n",
        "\n",
        "    def forward(self, x):\n",
        "        z = self.encoder(x)\n",
        "        mean = z.mean(dim=2)\n",
        "        log_var = z.var(dim=2).log()\n",
        "\n",
        "        # Sample from a spike and slab?*\n",
        "        std = torch.exp(0.5 * log_var)\n",
        "        eps = torch.randn_like(z)  # not like std, more like z\n",
        "        z = eps * std.unsqueeze(-1).repeat(1, 1, 170) + mean.unsqueeze(-1).repeat(1, 1, 170)\n",
        "\n",
        "        # sparsify\n",
        "        a = torch.sign(z) * F.relu(torch.abs(z) - 0.2)\n",
        "        #a = a.unsqueeze(-1).repeat(1, 1, 171) # instead of repeat, smaple and create the 3rd dimension\n",
        "        #print(a.shape, z.shape)\n",
        "        y_hat = self.decoder(a)\n",
        "        #kl_loss = -0.5 * torch.sum(1 + log_var - mean.pow(2) - log_var.exp())\n",
        "        return y_hat, a, mean, log_var#, kl_loss\n"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "ncVODMMUEXZY"
      },
      "source": [
        "### Define training functions"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "WjpMTAt02Msr"
      },
      "outputs": [],
      "source": [
        "device = torch.device('cuda' if torch.cuda.is_available() else 'cpu')"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "lCT-frVc80Dl"
      },
      "outputs": [],
      "source": [
        "def train_on_week_and_category(week, cat, learning_rate, input_size, output_size, num_filters, filter_size, encoding_dim, num_epochs, display_every_n_epochs, enable_transfer_learning=False, target_ind=None, use_only_target_for_everything=False):\n",
        "  # split data\n",
        "  if enable_transfer_learning:\n",
        "    X, X_t = train[week]['X_bar'].T.values[:8,:], train[week]['X_bar'].T.values[8:,:]\n",
        "    y_cat, y_cat_t = train[week]['X'][cat].T.values[:8,:], train[week]['X'][cat].T.values[8:,:]\n",
        "  elif use_only_target_for_everything:\n",
        "    X = train[week]['X_bar'].T.values[8:,:]\n",
        "    y_cat = train[week]['X'][cat].T.values[8:,:]\n",
        "  else:\n",
        "    X = train[week]['X_bar'].T.values\n",
        "    y_cat = train[week]['X'][cat].T.values\n",
        "\n",
        "  # 1) Deep Sparse Coding step, input and output are the same\n",
        "  model = DSC(input_size, output_size, num_filters, filter_size, encoding_dim, enable_transfer_learning=False)\n",
        "  model.to(device)\n",
        "  # Define loss and optimizer\n",
        "  criterion = nn.MSELoss()\n",
        "  optimizer = optim.Adam(model.parameters(), lr=learning_rate)\n",
        "\n",
        "  print('----> Training for', cat)\n",
        "  for epoch in range(num_epochs):\n",
        "    running_loss = 0.0\n",
        "    inputs, targets = torch.Tensor(y_cat).unsqueeze(1).to(device), torch.Tensor(y_cat).unsqueeze(1).to(device)\n",
        "    optimizer.zero_grad()\n",
        "\n",
        "    y_hat, a, encoder = model(inputs)\n",
        "   #print('a_matrix is {} % sparse'.format(round(100*len(np.where(a.cpu() < 0.1)[0])/(13*25*170), 3)))\n",
        "    #print('shapes',y_hat.shape, targets.shape)\n",
        "    loss = criterion(y_hat, targets)\n",
        "    loss.backward()\n",
        "    optimizer.step()\n",
        "\n",
        "    running_loss += loss.item()\n",
        "\n",
        "    # Print average loss for epoch (every n epochs)\n",
        "    if epoch % display_every_n_epochs == 0:\n",
        "      print('Epoch %d loss: %.3f' % (epoch, running_loss / len(X)))\n",
        "\n",
        "  weights = (model.encoder[0].weight, model.encoder[2].weight)\n",
        "\n",
        "################################################################################################################################################\n",
        "\n",
        "#2) transfer learning\n",
        "  if enable_transfer_learning:\n",
        "    # model ,loss and optimizer\n",
        "    transfer_model = DSC(input_size, output_size, num_filters, filter_size, encoding_dim, enable_transfer_learning=True)\n",
        "    transfer_model.to(device)\n",
        "    transfer_criterion = nn.MSELoss()\n",
        "    transfer_optimizer = optim.Adam(transfer_model.parameters(), lr=0.001)\n",
        "\n",
        "    print('----> Transfer training for {}'.format(cat))\n",
        "\n",
        "    for epoch in range(num_epochs):\n",
        "      running_loss = 0.0\n",
        "      inputs, targets = torch.Tensor(y_cat_t).unsqueeze(1).to(device), torch.Tensor(y_cat_t).unsqueeze(1).to(device)\n",
        "      transfer_optimizer.zero_grad()\n",
        "\n",
        "      transfer_model.encoder[0].weight = weights[0]\n",
        "      transfer_model.encoder[2].weight = weights[1]\n",
        "      #transfer_model.encoder[4].weight = model.encoder[4].weight\n",
        "\n",
        "      y_hat, a, encoder = transfer_model(inputs)\n",
        "      # Compute loss and backpropagate\n",
        "      loss = transfer_criterion(y_hat, targets)\n",
        "      loss.backward()\n",
        "      transfer_optimizer.step()\n",
        "\n",
        "      running_loss += loss.item()\n",
        "\n",
        "      # Print average loss for epoch (every n epochs)\n",
        "      if epoch % display_every_n_epochs == 0:\n",
        "        print('Epoch %d loss: %.3f' % (epoch, running_loss / len(X_t)))\n",
        "\n",
        "    weights = (transfer_model.encoder[0].weight, transfer_model.encoder[2].weight)\n",
        "\n",
        "\n",
        "################################################################################################################################################\n",
        "\n",
        "#3) DD step, we freeze the encoder  and take the sparse code and dictionary of the Deep Sparse Coding step\n",
        "  # model ,loss and optimizer\n",
        "  dd_model = DSC(input_size, output_size, num_filters, filter_size, encoding_dim, DD_step=True)\n",
        "  dd_model.to(device)\n",
        "  dd_criterion = nn.MSELoss()\n",
        "  dd_optimizer = optim.Adam(dd_model.parameters(), lr=0.001)\n",
        "\n",
        "  print('----> DD step for {}'.format(cat))\n",
        "\n",
        "  X_dd = X\n",
        "  y_dd = y_cat\n",
        "  if enable_transfer_learning:\n",
        "    X_dd = X_t\n",
        "    y_dd = y_cat_t\n",
        "\n",
        "  for epoch in range(num_epochs):\n",
        "    running_loss = 0.0\n",
        "    inputs, targets = torch.Tensor(X_dd).unsqueeze(1).to(device), torch.Tensor(y_dd).unsqueeze(1).to(device)\n",
        "    dd_optimizer.zero_grad()\n",
        "\n",
        "    dd_model.encoder[0].weight = weights[0]\n",
        "    dd_model.encoder[2].weight = weights[1]\n",
        "    #dd_model.encoder[4].weight = model.encoder[4].weight\n",
        "\n",
        "    y_hat, a, encoder = dd_model(inputs)\n",
        "    #print('a_matrix is {} % sparse'.format(round(100*len(np.where(a.cpu() < 0.1)[0])/a.cpu().numel(), 3)))\n",
        "    # Compute loss and backpropagate\n",
        "    loss = dd_criterion(y_hat, targets)\n",
        "    loss.backward()\n",
        "    dd_optimizer.step()\n",
        "\n",
        "    running_loss += loss.item()\n",
        "\n",
        "    # Print average loss for epoch (every n epochs)\n",
        "    if epoch % display_every_n_epochs == 0:\n",
        "      print('Epoch %d loss: %.3f' % (epoch, running_loss / len(X_dd)))\n",
        "\n",
        "\n",
        "  current_y_cat = y_hat.cpu().detach().numpy().T\n",
        "  #if enable_transfer_learning:\n",
        "  #  current_y_test_cat = transfer_model.forward(torch.Tensor(test[week]['X']['heating'].T.values).unsqueeze(1).to(device))[0].cpu().detach().numpy().T\n",
        "  #else:\n",
        "  current_y_test_cat = dd_model.forward(torch.Tensor(test[week]['X'][cat].T.values).unsqueeze(1).to(device))[0].cpu().detach().numpy().T\n",
        "\n",
        "  return current_y_cat, current_y_test_cat"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "CRdZEPS6CR_8"
      },
      "outputs": [],
      "source": [
        "def VSC_train_on_week_and_category(week, cat, learning_rate, input_size, output_size, num_filters, filter_size, encoding_dim, num_epochs, display_every_n_epochs, enable_transfer_learning=False, target_ind=None, use_only_target_for_everything=False, num_epochs_vsc_transfer=None):\n",
        "  # split data\n",
        "  if enable_transfer_learning:\n",
        "    X, X_t = train[week]['X_bar'].T.values[:8,:], train[week]['X_bar'].T.values[8:,:]\n",
        "    y_cat, y_cat_t = train[week]['X'][cat].T.values[:8,:], train[week]['X'][cat].T.values[8:,:]\n",
        "  elif use_only_target_for_everything:\n",
        "    X = train[week]['X_bar'].T.values[8:,:]\n",
        "    y_cat = train[week]['X'][cat].T.values[8:,:]\n",
        "  else:\n",
        "    X = train[week]['X_bar'].T.values\n",
        "    y_cat = train[week]['X'][cat].T.values\n",
        "\n",
        "\n",
        "  # 1) Variational Sparse Coding step, input and output are the same\n",
        "  model = VSC(input_size, output_size, num_filters, filter_size, encoding_dim)#, beta)\n",
        "  model.to(device)\n",
        "  # Define loss and optimizer\n",
        "  criterion = nn.MSELoss()\n",
        "  optimizer = optim.Adam(model.parameters(), lr=learning_rate)\n",
        "\n",
        "  print('----> Training for', cat)\n",
        "  for epoch in range(num_epochs):\n",
        "    running_loss = 0.0\n",
        "    inputs, targets = torch.Tensor(y_cat).unsqueeze(1).to(device), torch.Tensor(y_cat).unsqueeze(1).to(device)\n",
        "    optimizer.zero_grad()\n",
        "\n",
        "    y_hat, a, mean, logvar = model(inputs)\n",
        "    #print('a_matrix is {} % sparse'.format(round(100*len(np.where(a.cpu() < 0.1)[0])/a.cpu().numel(), 3)))\n",
        "\n",
        "    loss = criterion(y_hat, targets) # Reconstruction Loss, no KL divergence since this is a regression problem\n",
        "    loss.backward()\n",
        "    optimizer.step()\n",
        "\n",
        "    running_loss += loss.item()\n",
        "\n",
        "    # Print average loss for epoch (every n epochs)\n",
        "    if epoch % display_every_n_epochs == 0:\n",
        "      print('Epoch %d loss: %.3f' % (epoch, running_loss / len(X)))\n",
        "\n",
        "  weights = (model.encoder[0].weight, model.encoder[2].weight)\n",
        "\n",
        "################################################################################################################################################\n",
        "\n",
        "#2) transfer learning\n",
        "  if enable_transfer_learning:\n",
        "    # model ,loss and optimizer\n",
        "    transfer_model = VSC(input_size, output_size, num_filters, filter_size, encoding_dim, enable_transfer_learning=True)\n",
        "    transfer_model.to(device)\n",
        "    transfer_criterion = nn.MSELoss()\n",
        "    transfer_optimizer = optim.Adam(transfer_model.parameters(), lr=0.0005)\n",
        "\n",
        "    print('----> Transfer training for {}'.format(cat))\n",
        "\n",
        "    for epoch in range(num_epochs_vsc_transfer):\n",
        "      running_loss = 0.0\n",
        "      inputs, targets = torch.Tensor(y_cat_t).unsqueeze(1).to(device), torch.Tensor(y_cat_t).unsqueeze(1).to(device)\n",
        "      transfer_optimizer.zero_grad()\n",
        "\n",
        "      transfer_model.encoder[0].weight = weights[0]\n",
        "      transfer_model.encoder[2].weight = weights[1]\n",
        "      #transfer_model.encoder[4].weight = model.encoder[4].weight\n",
        "\n",
        "      y_hat, a, mean, logvar = transfer_model(inputs)\n",
        "\n",
        "      loss = criterion(y_hat, targets)  # Reconstruction Loss\n",
        "      #loss = model.loss_function(y_hat, targets, mu, logvar, logspike, train=False)\n",
        "      loss.backward()\n",
        "      optimizer.step()\n",
        "\n",
        "      running_loss += loss.item()\n",
        "\n",
        "      # Print average loss for epoch (every n epochs)\n",
        "      if epoch % display_every_n_epochs == 0:\n",
        "        print('Epoch %d loss: %.3f' % (epoch, running_loss / len(X_t)))\n",
        "\n",
        "    weights = (transfer_model.encoder[0].weight, transfer_model.encoder[2].weight)\n",
        "\n",
        "\n",
        "################################################################################################################################################\n",
        "\n",
        "#3) DD step, we freeze the encoder and take the sparse code and dictionary of the Deep Sparse Coding step\n",
        "  # model ,loss and optimizer\n",
        "  dd_model = VSC(input_size, output_size, num_filters, filter_size, encoding_dim, enable_transfer_learning=True, DD_step=True)\n",
        "  dd_model.to(device)\n",
        "  dd_criterion = nn.MSELoss()\n",
        "  dd_optimizer = optim.Adam(dd_model.parameters(), lr=0.001)\n",
        "\n",
        "  print('----> DD step for {}'.format(cat))\n",
        "\n",
        "  X_dd = X\n",
        "  y_dd = y_cat\n",
        "  if enable_transfer_learning:\n",
        "    X_dd = X_t\n",
        "    y_dd = y_cat_t\n",
        "\n",
        "  for epoch in range(num_epochs):\n",
        "    running_loss = 0.0\n",
        "    inputs, targets = torch.Tensor(X_dd).unsqueeze(1).to(device), torch.Tensor(y_dd).unsqueeze(1).to(device)\n",
        "    dd_optimizer.zero_grad()\n",
        "\n",
        "    dd_model.encoder[0].weight = weights[0]\n",
        "    dd_model.encoder[2].weight = weights[1]\n",
        "    #dd_model.encoder[4].weight = model.encoder[4].weight\n",
        "\n",
        "    y_hat, a, mean, logvar = dd_model(inputs)\n",
        "    # Compute loss and backpropagate\n",
        "    loss = dd_criterion(y_hat, targets)\n",
        "    loss.backward()\n",
        "    dd_optimizer.step()\n",
        "\n",
        "    running_loss += loss.item()\n",
        "\n",
        "    # Print average loss for epoch (every n epochs)\n",
        "    if epoch % display_every_n_epochs == 0:\n",
        "      print('Epoch %d loss: %.3f' % (epoch, running_loss / len(X_dd)))\n",
        "\n",
        "  current_y_cat = y_hat.cpu().detach().numpy().T\n",
        "  if enable_transfer_learning:\n",
        "    current_y_test_cat = transfer_model.forward(torch.Tensor(test[week]['X'][cat].T.values).unsqueeze(1).to(device))[0].cpu().detach().numpy().T\n",
        "  else:\n",
        "    current_y_test_cat = model.forward(torch.Tensor(test[week]['X'][cat].T.values).unsqueeze(1).to(device))[0].cpu().detach().numpy().T\n",
        "\n",
        "  return current_y_cat, current_y_test_cat"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "g1ZHk6ztEbiA"
      },
      "source": [
        "### Hyperparameters and variables"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "lB_J2C9V-mxJ"
      },
      "outputs": [],
      "source": [
        "# Define hyperparameters\n",
        "input_size = 168\n",
        "output_size = 168\n",
        "num_filters = 25\n",
        "filter_size = 10\n",
        "encoding_dim = 64\n",
        "dsc_learning_rate = 0.001\n",
        "vsc_learning_rate = 0.0005\n",
        "\n",
        "num_epochs = 351\n",
        "num_epochs_vsc_transfer = 100\n",
        "nb_displays = 4\n",
        "display_every_n_epochs = num_epochs // nb_displays\n",
        "target_ind = 8\n",
        "\n",
        "appliance_categories = list(train[0]['X'].keys())\n",
        "weeks_to_train = len(train) - 1 #*"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "wS3y_R2VRii7"
      },
      "outputs": [],
      "source": [
        "#weeks_to_train = 2"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "_ggnL7izEgtP"
      },
      "source": [
        "### **Training blocks**"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "WZQn4xzIEkwt"
      },
      "source": [
        "#### DSC"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "colK2a1K-C0b",
        "outputId": "bd305b35-faa3-4d32-d21a-033cddd9bc7e"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "WEEK 0\n",
            "----> Training for fridge\n",
            "Epoch 0 loss: 861.994\n",
            "Epoch 87 loss: 3.899\n",
            "Epoch 174 loss: 1.630\n",
            "Epoch 261 loss: 0.907\n",
            "Epoch 348 loss: 0.587\n",
            "----> DD step for fridge\n",
            "Epoch 0 loss: 827.836\n",
            "Epoch 87 loss: 347.682\n",
            "Epoch 174 loss: 258.773\n",
            "Epoch 261 loss: 214.529\n",
            "Epoch 348 loss: 188.609\n",
            "----> Training for washing_drying\n",
            "Epoch 0 loss: 7762.971\n",
            "Epoch 87 loss: 37.458\n",
            "Epoch 174 loss: 26.292\n",
            "Epoch 261 loss: 16.653\n",
            "Epoch 348 loss: 11.778\n",
            "----> DD step for washing_drying\n",
            "Epoch 0 loss: 11054.108\n",
            "Epoch 87 loss: 3551.653\n",
            "Epoch 174 loss: 2095.890\n",
            "Epoch 261 loss: 1529.769\n",
            "Epoch 348 loss: 1312.544\n",
            "----> Training for computer_tv\n",
            "Epoch 0 loss: 335.069\n",
            "Epoch 87 loss: 1.476\n",
            "Epoch 174 loss: 0.734\n",
            "Epoch 261 loss: 0.452\n",
            "Epoch 348 loss: 0.303\n",
            "----> DD step for computer_tv\n",
            "Epoch 0 loss: 12566.654\n",
            "Epoch 87 loss: 381.483\n",
            "Epoch 174 loss: 240.728\n",
            "Epoch 261 loss: 172.141\n",
            "Epoch 348 loss: 148.864\n",
            "----> Training for heating\n",
            "Epoch 0 loss: 2001.107\n",
            "Epoch 87 loss: 0.978\n",
            "Epoch 174 loss: 0.694\n",
            "Epoch 261 loss: 0.568\n",
            "Epoch 348 loss: 0.442\n",
            "----> DD step for heating\n",
            "Epoch 0 loss: 10571.474\n",
            "Epoch 87 loss: 2098.227\n",
            "Epoch 174 loss: 1988.364\n",
            "Epoch 261 loss: 1685.686\n",
            "Epoch 348 loss: 1315.441\n",
            "WEEK 1\n",
            "----> Training for fridge\n",
            "Epoch 0 loss: 671.325\n",
            "Epoch 87 loss: 3.063\n",
            "Epoch 174 loss: 1.309\n",
            "Epoch 261 loss: 0.789\n",
            "Epoch 348 loss: 0.535\n",
            "----> DD step for fridge\n",
            "Epoch 0 loss: 1435.767\n",
            "Epoch 87 loss: 408.432\n",
            "Epoch 174 loss: 296.339\n",
            "Epoch 261 loss: 249.148\n",
            "Epoch 348 loss: 213.357\n",
            "----> Training for washing_drying\n",
            "Epoch 0 loss: 8854.280\n",
            "Epoch 87 loss: 29.901\n",
            "Epoch 174 loss: 15.655\n",
            "Epoch 261 loss: 9.399\n",
            "Epoch 348 loss: 6.587\n",
            "----> DD step for washing_drying\n",
            "Epoch 0 loss: 8907.074\n",
            "Epoch 87 loss: 3455.325\n",
            "Epoch 174 loss: 2272.898\n",
            "Epoch 261 loss: 1631.958\n",
            "Epoch 348 loss: 1323.427\n",
            "----> Training for computer_tv\n",
            "Epoch 0 loss: 345.767\n",
            "Epoch 87 loss: 1.067\n",
            "Epoch 174 loss: 0.511\n",
            "Epoch 261 loss: 0.326\n",
            "Epoch 348 loss: 0.236\n",
            "----> DD step for computer_tv\n",
            "Epoch 0 loss: 521.255\n",
            "Epoch 87 loss: 117.406\n",
            "Epoch 174 loss: 80.234\n",
            "Epoch 261 loss: 64.188\n",
            "Epoch 348 loss: 53.800\n",
            "----> Training for heating\n",
            "Epoch 0 loss: 3165.493\n",
            "Epoch 87 loss: 1.268\n",
            "Epoch 174 loss: 0.803\n",
            "Epoch 261 loss: 0.541\n",
            "Epoch 348 loss: 0.380\n",
            "----> DD step for heating\n",
            "Epoch 0 loss: 6118.073\n",
            "Epoch 87 loss: 3055.751\n",
            "Epoch 174 loss: 2125.681\n",
            "Epoch 261 loss: 1469.281\n",
            "Epoch 348 loss: 1322.939\n",
            "WEEK 2\n",
            "----> Training for fridge\n",
            "Epoch 0 loss: 1048.934\n",
            "Epoch 87 loss: 6.978\n",
            "Epoch 174 loss: 2.750\n",
            "Epoch 261 loss: 1.518\n",
            "Epoch 348 loss: 0.974\n",
            "----> DD step for fridge\n",
            "Epoch 0 loss: 2168.839\n",
            "Epoch 87 loss: 591.062\n",
            "Epoch 174 loss: 362.379\n",
            "Epoch 261 loss: 287.552\n",
            "Epoch 348 loss: 244.598\n",
            "----> Training for washing_drying\n",
            "Epoch 0 loss: 8028.826\n",
            "Epoch 87 loss: 29.836\n",
            "Epoch 174 loss: 5.104\n",
            "Epoch 261 loss: 3.082\n",
            "Epoch 348 loss: 2.397\n",
            "----> DD step for washing_drying\n",
            "Epoch 0 loss: 8097.995\n",
            "Epoch 87 loss: 2260.024\n",
            "Epoch 174 loss: 1238.581\n",
            "Epoch 261 loss: 825.427\n",
            "Epoch 348 loss: 641.908\n",
            "----> Training for computer_tv\n",
            "Epoch 0 loss: 224.557\n",
            "Epoch 87 loss: 1.313\n",
            "Epoch 174 loss: 0.555\n",
            "Epoch 261 loss: 0.286\n",
            "Epoch 348 loss: 0.188\n",
            "----> DD step for computer_tv\n",
            "Epoch 0 loss: 1178.159\n",
            "Epoch 87 loss: 276.047\n",
            "Epoch 174 loss: 125.843\n",
            "Epoch 261 loss: 94.831\n",
            "Epoch 348 loss: 82.128\n",
            "----> Training for heating\n",
            "Epoch 0 loss: 2054.535\n",
            "Epoch 87 loss: 1.312\n",
            "Epoch 174 loss: 0.310\n",
            "Epoch 261 loss: 0.263\n",
            "Epoch 348 loss: 0.232\n",
            "----> DD step for heating\n",
            "Epoch 0 loss: 3414.769\n",
            "Epoch 87 loss: 2002.064\n",
            "Epoch 174 loss: 1219.294\n",
            "Epoch 261 loss: 1036.229\n",
            "Epoch 348 loss: 932.113\n",
            "WEEK 3\n",
            "----> Training for fridge\n",
            "Epoch 0 loss: 920.488\n",
            "Epoch 87 loss: 4.827\n",
            "Epoch 174 loss: 2.039\n",
            "Epoch 261 loss: 1.098\n",
            "Epoch 348 loss: 0.716\n",
            "----> DD step for fridge\n",
            "Epoch 0 loss: 1475.088\n",
            "Epoch 87 loss: 425.851\n",
            "Epoch 174 loss: 349.886\n",
            "Epoch 261 loss: 286.868\n",
            "Epoch 348 loss: 241.479\n",
            "----> Training for washing_drying\n",
            "Epoch 0 loss: 8763.896\n",
            "Epoch 87 loss: 30.135\n",
            "Epoch 174 loss: 20.127\n",
            "Epoch 261 loss: 16.132\n",
            "Epoch 348 loss: 15.366\n",
            "----> DD step for washing_drying\n",
            "Epoch 0 loss: 9010.964\n",
            "Epoch 87 loss: 2165.429\n",
            "Epoch 174 loss: 1081.166\n",
            "Epoch 261 loss: 693.444\n",
            "Epoch 348 loss: 547.432\n",
            "----> Training for computer_tv\n",
            "Epoch 0 loss: 397.158\n",
            "Epoch 87 loss: 1.670\n",
            "Epoch 174 loss: 0.629\n",
            "Epoch 261 loss: 0.346\n",
            "Epoch 348 loss: 0.242\n",
            "----> DD step for computer_tv\n",
            "Epoch 0 loss: 629.479\n",
            "Epoch 87 loss: 158.078\n",
            "Epoch 174 loss: 107.934\n",
            "Epoch 261 loss: 89.154\n",
            "Epoch 348 loss: 77.680\n",
            "----> Training for heating\n",
            "Epoch 0 loss: 3242.700\n",
            "Epoch 87 loss: 6.799\n",
            "Epoch 174 loss: 1.545\n",
            "Epoch 261 loss: 0.939\n",
            "Epoch 348 loss: 0.853\n",
            "----> DD step for heating\n",
            "Epoch 0 loss: 25731.224\n",
            "Epoch 87 loss: 2595.267\n",
            "Epoch 174 loss: 2141.742\n",
            "Epoch 261 loss: 1528.258\n",
            "Epoch 348 loss: 1302.747\n",
            "WEEK 4\n",
            "----> Training for fridge\n",
            "Epoch 0 loss: 832.359\n",
            "Epoch 87 loss: 3.571\n",
            "Epoch 174 loss: 1.236\n",
            "Epoch 261 loss: 0.694\n",
            "Epoch 348 loss: 0.465\n",
            "----> DD step for fridge\n",
            "Epoch 0 loss: 907.275\n",
            "Epoch 87 loss: 353.457\n",
            "Epoch 174 loss: 291.843\n",
            "Epoch 261 loss: 264.611\n",
            "Epoch 348 loss: 256.994\n",
            "----> Training for washing_drying\n",
            "Epoch 0 loss: 6329.039\n",
            "Epoch 87 loss: 14.305\n",
            "Epoch 174 loss: 9.573\n",
            "Epoch 261 loss: 7.943\n",
            "Epoch 348 loss: 6.743\n",
            "----> DD step for washing_drying\n",
            "Epoch 0 loss: 6689.716\n",
            "Epoch 87 loss: 1510.660\n",
            "Epoch 174 loss: 665.804\n",
            "Epoch 261 loss: 407.497\n",
            "Epoch 348 loss: 304.403\n",
            "----> Training for computer_tv\n",
            "Epoch 0 loss: 82.200\n",
            "Epoch 87 loss: 0.894\n",
            "Epoch 174 loss: 0.340\n",
            "Epoch 261 loss: 0.207\n",
            "Epoch 348 loss: 0.143\n",
            "----> DD step for computer_tv\n",
            "Epoch 0 loss: 856.999\n",
            "Epoch 87 loss: 142.552\n",
            "Epoch 174 loss: 93.078\n",
            "Epoch 261 loss: 73.619\n",
            "Epoch 348 loss: 63.736\n",
            "----> Training for heating\n",
            "Epoch 0 loss: 4275.798\n",
            "Epoch 87 loss: 1.430\n",
            "Epoch 174 loss: 1.169\n",
            "Epoch 261 loss: 1.028\n",
            "Epoch 348 loss: 0.894\n",
            "----> DD step for heating\n",
            "Epoch 0 loss: 4654.474\n",
            "Epoch 87 loss: 914.987\n",
            "Epoch 174 loss: 470.379\n",
            "Epoch 261 loss: 322.687\n",
            "Epoch 348 loss: 250.766\n",
            "WEEK 5\n",
            "----> Training for fridge\n",
            "Epoch 0 loss: 802.259\n",
            "Epoch 87 loss: 5.190\n",
            "Epoch 174 loss: 1.868\n",
            "Epoch 261 loss: 1.032\n",
            "Epoch 348 loss: 0.691\n",
            "----> DD step for fridge\n",
            "Epoch 0 loss: 1172.636\n",
            "Epoch 87 loss: 425.601\n",
            "Epoch 174 loss: 337.802\n",
            "Epoch 261 loss: 299.779\n",
            "Epoch 348 loss: 269.513\n",
            "----> Training for washing_drying\n",
            "Epoch 0 loss: 6321.254\n",
            "Epoch 87 loss: 17.834\n",
            "Epoch 174 loss: 15.090\n",
            "Epoch 261 loss: 6.715\n",
            "Epoch 348 loss: 4.642\n",
            "----> DD step for washing_drying\n",
            "Epoch 0 loss: 13487.148\n",
            "Epoch 87 loss: 4740.899\n",
            "Epoch 174 loss: 2927.913\n",
            "Epoch 261 loss: 2062.849\n",
            "Epoch 348 loss: 1589.717\n",
            "----> Training for computer_tv\n",
            "Epoch 0 loss: 303.351\n",
            "Epoch 87 loss: 2.033\n",
            "Epoch 174 loss: 0.896\n",
            "Epoch 261 loss: 0.482\n",
            "Epoch 348 loss: 0.282\n",
            "----> DD step for computer_tv\n",
            "Epoch 0 loss: 6445.003\n",
            "Epoch 87 loss: 337.951\n",
            "Epoch 174 loss: 314.812\n",
            "Epoch 261 loss: 187.173\n",
            "Epoch 348 loss: 137.783\n",
            "----> Training for heating\n",
            "Epoch 0 loss: 3772.056\n",
            "Epoch 87 loss: 4.525\n",
            "Epoch 174 loss: 1.107\n",
            "Epoch 261 loss: 0.517\n",
            "Epoch 348 loss: 0.400\n",
            "----> DD step for heating\n",
            "Epoch 0 loss: 3960.828\n",
            "Epoch 87 loss: 1346.791\n",
            "Epoch 174 loss: 1128.418\n",
            "Epoch 261 loss: 1034.864\n",
            "Epoch 348 loss: 463.951\n",
            "WEEK 6\n",
            "----> Training for fridge\n",
            "Epoch 0 loss: 842.941\n",
            "Epoch 87 loss: 4.457\n",
            "Epoch 174 loss: 1.466\n",
            "Epoch 261 loss: 0.768\n",
            "Epoch 348 loss: 0.494\n",
            "----> DD step for fridge\n",
            "Epoch 0 loss: 1254.969\n",
            "Epoch 87 loss: 389.388\n",
            "Epoch 174 loss: 285.269\n",
            "Epoch 261 loss: 236.276\n",
            "Epoch 348 loss: 208.198\n",
            "----> Training for washing_drying\n",
            "Epoch 0 loss: 10112.422\n",
            "Epoch 87 loss: 18.491\n",
            "Epoch 174 loss: 12.129\n",
            "Epoch 261 loss: 11.477\n",
            "Epoch 348 loss: 7.080\n",
            "----> DD step for washing_drying\n",
            "Epoch 0 loss: 11326.412\n",
            "Epoch 87 loss: 4115.202\n",
            "Epoch 174 loss: 3107.643\n",
            "Epoch 261 loss: 2766.206\n",
            "Epoch 348 loss: 2577.448\n",
            "----> Training for computer_tv\n",
            "Epoch 0 loss: 218.507\n",
            "Epoch 87 loss: 1.220\n",
            "Epoch 174 loss: 0.552\n",
            "Epoch 261 loss: 0.332\n",
            "Epoch 348 loss: 0.221\n",
            "----> DD step for computer_tv\n",
            "Epoch 0 loss: 1750.870\n",
            "Epoch 87 loss: 175.205\n",
            "Epoch 174 loss: 113.423\n",
            "Epoch 261 loss: 94.749\n",
            "Epoch 348 loss: 83.984\n",
            "----> Training for heating\n",
            "Epoch 0 loss: 3573.691\n",
            "Epoch 87 loss: 1.845\n",
            "Epoch 174 loss: 1.346\n",
            "Epoch 261 loss: 0.879\n",
            "Epoch 348 loss: 0.514\n",
            "----> DD step for heating\n",
            "Epoch 0 loss: 5574.072\n",
            "Epoch 87 loss: 1832.524\n",
            "Epoch 174 loss: 1143.343\n",
            "Epoch 261 loss: 654.223\n",
            "Epoch 348 loss: 508.939\n",
            "WEEK 7\n",
            "----> Training for fridge\n",
            "Epoch 0 loss: 548.341\n",
            "Epoch 87 loss: 3.489\n",
            "Epoch 174 loss: 1.564\n",
            "Epoch 261 loss: 0.946\n",
            "Epoch 348 loss: 0.639\n",
            "----> DD step for fridge\n",
            "Epoch 0 loss: 960.179\n",
            "Epoch 87 loss: 449.821\n",
            "Epoch 174 loss: 348.311\n",
            "Epoch 261 loss: 322.288\n",
            "Epoch 348 loss: 271.855\n",
            "----> Training for washing_drying\n",
            "Epoch 0 loss: 8927.852\n",
            "Epoch 87 loss: 22.013\n",
            "Epoch 174 loss: 5.610\n",
            "Epoch 261 loss: 3.976\n",
            "Epoch 348 loss: 3.754\n",
            "----> DD step for washing_drying\n",
            "Epoch 0 loss: 8874.328\n",
            "Epoch 87 loss: 2858.924\n",
            "Epoch 174 loss: 1790.898\n",
            "Epoch 261 loss: 1425.362\n",
            "Epoch 348 loss: 1218.887\n",
            "----> Training for computer_tv\n",
            "Epoch 0 loss: 243.771\n",
            "Epoch 87 loss: 1.832\n",
            "Epoch 174 loss: 0.714\n",
            "Epoch 261 loss: 0.351\n",
            "Epoch 348 loss: 0.213\n",
            "----> DD step for computer_tv\n",
            "Epoch 0 loss: 377.204\n",
            "Epoch 87 loss: 217.785\n",
            "Epoch 174 loss: 99.917\n",
            "Epoch 261 loss: 79.341\n",
            "Epoch 348 loss: 67.185\n",
            "----> Training for heating\n",
            "Epoch 0 loss: 2580.391\n",
            "Epoch 87 loss: 0.653\n",
            "Epoch 174 loss: 0.561\n",
            "Epoch 261 loss: 0.525\n",
            "Epoch 348 loss: 0.486\n",
            "----> DD step for heating\n",
            "Epoch 0 loss: 2641.169\n",
            "Epoch 87 loss: 1736.707\n",
            "Epoch 174 loss: 689.417\n",
            "Epoch 261 loss: 349.368\n",
            "Epoch 348 loss: 339.149\n",
            "WEEK 8\n",
            "----> Training for fridge\n",
            "Epoch 0 loss: 847.026\n",
            "Epoch 87 loss: 4.408\n",
            "Epoch 174 loss: 1.541\n",
            "Epoch 261 loss: 0.801\n",
            "Epoch 348 loss: 0.507\n",
            "----> DD step for fridge\n",
            "Epoch 0 loss: 9857.720\n",
            "Epoch 87 loss: 900.056\n",
            "Epoch 174 loss: 847.234\n",
            "Epoch 261 loss: 432.050\n",
            "Epoch 348 loss: 354.330\n",
            "----> Training for washing_drying\n",
            "Epoch 0 loss: 9237.358\n",
            "Epoch 87 loss: 60.296\n",
            "Epoch 174 loss: 16.264\n",
            "Epoch 261 loss: 12.845\n",
            "Epoch 348 loss: 12.115\n",
            "----> DD step for washing_drying\n",
            "Epoch 0 loss: 30696.889\n",
            "Epoch 87 loss: 4830.880\n",
            "Epoch 174 loss: 3840.555\n",
            "Epoch 261 loss: 3322.486\n",
            "Epoch 348 loss: 3000.606\n",
            "----> Training for computer_tv\n",
            "Epoch 0 loss: 360.701\n",
            "Epoch 87 loss: 1.627\n",
            "Epoch 174 loss: 0.474\n",
            "Epoch 261 loss: 0.262\n",
            "Epoch 348 loss: 0.173\n",
            "----> DD step for computer_tv\n",
            "Epoch 0 loss: 1605.327\n",
            "Epoch 87 loss: 383.682\n",
            "Epoch 174 loss: 178.243\n",
            "Epoch 261 loss: 130.911\n",
            "Epoch 348 loss: 101.028\n",
            "----> Training for heating\n",
            "Epoch 0 loss: 5045.818\n",
            "Epoch 87 loss: 1.687\n",
            "Epoch 174 loss: 1.326\n",
            "Epoch 261 loss: 1.228\n",
            "Epoch 348 loss: 1.142\n",
            "----> DD step for heating\n",
            "Epoch 0 loss: 6107.370\n",
            "Epoch 87 loss: 2939.736\n",
            "Epoch 174 loss: 2466.573\n",
            "Epoch 261 loss: 2260.631\n",
            "Epoch 348 loss: 2182.383\n",
            "WEEK 9\n",
            "----> Training for fridge\n",
            "Epoch 0 loss: 1070.509\n",
            "Epoch 87 loss: 6.991\n",
            "Epoch 174 loss: 2.740\n",
            "Epoch 261 loss: 1.438\n",
            "Epoch 348 loss: 0.935\n",
            "----> DD step for fridge\n",
            "Epoch 0 loss: 1121.852\n",
            "Epoch 87 loss: 619.647\n",
            "Epoch 174 loss: 514.191\n",
            "Epoch 261 loss: 473.879\n",
            "Epoch 348 loss: 438.333\n",
            "----> Training for washing_drying\n",
            "Epoch 0 loss: 6530.730\n",
            "Epoch 87 loss: 33.504\n",
            "Epoch 174 loss: 18.785\n",
            "Epoch 261 loss: 15.129\n",
            "Epoch 348 loss: 7.316\n",
            "----> DD step for washing_drying\n",
            "Epoch 0 loss: 7808.419\n",
            "Epoch 87 loss: 2947.693\n",
            "Epoch 174 loss: 1867.706\n",
            "Epoch 261 loss: 1231.609\n",
            "Epoch 348 loss: 834.333\n",
            "----> Training for computer_tv\n",
            "Epoch 0 loss: 314.137\n",
            "Epoch 87 loss: 2.488\n",
            "Epoch 174 loss: 0.800\n",
            "Epoch 261 loss: 0.387\n",
            "Epoch 348 loss: 0.244\n",
            "----> DD step for computer_tv\n",
            "Epoch 0 loss: 1200.496\n",
            "Epoch 87 loss: 164.224\n",
            "Epoch 174 loss: 108.006\n",
            "Epoch 261 loss: 87.405\n",
            "Epoch 348 loss: 74.045\n",
            "----> Training for heating\n",
            "Epoch 0 loss: 4247.882\n",
            "Epoch 87 loss: 1.630\n",
            "Epoch 174 loss: 1.016\n",
            "Epoch 261 loss: 0.836\n",
            "Epoch 348 loss: 0.645\n",
            "----> DD step for heating\n",
            "Epoch 0 loss: 4800.560\n",
            "Epoch 87 loss: 2601.232\n",
            "Epoch 174 loss: 1962.247\n",
            "Epoch 261 loss: 1616.267\n",
            "Epoch 348 loss: 902.465\n",
            "WEEK 10\n",
            "----> Training for fridge\n",
            "Epoch 0 loss: 859.239\n",
            "Epoch 87 loss: 6.347\n",
            "Epoch 174 loss: 2.881\n",
            "Epoch 261 loss: 1.477\n",
            "Epoch 348 loss: 0.886\n",
            "----> DD step for fridge\n",
            "Epoch 0 loss: 36278.952\n",
            "Epoch 87 loss: 996.428\n",
            "Epoch 174 loss: 925.277\n",
            "Epoch 261 loss: 866.378\n",
            "Epoch 348 loss: 510.819\n",
            "----> Training for washing_drying\n",
            "Epoch 0 loss: 7265.502\n",
            "Epoch 87 loss: 11.790\n",
            "Epoch 174 loss: 7.650\n",
            "Epoch 261 loss: 5.390\n",
            "Epoch 348 loss: 3.118\n",
            "----> DD step for washing_drying\n",
            "Epoch 0 loss: 7149.484\n",
            "Epoch 87 loss: 2794.071\n",
            "Epoch 174 loss: 1607.913\n",
            "Epoch 261 loss: 1006.545\n",
            "Epoch 348 loss: 742.472\n",
            "----> Training for computer_tv\n",
            "Epoch 0 loss: 279.961\n",
            "Epoch 87 loss: 1.570\n",
            "Epoch 174 loss: 0.587\n",
            "Epoch 261 loss: 0.344\n",
            "Epoch 348 loss: 0.222\n",
            "----> DD step for computer_tv\n",
            "Epoch 0 loss: 4992.663\n",
            "Epoch 87 loss: 327.857\n",
            "Epoch 174 loss: 252.923\n",
            "Epoch 261 loss: 145.956\n",
            "Epoch 348 loss: 98.665\n",
            "----> Training for heating\n",
            "Epoch 0 loss: 4240.002\n",
            "Epoch 87 loss: 0.793\n",
            "Epoch 174 loss: 0.728\n",
            "Epoch 261 loss: 0.680\n",
            "Epoch 348 loss: 0.629\n",
            "----> DD step for heating\n",
            "Epoch 0 loss: 4632.377\n",
            "Epoch 87 loss: 1427.203\n",
            "Epoch 174 loss: 804.176\n",
            "Epoch 261 loss: 781.952\n",
            "Epoch 348 loss: 773.125\n",
            "WEEK 11\n",
            "----> Training for fridge\n",
            "Epoch 0 loss: 633.788\n",
            "Epoch 87 loss: 3.691\n",
            "Epoch 174 loss: 1.801\n",
            "Epoch 261 loss: 1.234\n",
            "Epoch 348 loss: 0.906\n",
            "----> DD step for fridge\n",
            "Epoch 0 loss: 2331.612\n",
            "Epoch 87 loss: 622.233\n",
            "Epoch 174 loss: 421.124\n",
            "Epoch 261 loss: 352.187\n",
            "Epoch 348 loss: 310.033\n",
            "----> Training for washing_drying\n",
            "Epoch 0 loss: 8654.098\n",
            "Epoch 87 loss: 17.661\n",
            "Epoch 174 loss: 11.383\n",
            "Epoch 261 loss: 7.591\n",
            "Epoch 348 loss: 5.349\n",
            "----> DD step for washing_drying\n",
            "Epoch 0 loss: 17820.904\n",
            "Epoch 87 loss: 3909.670\n",
            "Epoch 174 loss: 2856.412\n",
            "Epoch 261 loss: 2238.837\n",
            "Epoch 348 loss: 1848.614\n",
            "----> Training for computer_tv\n",
            "Epoch 0 loss: 202.193\n",
            "Epoch 87 loss: 0.882\n",
            "Epoch 174 loss: 0.472\n",
            "Epoch 261 loss: 0.315\n",
            "Epoch 348 loss: 0.235\n",
            "----> DD step for computer_tv\n",
            "Epoch 0 loss: 729.119\n",
            "Epoch 87 loss: 131.364\n",
            "Epoch 174 loss: 90.410\n",
            "Epoch 261 loss: 76.144\n",
            "Epoch 348 loss: 65.957\n",
            "----> Training for heating\n",
            "Epoch 0 loss: 4288.928\n",
            "Epoch 87 loss: 0.877\n",
            "Epoch 174 loss: 0.289\n",
            "Epoch 261 loss: 0.212\n",
            "Epoch 348 loss: 0.182\n",
            "----> DD step for heating\n",
            "Epoch 0 loss: 27691.844\n",
            "Epoch 87 loss: 3323.665\n",
            "Epoch 174 loss: 2798.407\n",
            "Epoch 261 loss: 2563.945\n",
            "Epoch 348 loss: 2483.636\n",
            "WEEK 12\n",
            "----> Training for fridge\n",
            "Epoch 0 loss: 499.980\n",
            "Epoch 87 loss: 4.381\n",
            "Epoch 174 loss: 1.913\n",
            "Epoch 261 loss: 1.062\n",
            "Epoch 348 loss: 0.694\n",
            "----> DD step for fridge\n",
            "Epoch 0 loss: 1022.694\n",
            "Epoch 87 loss: 399.100\n",
            "Epoch 174 loss: 282.053\n",
            "Epoch 261 loss: 226.914\n",
            "Epoch 348 loss: 192.741\n",
            "----> Training for washing_drying\n",
            "Epoch 0 loss: 12681.028\n",
            "Epoch 87 loss: 18.600\n",
            "Epoch 174 loss: 16.615\n",
            "Epoch 261 loss: 15.818\n",
            "Epoch 348 loss: 9.316\n",
            "----> DD step for washing_drying\n",
            "Epoch 0 loss: 12928.022\n",
            "Epoch 87 loss: 4692.304\n",
            "Epoch 174 loss: 2916.032\n",
            "Epoch 261 loss: 1892.224\n",
            "Epoch 348 loss: 1429.409\n",
            "----> Training for computer_tv\n",
            "Epoch 0 loss: 365.566\n",
            "Epoch 87 loss: 2.092\n",
            "Epoch 174 loss: 1.437\n",
            "Epoch 261 loss: 0.831\n",
            "Epoch 348 loss: 0.696\n",
            "----> DD step for computer_tv\n",
            "Epoch 0 loss: 415.783\n",
            "Epoch 87 loss: 193.816\n",
            "Epoch 174 loss: 160.071\n",
            "Epoch 261 loss: 137.122\n",
            "Epoch 348 loss: 125.832\n",
            "----> Training for heating\n",
            "Epoch 0 loss: 3319.876\n",
            "Epoch 87 loss: 1.835\n",
            "Epoch 174 loss: 1.518\n",
            "Epoch 261 loss: 1.451\n",
            "Epoch 348 loss: 1.186\n",
            "----> DD step for heating\n",
            "Epoch 0 loss: 3522.066\n",
            "Epoch 87 loss: 1637.761\n",
            "Epoch 174 loss: 954.189\n",
            "Epoch 261 loss: 559.538\n",
            "Epoch 348 loss: 517.795\n",
            "WEEK 13\n",
            "----> Training for fridge\n",
            "Epoch 0 loss: 831.514\n",
            "Epoch 87 loss: 3.161\n",
            "Epoch 174 loss: 1.379\n",
            "Epoch 261 loss: 0.823\n",
            "Epoch 348 loss: 0.568\n",
            "----> DD step for fridge\n",
            "Epoch 0 loss: 1207.229\n",
            "Epoch 87 loss: 437.463\n",
            "Epoch 174 loss: 344.898\n",
            "Epoch 261 loss: 296.705\n",
            "Epoch 348 loss: 264.111\n",
            "----> Training for washing_drying\n",
            "Epoch 0 loss: 10141.799\n",
            "Epoch 87 loss: 12.008\n",
            "Epoch 174 loss: 3.390\n",
            "Epoch 261 loss: 1.452\n",
            "Epoch 348 loss: 1.289\n",
            "----> DD step for washing_drying\n",
            "Epoch 0 loss: 10247.398\n",
            "Epoch 87 loss: 3954.659\n",
            "Epoch 174 loss: 2538.627\n",
            "Epoch 261 loss: 1991.904\n",
            "Epoch 348 loss: 1703.200\n",
            "----> Training for computer_tv\n",
            "Epoch 0 loss: 275.132\n",
            "Epoch 87 loss: 0.982\n",
            "Epoch 174 loss: 0.512\n",
            "Epoch 261 loss: 0.317\n",
            "Epoch 348 loss: 0.229\n",
            "----> DD step for computer_tv\n",
            "Epoch 0 loss: 5819.234\n",
            "Epoch 87 loss: 325.977\n",
            "Epoch 174 loss: 276.894\n",
            "Epoch 261 loss: 184.128\n",
            "Epoch 348 loss: 124.423\n",
            "----> Training for heating\n",
            "Epoch 0 loss: 5418.195\n",
            "Epoch 87 loss: 6.306\n",
            "Epoch 174 loss: 4.786\n",
            "Epoch 261 loss: 0.402\n",
            "Epoch 348 loss: 0.331\n",
            "----> DD step for heating\n",
            "Epoch 0 loss: 6228.402\n",
            "Epoch 87 loss: 1943.218\n",
            "Epoch 174 loss: 745.368\n",
            "Epoch 261 loss: 424.187\n",
            "Epoch 348 loss: 317.949\n",
            "WEEK 14\n",
            "----> Training for fridge\n",
            "Epoch 0 loss: 706.865\n",
            "Epoch 87 loss: 3.103\n",
            "Epoch 174 loss: 1.177\n",
            "Epoch 261 loss: 0.665\n",
            "Epoch 348 loss: 0.451\n",
            "----> DD step for fridge\n",
            "Epoch 0 loss: 893.151\n",
            "Epoch 87 loss: 297.504\n",
            "Epoch 174 loss: 221.856\n",
            "Epoch 261 loss: 174.971\n",
            "Epoch 348 loss: 144.802\n",
            "----> Training for washing_drying\n",
            "Epoch 0 loss: 11554.930\n",
            "Epoch 87 loss: 45.752\n",
            "Epoch 174 loss: 30.689\n",
            "Epoch 261 loss: 27.098\n",
            "Epoch 348 loss: 23.752\n",
            "----> DD step for washing_drying\n",
            "Epoch 0 loss: 16809.179\n",
            "Epoch 87 loss: 4518.502\n",
            "Epoch 174 loss: 3086.734\n",
            "Epoch 261 loss: 2310.733\n",
            "Epoch 348 loss: 1833.526\n",
            "----> Training for computer_tv\n",
            "Epoch 0 loss: 343.232\n",
            "Epoch 87 loss: 1.615\n",
            "Epoch 174 loss: 0.677\n",
            "Epoch 261 loss: 0.317\n",
            "Epoch 348 loss: 0.219\n",
            "----> DD step for computer_tv\n",
            "Epoch 0 loss: 465.332\n",
            "Epoch 87 loss: 133.498\n",
            "Epoch 174 loss: 105.837\n",
            "Epoch 261 loss: 94.267\n",
            "Epoch 348 loss: 81.338\n",
            "----> Training for heating\n",
            "Epoch 0 loss: 4568.556\n",
            "Epoch 87 loss: 1.642\n",
            "Epoch 174 loss: 0.819\n",
            "Epoch 261 loss: 0.667\n",
            "Epoch 348 loss: 0.614\n",
            "----> DD step for heating\n",
            "Epoch 0 loss: 4562.650\n",
            "Epoch 87 loss: 1169.834\n",
            "Epoch 174 loss: 484.714\n",
            "Epoch 261 loss: 265.901\n",
            "Epoch 348 loss: 192.534\n",
            "WEEK 15\n",
            "----> Training for fridge\n",
            "Epoch 0 loss: 644.288\n",
            "Epoch 87 loss: 4.126\n",
            "Epoch 174 loss: 1.918\n",
            "Epoch 261 loss: 1.197\n",
            "Epoch 348 loss: 0.829\n",
            "----> DD step for fridge\n",
            "Epoch 0 loss: 3566.871\n",
            "Epoch 87 loss: 488.506\n",
            "Epoch 174 loss: 359.005\n",
            "Epoch 261 loss: 312.416\n",
            "Epoch 348 loss: 290.185\n",
            "----> Training for washing_drying\n",
            "Epoch 0 loss: 13274.387\n",
            "Epoch 87 loss: 50.222\n",
            "Epoch 174 loss: 24.870\n",
            "Epoch 261 loss: 16.123\n",
            "Epoch 348 loss: 15.201\n",
            "----> DD step for washing_drying\n",
            "Epoch 0 loss: 13055.809\n",
            "Epoch 87 loss: 3970.980\n",
            "Epoch 174 loss: 2165.890\n",
            "Epoch 261 loss: 1336.728\n",
            "Epoch 348 loss: 968.041\n",
            "----> Training for computer_tv\n",
            "Epoch 0 loss: 229.892\n",
            "Epoch 87 loss: 2.177\n",
            "Epoch 174 loss: 0.757\n",
            "Epoch 261 loss: 0.385\n",
            "Epoch 348 loss: 0.250\n",
            "----> DD step for computer_tv\n",
            "Epoch 0 loss: 373.611\n",
            "Epoch 87 loss: 131.303\n",
            "Epoch 174 loss: 89.058\n",
            "Epoch 261 loss: 72.590\n",
            "Epoch 348 loss: 64.137\n",
            "----> Training for heating\n",
            "Epoch 0 loss: 3301.983\n",
            "Epoch 87 loss: 0.660\n",
            "Epoch 174 loss: 0.358\n",
            "Epoch 261 loss: 0.313\n",
            "Epoch 348 loss: 0.285\n",
            "----> DD step for heating\n",
            "Epoch 0 loss: 3612.358\n",
            "Epoch 87 loss: 1138.575\n",
            "Epoch 174 loss: 892.644\n",
            "Epoch 261 loss: 847.828\n",
            "Epoch 348 loss: 738.841\n",
            "WEEK 16\n",
            "----> Training for fridge\n",
            "Epoch 0 loss: 558.999\n",
            "Epoch 87 loss: 2.686\n",
            "Epoch 174 loss: 0.859\n",
            "Epoch 261 loss: 0.477\n",
            "Epoch 348 loss: 0.346\n",
            "----> DD step for fridge\n",
            "Epoch 0 loss: 668.927\n",
            "Epoch 87 loss: 269.774\n",
            "Epoch 174 loss: 205.683\n",
            "Epoch 261 loss: 169.967\n",
            "Epoch 348 loss: 150.553\n",
            "----> Training for washing_drying\n",
            "Epoch 0 loss: 11774.149\n",
            "Epoch 87 loss: 38.662\n",
            "Epoch 174 loss: 13.742\n",
            "Epoch 261 loss: 10.549\n",
            "Epoch 348 loss: 9.995\n",
            "----> DD step for washing_drying\n",
            "Epoch 0 loss: 26668.615\n",
            "Epoch 87 loss: 5328.737\n",
            "Epoch 174 loss: 3398.492\n",
            "Epoch 261 loss: 2199.250\n",
            "Epoch 348 loss: 1520.204\n",
            "----> Training for computer_tv\n",
            "Epoch 0 loss: 192.810\n",
            "Epoch 87 loss: 1.128\n",
            "Epoch 174 loss: 0.497\n",
            "Epoch 261 loss: 0.269\n",
            "Epoch 348 loss: 0.172\n",
            "----> DD step for computer_tv\n",
            "Epoch 0 loss: 2519.027\n",
            "Epoch 87 loss: 255.153\n",
            "Epoch 174 loss: 171.273\n",
            "Epoch 261 loss: 126.052\n",
            "Epoch 348 loss: 107.727\n",
            "----> Training for heating\n",
            "Epoch 0 loss: 6019.031\n",
            "Epoch 87 loss: 9.747\n",
            "Epoch 174 loss: 3.917\n",
            "Epoch 261 loss: 2.415\n",
            "Epoch 348 loss: 1.443\n",
            "----> DD step for heating\n",
            "Epoch 0 loss: 9041.660\n",
            "Epoch 87 loss: 2478.229\n",
            "Epoch 174 loss: 1827.804\n",
            "Epoch 261 loss: 1462.091\n",
            "Epoch 348 loss: 1243.632\n",
            "WEEK 17\n",
            "----> Training for fridge\n",
            "Epoch 0 loss: 716.113\n",
            "Epoch 87 loss: 5.721\n",
            "Epoch 174 loss: 2.108\n",
            "Epoch 261 loss: 1.120\n",
            "Epoch 348 loss: 0.726\n",
            "----> DD step for fridge\n",
            "Epoch 0 loss: 838.183\n",
            "Epoch 87 loss: 359.283\n",
            "Epoch 174 loss: 287.195\n",
            "Epoch 261 loss: 252.325\n",
            "Epoch 348 loss: 231.963\n",
            "----> Training for washing_drying\n",
            "Epoch 0 loss: 10497.748\n",
            "Epoch 87 loss: 20.385\n",
            "Epoch 174 loss: 13.063\n",
            "Epoch 261 loss: 10.380\n",
            "Epoch 348 loss: 10.206\n",
            "----> DD step for washing_drying\n",
            "Epoch 0 loss: 13135.671\n",
            "Epoch 87 loss: 3683.084\n",
            "Epoch 174 loss: 2309.848\n",
            "Epoch 261 loss: 1604.942\n",
            "Epoch 348 loss: 1224.852\n",
            "----> Training for computer_tv\n",
            "Epoch 0 loss: 285.572\n",
            "Epoch 87 loss: 1.487\n",
            "Epoch 174 loss: 0.608\n",
            "Epoch 261 loss: 0.360\n",
            "Epoch 348 loss: 0.245\n",
            "----> DD step for computer_tv\n",
            "Epoch 0 loss: 376.060\n",
            "Epoch 87 loss: 129.906\n",
            "Epoch 174 loss: 79.169\n",
            "Epoch 261 loss: 65.697\n",
            "Epoch 348 loss: 58.544\n",
            "----> Training for heating\n",
            "Epoch 0 loss: 5753.500\n",
            "Epoch 87 loss: 7.203\n",
            "Epoch 174 loss: 0.753\n",
            "Epoch 261 loss: 0.537\n",
            "Epoch 348 loss: 0.367\n",
            "----> DD step for heating\n",
            "Epoch 0 loss: 5950.486\n",
            "Epoch 87 loss: 2132.446\n",
            "Epoch 174 loss: 1053.861\n",
            "Epoch 261 loss: 414.532\n",
            "Epoch 348 loss: 238.440\n",
            "WEEK 18\n",
            "----> Training for fridge\n",
            "Epoch 0 loss: 578.995\n",
            "Epoch 87 loss: 4.174\n",
            "Epoch 174 loss: 1.989\n",
            "Epoch 261 loss: 1.062\n",
            "Epoch 348 loss: 0.667\n",
            "----> DD step for fridge\n",
            "Epoch 0 loss: 1247.882\n",
            "Epoch 87 loss: 375.231\n",
            "Epoch 174 loss: 239.784\n",
            "Epoch 261 loss: 194.113\n",
            "Epoch 348 loss: 172.518\n",
            "----> Training for washing_drying\n",
            "Epoch 0 loss: 11370.163\n",
            "Epoch 87 loss: 24.672\n",
            "Epoch 174 loss: 17.259\n",
            "Epoch 261 loss: 13.431\n",
            "Epoch 348 loss: 11.492\n",
            "----> DD step for washing_drying\n",
            "Epoch 0 loss: 14533.888\n",
            "Epoch 87 loss: 3262.039\n",
            "Epoch 174 loss: 1612.272\n",
            "Epoch 261 loss: 829.312\n",
            "Epoch 348 loss: 496.914\n",
            "----> Training for computer_tv\n",
            "Epoch 0 loss: 219.506\n",
            "Epoch 87 loss: 1.021\n",
            "Epoch 174 loss: 0.557\n",
            "Epoch 261 loss: 0.368\n",
            "Epoch 348 loss: 0.257\n",
            "----> DD step for computer_tv\n",
            "Epoch 0 loss: 13325.911\n",
            "Epoch 87 loss: 294.526\n",
            "Epoch 174 loss: 267.007\n",
            "Epoch 261 loss: 248.068\n",
            "Epoch 348 loss: 235.104\n",
            "----> Training for heating\n",
            "Epoch 0 loss: 2748.745\n",
            "Epoch 87 loss: 0.782\n",
            "Epoch 174 loss: 0.397\n",
            "Epoch 261 loss: 0.303\n",
            "Epoch 348 loss: 0.248\n",
            "----> DD step for heating\n",
            "Epoch 0 loss: 3275.994\n",
            "Epoch 87 loss: 1173.445\n",
            "Epoch 174 loss: 690.995\n",
            "Epoch 261 loss: 577.949\n",
            "Epoch 348 loss: 270.609\n",
            "WEEK 19\n",
            "----> Training for fridge\n",
            "Epoch 0 loss: 628.140\n",
            "Epoch 87 loss: 3.553\n",
            "Epoch 174 loss: 1.743\n",
            "Epoch 261 loss: 1.124\n",
            "Epoch 348 loss: 0.803\n",
            "----> DD step for fridge\n",
            "Epoch 0 loss: 912.212\n",
            "Epoch 87 loss: 393.326\n",
            "Epoch 174 loss: 283.782\n",
            "Epoch 261 loss: 224.349\n",
            "Epoch 348 loss: 190.226\n",
            "----> Training for washing_drying\n",
            "Epoch 0 loss: 14331.008\n",
            "Epoch 87 loss: 25.984\n",
            "Epoch 174 loss: 16.451\n",
            "Epoch 261 loss: 15.846\n",
            "Epoch 348 loss: 10.223\n",
            "----> DD step for washing_drying\n",
            "Epoch 0 loss: 14923.041\n",
            "Epoch 87 loss: 4241.329\n",
            "Epoch 174 loss: 2243.774\n",
            "Epoch 261 loss: 1298.667\n",
            "Epoch 348 loss: 868.302\n",
            "----> Training for computer_tv\n",
            "Epoch 0 loss: 237.877\n",
            "Epoch 87 loss: 0.935\n",
            "Epoch 174 loss: 0.401\n",
            "Epoch 261 loss: 0.227\n",
            "Epoch 348 loss: 0.158\n",
            "----> DD step for computer_tv\n",
            "Epoch 0 loss: 2162.007\n",
            "Epoch 87 loss: 262.520\n",
            "Epoch 174 loss: 155.556\n",
            "Epoch 261 loss: 134.477\n",
            "Epoch 348 loss: 122.105\n",
            "----> Training for heating\n",
            "Epoch 0 loss: 4379.812\n",
            "Epoch 87 loss: 1.071\n",
            "Epoch 174 loss: 0.736\n",
            "Epoch 261 loss: 0.563\n",
            "Epoch 348 loss: 0.490\n",
            "----> DD step for heating\n",
            "Epoch 0 loss: 7870.998\n",
            "Epoch 87 loss: 1836.328\n",
            "Epoch 174 loss: 1143.608\n",
            "Epoch 261 loss: 829.959\n",
            "Epoch 348 loss: 619.491\n",
            "WEEK 20\n",
            "----> Training for fridge\n",
            "Epoch 0 loss: 618.673\n",
            "Epoch 87 loss: 3.051\n",
            "Epoch 174 loss: 1.580\n",
            "Epoch 261 loss: 1.012\n",
            "Epoch 348 loss: 0.702\n",
            "----> DD step for fridge\n",
            "Epoch 0 loss: 881.007\n",
            "Epoch 87 loss: 354.348\n",
            "Epoch 174 loss: 286.416\n",
            "Epoch 261 loss: 247.329\n",
            "Epoch 348 loss: 220.900\n",
            "----> Training for washing_drying\n",
            "Epoch 0 loss: 14015.977\n",
            "Epoch 87 loss: 16.524\n",
            "Epoch 174 loss: 9.067\n",
            "Epoch 261 loss: 7.822\n",
            "Epoch 348 loss: 7.448\n",
            "----> DD step for washing_drying\n",
            "Epoch 0 loss: 15735.278\n",
            "Epoch 87 loss: 4730.117\n",
            "Epoch 174 loss: 2889.027\n",
            "Epoch 261 loss: 1888.254\n",
            "Epoch 348 loss: 1288.347\n",
            "----> Training for computer_tv\n",
            "Epoch 0 loss: 349.336\n",
            "Epoch 87 loss: 1.468\n",
            "Epoch 174 loss: 0.551\n",
            "Epoch 261 loss: 0.342\n",
            "Epoch 348 loss: 0.239\n",
            "----> DD step for computer_tv\n",
            "Epoch 0 loss: 1202.694\n",
            "Epoch 87 loss: 202.487\n",
            "Epoch 174 loss: 135.792\n",
            "Epoch 261 loss: 106.976\n",
            "Epoch 348 loss: 90.969\n",
            "----> Training for heating\n",
            "Epoch 0 loss: 3643.663\n",
            "Epoch 87 loss: 9.096\n",
            "Epoch 174 loss: 1.131\n",
            "Epoch 261 loss: 0.572\n",
            "Epoch 348 loss: 0.383\n",
            "----> DD step for heating\n",
            "Epoch 0 loss: 3788.423\n",
            "Epoch 87 loss: 855.923\n",
            "Epoch 174 loss: 410.686\n",
            "Epoch 261 loss: 282.158\n",
            "Epoch 348 loss: 220.435\n",
            "WEEK 21\n",
            "----> Training for fridge\n",
            "Epoch 0 loss: 453.145\n",
            "Epoch 87 loss: 3.890\n",
            "Epoch 174 loss: 2.098\n",
            "Epoch 261 loss: 1.308\n",
            "Epoch 348 loss: 0.930\n",
            "----> DD step for fridge\n",
            "Epoch 0 loss: 5759.956\n",
            "Epoch 87 loss: 670.569\n",
            "Epoch 174 loss: 542.934\n",
            "Epoch 261 loss: 376.141\n",
            "Epoch 348 loss: 332.873\n",
            "----> Training for washing_drying\n",
            "Epoch 0 loss: 12985.102\n",
            "Epoch 87 loss: 25.651\n",
            "Epoch 174 loss: 17.758\n",
            "Epoch 261 loss: 13.370\n",
            "Epoch 348 loss: 12.235\n",
            "----> DD step for washing_drying\n",
            "Epoch 0 loss: 26361.998\n",
            "Epoch 87 loss: 6239.733\n",
            "Epoch 174 loss: 4287.459\n",
            "Epoch 261 loss: 3132.224\n",
            "Epoch 348 loss: 2461.798\n",
            "----> Training for computer_tv\n",
            "Epoch 0 loss: 257.742\n",
            "Epoch 87 loss: 0.720\n",
            "Epoch 174 loss: 0.404\n",
            "Epoch 261 loss: 0.249\n",
            "Epoch 348 loss: 0.172\n",
            "----> DD step for computer_tv\n",
            "Epoch 0 loss: 14010.386\n",
            "Epoch 87 loss: 373.210\n",
            "Epoch 174 loss: 334.569\n",
            "Epoch 261 loss: 312.272\n",
            "Epoch 348 loss: 299.560\n",
            "----> Training for heating\n",
            "Epoch 0 loss: 2138.931\n",
            "Epoch 87 loss: 5.296\n",
            "Epoch 174 loss: 3.419\n",
            "Epoch 261 loss: 2.083\n",
            "Epoch 348 loss: 1.034\n",
            "----> DD step for heating\n",
            "Epoch 0 loss: 3950.449\n",
            "Epoch 87 loss: 1725.096\n",
            "Epoch 174 loss: 1178.290\n",
            "Epoch 261 loss: 1075.340\n",
            "Epoch 348 loss: 1039.326\n",
            "WEEK 22\n",
            "----> Training for fridge\n",
            "Epoch 0 loss: 585.826\n",
            "Epoch 87 loss: 3.697\n",
            "Epoch 174 loss: 1.756\n",
            "Epoch 261 loss: 1.107\n",
            "Epoch 348 loss: 0.788\n",
            "----> DD step for fridge\n",
            "Epoch 0 loss: 1201.588\n",
            "Epoch 87 loss: 407.749\n",
            "Epoch 174 loss: 330.636\n",
            "Epoch 261 loss: 289.548\n",
            "Epoch 348 loss: 260.351\n",
            "----> Training for washing_drying\n",
            "Epoch 0 loss: 14222.552\n",
            "Epoch 87 loss: 21.566\n",
            "Epoch 174 loss: 9.869\n",
            "Epoch 261 loss: 7.743\n",
            "Epoch 348 loss: 6.857\n",
            "----> DD step for washing_drying\n",
            "Epoch 0 loss: 14390.197\n",
            "Epoch 87 loss: 5021.305\n",
            "Epoch 174 loss: 3097.888\n",
            "Epoch 261 loss: 2246.637\n",
            "Epoch 348 loss: 1873.198\n",
            "----> Training for computer_tv\n",
            "Epoch 0 loss: 184.867\n",
            "Epoch 87 loss: 0.685\n",
            "Epoch 174 loss: 0.382\n",
            "Epoch 261 loss: 0.256\n",
            "Epoch 348 loss: 0.188\n",
            "----> DD step for computer_tv\n",
            "Epoch 0 loss: 2030.580\n",
            "Epoch 87 loss: 229.402\n",
            "Epoch 174 loss: 162.428\n",
            "Epoch 261 loss: 128.715\n",
            "Epoch 348 loss: 117.275\n",
            "----> Training for heating\n",
            "Epoch 0 loss: 1894.977\n",
            "Epoch 87 loss: 0.233\n",
            "Epoch 174 loss: 0.155\n",
            "Epoch 261 loss: 0.133\n",
            "Epoch 348 loss: 0.119\n",
            "----> DD step for heating\n",
            "Epoch 0 loss: 4969.410\n",
            "Epoch 87 loss: 1415.069\n",
            "Epoch 174 loss: 1321.928\n",
            "Epoch 261 loss: 1256.025\n",
            "Epoch 348 loss: 855.423\n",
            "WEEK 23\n",
            "----> Training for fridge\n",
            "Epoch 0 loss: 531.167\n",
            "Epoch 87 loss: 4.210\n",
            "Epoch 174 loss: 1.683\n",
            "Epoch 261 loss: 0.899\n",
            "Epoch 348 loss: 0.553\n",
            "----> DD step for fridge\n",
            "Epoch 0 loss: 716.730\n",
            "Epoch 87 loss: 340.414\n",
            "Epoch 174 loss: 277.491\n",
            "Epoch 261 loss: 250.761\n",
            "Epoch 348 loss: 229.654\n",
            "----> Training for washing_drying\n",
            "Epoch 0 loss: 15860.380\n",
            "Epoch 87 loss: 47.828\n",
            "Epoch 174 loss: 21.097\n",
            "Epoch 261 loss: 16.170\n",
            "Epoch 348 loss: 14.966\n",
            "----> DD step for washing_drying\n",
            "Epoch 0 loss: 15968.750\n",
            "Epoch 87 loss: 4290.060\n",
            "Epoch 174 loss: 1898.752\n",
            "Epoch 261 loss: 927.184\n",
            "Epoch 348 loss: 514.554\n",
            "----> Training for computer_tv\n",
            "Epoch 0 loss: 127.442\n",
            "Epoch 87 loss: 0.548\n",
            "Epoch 174 loss: 0.304\n",
            "Epoch 261 loss: 0.206\n",
            "Epoch 348 loss: 0.151\n",
            "----> DD step for computer_tv\n",
            "Epoch 0 loss: 200.887\n",
            "Epoch 87 loss: 118.095\n",
            "Epoch 174 loss: 83.227\n",
            "Epoch 261 loss: 73.815\n",
            "Epoch 348 loss: 79.824\n",
            "----> Training for heating\n",
            "Epoch 0 loss: 4471.029\n",
            "Epoch 87 loss: 0.471\n",
            "Epoch 174 loss: 0.297\n",
            "Epoch 261 loss: 0.262\n",
            "Epoch 348 loss: 0.237\n",
            "----> DD step for heating\n",
            "Epoch 0 loss: 11079.304\n",
            "Epoch 87 loss: 5208.633\n",
            "Epoch 174 loss: 3604.034\n",
            "Epoch 261 loss: 1935.149\n",
            "Epoch 348 loss: 1457.779\n",
            "WEEK 24\n",
            "----> Training for fridge\n",
            "Epoch 0 loss: 480.811\n",
            "Epoch 87 loss: 2.422\n",
            "Epoch 174 loss: 0.949\n",
            "Epoch 261 loss: 0.579\n",
            "Epoch 348 loss: 0.413\n",
            "----> DD step for fridge\n",
            "Epoch 0 loss: 555.785\n",
            "Epoch 87 loss: 315.375\n",
            "Epoch 174 loss: 275.192\n",
            "Epoch 261 loss: 249.056\n",
            "Epoch 348 loss: 232.432\n",
            "----> Training for washing_drying\n",
            "Epoch 0 loss: 10988.102\n",
            "Epoch 87 loss: 24.008\n",
            "Epoch 174 loss: 6.490\n",
            "Epoch 261 loss: 4.003\n",
            "Epoch 348 loss: 3.401\n",
            "----> DD step for washing_drying\n",
            "Epoch 0 loss: 13733.153\n",
            "Epoch 87 loss: 4061.295\n",
            "Epoch 174 loss: 1636.582\n",
            "Epoch 261 loss: 999.809\n",
            "Epoch 348 loss: 776.031\n",
            "----> Training for computer_tv\n",
            "Epoch 0 loss: 171.268\n",
            "Epoch 87 loss: 0.546\n",
            "Epoch 174 loss: 0.229\n",
            "Epoch 261 loss: 0.134\n",
            "Epoch 348 loss: 0.091\n",
            "----> DD step for computer_tv\n",
            "Epoch 0 loss: 265.502\n",
            "Epoch 87 loss: 129.341\n",
            "Epoch 174 loss: 93.180\n",
            "Epoch 261 loss: 83.574\n",
            "Epoch 348 loss: 78.436\n",
            "----> Training for heating\n",
            "Epoch 0 loss: 3091.705\n",
            "Epoch 87 loss: 5.041\n",
            "Epoch 174 loss: 0.334\n",
            "Epoch 261 loss: 0.285\n",
            "Epoch 348 loss: 0.264\n",
            "----> DD step for heating\n",
            "Epoch 0 loss: 6910.274\n",
            "Epoch 87 loss: 2213.489\n",
            "Epoch 174 loss: 1548.639\n",
            "Epoch 261 loss: 1343.715\n",
            "Epoch 348 loss: 1088.219\n",
            "WEEK 25\n",
            "----> Training for fridge\n",
            "Epoch 0 loss: 641.482\n",
            "Epoch 87 loss: 4.780\n",
            "Epoch 174 loss: 2.124\n",
            "Epoch 261 loss: 1.126\n",
            "Epoch 348 loss: 0.777\n",
            "----> DD step for fridge\n",
            "Epoch 0 loss: 1417.103\n",
            "Epoch 87 loss: 469.552\n",
            "Epoch 174 loss: 336.009\n",
            "Epoch 261 loss: 293.448\n",
            "Epoch 348 loss: 255.125\n",
            "----> Training for washing_drying\n",
            "Epoch 0 loss: 10395.769\n",
            "Epoch 87 loss: 81.189\n",
            "Epoch 174 loss: 18.528\n",
            "Epoch 261 loss: 13.258\n",
            "Epoch 348 loss: 10.886\n",
            "----> DD step for washing_drying\n",
            "Epoch 0 loss: 11269.371\n",
            "Epoch 87 loss: 3525.251\n",
            "Epoch 174 loss: 2067.569\n",
            "Epoch 261 loss: 1302.381\n",
            "Epoch 348 loss: 884.140\n",
            "----> Training for computer_tv\n",
            "Epoch 0 loss: 136.555\n",
            "Epoch 87 loss: 0.583\n",
            "Epoch 174 loss: 0.270\n",
            "Epoch 261 loss: 0.161\n",
            "Epoch 348 loss: 0.107\n",
            "----> DD step for computer_tv\n",
            "Epoch 0 loss: 4680.523\n",
            "Epoch 87 loss: 253.005\n",
            "Epoch 174 loss: 237.669\n",
            "Epoch 261 loss: 132.963\n",
            "Epoch 348 loss: 110.886\n",
            "----> Training for heating\n",
            "Epoch 0 loss: 3441.132\n",
            "Epoch 87 loss: 1.146\n",
            "Epoch 174 loss: 0.532\n",
            "Epoch 261 loss: 0.459\n",
            "Epoch 348 loss: 0.423\n",
            "----> DD step for heating\n",
            "Epoch 0 loss: 3305.649\n",
            "Epoch 87 loss: 1098.710\n",
            "Epoch 174 loss: 534.590\n",
            "Epoch 261 loss: 418.840\n",
            "Epoch 348 loss: 385.017\n",
            "WEEK 26\n",
            "----> Training for fridge\n",
            "Epoch 0 loss: 554.698\n",
            "Epoch 87 loss: 3.012\n",
            "Epoch 174 loss: 1.271\n",
            "Epoch 261 loss: 0.829\n",
            "Epoch 348 loss: 0.600\n",
            "----> DD step for fridge\n",
            "Epoch 0 loss: 3809.005\n",
            "Epoch 87 loss: 619.655\n",
            "Epoch 174 loss: 591.205\n",
            "Epoch 261 loss: 348.139\n",
            "Epoch 348 loss: 283.823\n",
            "----> Training for washing_drying\n",
            "Epoch 0 loss: 15528.315\n",
            "Epoch 87 loss: 24.277\n",
            "Epoch 174 loss: 15.955\n",
            "Epoch 261 loss: 13.818\n",
            "Epoch 348 loss: 12.710\n",
            "----> DD step for washing_drying\n",
            "Epoch 0 loss: 20412.397\n",
            "Epoch 87 loss: 3636.715\n",
            "Epoch 174 loss: 2279.644\n",
            "Epoch 261 loss: 1642.459\n",
            "Epoch 348 loss: 1194.030\n",
            "----> Training for computer_tv\n",
            "Epoch 0 loss: 197.057\n",
            "Epoch 87 loss: 0.674\n",
            "Epoch 174 loss: 0.294\n",
            "Epoch 261 loss: 0.171\n",
            "Epoch 348 loss: 0.119\n",
            "----> DD step for computer_tv\n",
            "Epoch 0 loss: 6831.139\n",
            "Epoch 87 loss: 224.235\n",
            "Epoch 174 loss: 126.335\n",
            "Epoch 261 loss: 108.411\n",
            "Epoch 348 loss: 94.930\n",
            "----> Training for heating\n",
            "Epoch 0 loss: 4246.316\n",
            "Epoch 87 loss: 1.218\n",
            "Epoch 174 loss: 0.505\n",
            "Epoch 261 loss: 0.424\n",
            "Epoch 348 loss: 0.403\n",
            "----> DD step for heating\n",
            "Epoch 0 loss: 8768.314\n",
            "Epoch 87 loss: 1937.972\n",
            "Epoch 174 loss: 1380.873\n",
            "Epoch 261 loss: 1202.611\n",
            "Epoch 348 loss: 970.004\n",
            "WEEK 27\n",
            "----> Training for fridge\n",
            "Epoch 0 loss: 698.833\n",
            "Epoch 87 loss: 3.795\n",
            "Epoch 174 loss: 1.844\n",
            "Epoch 261 loss: 1.182\n",
            "Epoch 348 loss: 0.861\n",
            "----> DD step for fridge\n",
            "Epoch 0 loss: 761.477\n",
            "Epoch 87 loss: 323.954\n",
            "Epoch 174 loss: 247.324\n",
            "Epoch 261 loss: 201.239\n",
            "Epoch 348 loss: 170.864\n",
            "----> Training for washing_drying\n",
            "Epoch 0 loss: 15262.726\n",
            "Epoch 87 loss: 31.080\n",
            "Epoch 174 loss: 23.753\n",
            "Epoch 261 loss: 21.845\n",
            "Epoch 348 loss: 10.165\n",
            "----> DD step for washing_drying\n",
            "Epoch 0 loss: 16814.874\n",
            "Epoch 87 loss: 4581.063\n",
            "Epoch 174 loss: 2441.766\n",
            "Epoch 261 loss: 1605.501\n",
            "Epoch 348 loss: 1289.079\n",
            "----> Training for computer_tv\n",
            "Epoch 0 loss: 198.102\n",
            "Epoch 87 loss: 0.810\n",
            "Epoch 174 loss: 0.350\n",
            "Epoch 261 loss: 0.217\n",
            "Epoch 348 loss: 0.152\n",
            "----> DD step for computer_tv\n",
            "Epoch 0 loss: 17904.204\n",
            "Epoch 87 loss: 278.164\n",
            "Epoch 174 loss: 255.523\n",
            "Epoch 261 loss: 241.371\n",
            "Epoch 348 loss: 231.198\n",
            "----> Training for heating\n",
            "Epoch 0 loss: 4251.574\n",
            "Epoch 87 loss: 0.957\n",
            "Epoch 174 loss: 0.473\n",
            "Epoch 261 loss: 0.406\n",
            "Epoch 348 loss: 0.362\n",
            "----> DD step for heating\n",
            "Epoch 0 loss: 28652.151\n",
            "Epoch 87 loss: 4357.981\n",
            "Epoch 174 loss: 4092.212\n",
            "Epoch 261 loss: 3461.455\n",
            "Epoch 348 loss: 3020.246\n",
            "WEEK 28\n",
            "----> Training for fridge\n",
            "Epoch 0 loss: 631.264\n",
            "Epoch 87 loss: 5.505\n",
            "Epoch 174 loss: 3.017\n",
            "Epoch 261 loss: 2.178\n",
            "Epoch 348 loss: 1.744\n",
            "----> DD step for fridge\n",
            "Epoch 0 loss: 918.912\n",
            "Epoch 87 loss: 338.197\n",
            "Epoch 174 loss: 249.224\n",
            "Epoch 261 loss: 203.341\n",
            "Epoch 348 loss: 180.168\n",
            "----> Training for washing_drying\n",
            "Epoch 0 loss: 10694.844\n",
            "Epoch 87 loss: 46.801\n",
            "Epoch 174 loss: 15.722\n",
            "Epoch 261 loss: 11.015\n",
            "Epoch 348 loss: 6.240\n",
            "----> DD step for washing_drying\n",
            "Epoch 0 loss: 12034.822\n",
            "Epoch 87 loss: 3249.974\n",
            "Epoch 174 loss: 2017.517\n",
            "Epoch 261 loss: 1348.065\n",
            "Epoch 348 loss: 981.170\n",
            "----> Training for computer_tv\n",
            "Epoch 0 loss: 210.447\n",
            "Epoch 87 loss: 0.699\n",
            "Epoch 174 loss: 0.389\n",
            "Epoch 261 loss: 0.264\n",
            "Epoch 348 loss: 0.183\n",
            "----> DD step for computer_tv\n",
            "Epoch 0 loss: 245.384\n",
            "Epoch 87 loss: 98.719\n",
            "Epoch 174 loss: 72.940\n",
            "Epoch 261 loss: 65.874\n",
            "Epoch 348 loss: 59.490\n",
            "----> Training for heating\n",
            "Epoch 0 loss: 2590.863\n",
            "Epoch 87 loss: 0.677\n",
            "Epoch 174 loss: 0.512\n",
            "Epoch 261 loss: 0.402\n",
            "Epoch 348 loss: 0.294\n",
            "----> DD step for heating\n",
            "Epoch 0 loss: 3302.790\n",
            "Epoch 87 loss: 1624.813\n",
            "Epoch 174 loss: 1171.172\n",
            "Epoch 261 loss: 977.715\n",
            "Epoch 348 loss: 836.473\n",
            "WEEK 29\n",
            "----> Training for fridge\n",
            "Epoch 0 loss: 737.252\n",
            "Epoch 87 loss: 4.347\n",
            "Epoch 174 loss: 2.138\n",
            "Epoch 261 loss: 1.382\n",
            "Epoch 348 loss: 1.002\n",
            "----> DD step for fridge\n",
            "Epoch 0 loss: 951.838\n",
            "Epoch 87 loss: 411.137\n",
            "Epoch 174 loss: 282.280\n",
            "Epoch 261 loss: 231.045\n",
            "Epoch 348 loss: 207.777\n",
            "----> Training for washing_drying\n",
            "Epoch 0 loss: 14032.500\n",
            "Epoch 87 loss: 69.355\n",
            "Epoch 174 loss: 23.410\n",
            "Epoch 261 loss: 9.213\n",
            "Epoch 348 loss: 7.313\n",
            "----> DD step for washing_drying\n",
            "Epoch 0 loss: 14442.575\n",
            "Epoch 87 loss: 5221.607\n",
            "Epoch 174 loss: 3173.962\n",
            "Epoch 261 loss: 2151.377\n",
            "Epoch 348 loss: 1537.922\n",
            "----> Training for computer_tv\n",
            "Epoch 0 loss: 218.321\n",
            "Epoch 87 loss: 1.148\n",
            "Epoch 174 loss: 0.506\n",
            "Epoch 261 loss: 0.262\n",
            "Epoch 348 loss: 0.165\n",
            "----> DD step for computer_tv\n",
            "Epoch 0 loss: 899.454\n",
            "Epoch 87 loss: 202.596\n",
            "Epoch 174 loss: 139.650\n",
            "Epoch 261 loss: 113.457\n",
            "Epoch 348 loss: 98.449\n",
            "----> Training for heating\n",
            "Epoch 0 loss: 3705.149\n",
            "Epoch 87 loss: 2.407\n",
            "Epoch 174 loss: 1.302\n",
            "Epoch 261 loss: 1.161\n",
            "Epoch 348 loss: 1.015\n",
            "----> DD step for heating\n",
            "Epoch 0 loss: 5747.339\n",
            "Epoch 87 loss: 1747.349\n",
            "Epoch 174 loss: 890.624\n",
            "Epoch 261 loss: 673.863\n",
            "Epoch 348 loss: 622.947\n",
            "WEEK 30\n",
            "----> Training for fridge\n",
            "Epoch 0 loss: 759.680\n",
            "Epoch 87 loss: 4.585\n",
            "Epoch 174 loss: 2.417\n",
            "Epoch 261 loss: 1.519\n",
            "Epoch 348 loss: 1.029\n",
            "----> DD step for fridge\n",
            "Epoch 0 loss: 6661.471\n",
            "Epoch 87 loss: 602.773\n",
            "Epoch 174 loss: 470.846\n",
            "Epoch 261 loss: 419.015\n",
            "Epoch 348 loss: 388.937\n",
            "----> Training for washing_drying\n",
            "Epoch 0 loss: 13838.365\n",
            "Epoch 87 loss: 23.011\n",
            "Epoch 174 loss: 12.829\n",
            "Epoch 261 loss: 11.480\n",
            "Epoch 348 loss: 8.952\n",
            "----> DD step for washing_drying\n",
            "Epoch 0 loss: 19901.494\n",
            "Epoch 87 loss: 5793.164\n",
            "Epoch 174 loss: 3960.066\n",
            "Epoch 261 loss: 2764.875\n",
            "Epoch 348 loss: 2036.900\n",
            "----> Training for computer_tv\n",
            "Epoch 0 loss: 188.545\n",
            "Epoch 87 loss: 0.740\n",
            "Epoch 174 loss: 0.325\n",
            "Epoch 261 loss: 0.207\n",
            "Epoch 348 loss: 0.145\n",
            "----> DD step for computer_tv\n",
            "Epoch 0 loss: 5519.755\n",
            "Epoch 87 loss: 242.036\n",
            "Epoch 174 loss: 216.991\n",
            "Epoch 261 loss: 196.686\n",
            "Epoch 348 loss: 171.201\n",
            "----> Training for heating\n",
            "Epoch 0 loss: 4474.074\n",
            "Epoch 87 loss: 1.469\n",
            "Epoch 174 loss: 0.835\n",
            "Epoch 261 loss: 0.524\n",
            "Epoch 348 loss: 0.439\n",
            "----> DD step for heating\n",
            "Epoch 0 loss: 5194.912\n",
            "Epoch 87 loss: 1714.800\n",
            "Epoch 174 loss: 997.837\n",
            "Epoch 261 loss: 726.463\n",
            "Epoch 348 loss: 598.082\n",
            "WEEK 31\n",
            "----> Training for fridge\n",
            "Epoch 0 loss: 457.130\n",
            "Epoch 87 loss: 3.841\n",
            "Epoch 174 loss: 1.311\n",
            "Epoch 261 loss: 0.718\n",
            "Epoch 348 loss: 0.507\n",
            "----> DD step for fridge\n",
            "Epoch 0 loss: 1392.068\n",
            "Epoch 87 loss: 439.315\n",
            "Epoch 174 loss: 314.993\n",
            "Epoch 261 loss: 267.832\n",
            "Epoch 348 loss: 231.761\n",
            "----> Training for washing_drying\n",
            "Epoch 0 loss: 13601.026\n",
            "Epoch 87 loss: 45.293\n",
            "Epoch 174 loss: 19.975\n",
            "Epoch 261 loss: 12.994\n",
            "Epoch 348 loss: 11.205\n",
            "----> DD step for washing_drying\n",
            "Epoch 0 loss: 12290.733\n",
            "Epoch 87 loss: 2982.489\n",
            "Epoch 174 loss: 1214.690\n",
            "Epoch 261 loss: 661.625\n",
            "Epoch 348 loss: 442.162\n",
            "----> Training for computer_tv\n",
            "Epoch 0 loss: 162.013\n",
            "Epoch 87 loss: 0.722\n",
            "Epoch 174 loss: 0.295\n",
            "Epoch 261 loss: 0.176\n",
            "Epoch 348 loss: 0.116\n",
            "----> DD step for computer_tv\n",
            "Epoch 0 loss: 404.955\n",
            "Epoch 87 loss: 136.127\n",
            "Epoch 174 loss: 105.749\n",
            "Epoch 261 loss: 91.299\n",
            "Epoch 348 loss: 84.980\n",
            "----> Training for heating\n",
            "Epoch 0 loss: 4092.869\n",
            "Epoch 87 loss: 0.807\n",
            "Epoch 174 loss: 0.680\n",
            "Epoch 261 loss: 0.618\n",
            "Epoch 348 loss: 0.553\n",
            "----> DD step for heating\n",
            "Epoch 0 loss: 15569.956\n",
            "Epoch 87 loss: 2027.480\n",
            "Epoch 174 loss: 1333.746\n",
            "Epoch 261 loss: 1005.568\n",
            "Epoch 348 loss: 864.992\n",
            "WEEK 32\n",
            "----> Training for fridge\n",
            "Epoch 0 loss: 730.208\n",
            "Epoch 87 loss: 4.283\n",
            "Epoch 174 loss: 2.069\n",
            "Epoch 261 loss: 1.199\n",
            "Epoch 348 loss: 0.792\n",
            "----> DD step for fridge\n",
            "Epoch 0 loss: 805.323\n",
            "Epoch 87 loss: 393.754\n",
            "Epoch 174 loss: 318.587\n",
            "Epoch 261 loss: 286.480\n",
            "Epoch 348 loss: 260.650\n",
            "----> Training for washing_drying\n",
            "Epoch 0 loss: 9862.882\n",
            "Epoch 87 loss: 58.166\n",
            "Epoch 174 loss: 20.524\n",
            "Epoch 261 loss: 13.362\n",
            "Epoch 348 loss: 11.974\n",
            "----> DD step for washing_drying\n",
            "Epoch 0 loss: 10225.300\n",
            "Epoch 87 loss: 2804.506\n",
            "Epoch 174 loss: 1722.624\n",
            "Epoch 261 loss: 1234.322\n",
            "Epoch 348 loss: 991.802\n",
            "----> Training for computer_tv\n",
            "Epoch 0 loss: 198.499\n",
            "Epoch 87 loss: 0.804\n",
            "Epoch 174 loss: 0.359\n",
            "Epoch 261 loss: 0.214\n",
            "Epoch 348 loss: 0.146\n",
            "----> DD step for computer_tv\n",
            "Epoch 0 loss: 7588.674\n",
            "Epoch 87 loss: 247.607\n",
            "Epoch 174 loss: 224.114\n",
            "Epoch 261 loss: 167.347\n",
            "Epoch 348 loss: 126.686\n",
            "----> Training for heating\n",
            "Epoch 0 loss: 2783.818\n",
            "Epoch 87 loss: 1.252\n",
            "Epoch 174 loss: 1.039\n",
            "Epoch 261 loss: 0.858\n",
            "Epoch 348 loss: 0.724\n",
            "----> DD step for heating\n",
            "Epoch 0 loss: 4287.169\n",
            "Epoch 87 loss: 1710.418\n",
            "Epoch 174 loss: 1415.867\n",
            "Epoch 261 loss: 1289.631\n",
            "Epoch 348 loss: 925.843\n",
            "WEEK 33\n",
            "----> Training for fridge\n",
            "Epoch 0 loss: 662.079\n",
            "Epoch 87 loss: 3.710\n",
            "Epoch 174 loss: 1.657\n",
            "Epoch 261 loss: 0.936\n",
            "Epoch 348 loss: 0.635\n",
            "----> DD step for fridge\n",
            "Epoch 0 loss: 691.456\n",
            "Epoch 87 loss: 273.048\n",
            "Epoch 174 loss: 215.242\n",
            "Epoch 261 loss: 183.988\n",
            "Epoch 348 loss: 164.303\n",
            "----> Training for washing_drying\n",
            "Epoch 0 loss: 8543.955\n",
            "Epoch 87 loss: 29.908\n",
            "Epoch 174 loss: 24.349\n",
            "Epoch 261 loss: 15.817\n",
            "Epoch 348 loss: 15.182\n",
            "----> DD step for washing_drying\n",
            "Epoch 0 loss: 10079.768\n",
            "Epoch 87 loss: 3009.002\n",
            "Epoch 174 loss: 1821.071\n",
            "Epoch 261 loss: 1247.476\n",
            "Epoch 348 loss: 975.586\n",
            "----> Training for computer_tv\n",
            "Epoch 0 loss: 174.076\n",
            "Epoch 87 loss: 0.749\n",
            "Epoch 174 loss: 0.295\n",
            "Epoch 261 loss: 0.183\n",
            "Epoch 348 loss: 0.131\n",
            "----> DD step for computer_tv\n",
            "Epoch 0 loss: 204.812\n",
            "Epoch 87 loss: 89.926\n",
            "Epoch 174 loss: 77.004\n",
            "Epoch 261 loss: 66.325\n",
            "Epoch 348 loss: 59.802\n",
            "----> Training for heating\n",
            "Epoch 0 loss: 2435.780\n",
            "Epoch 87 loss: 0.649\n",
            "Epoch 174 loss: 0.542\n",
            "Epoch 261 loss: 0.479\n",
            "Epoch 348 loss: 0.430\n",
            "----> DD step for heating\n",
            "Epoch 0 loss: 2831.336\n",
            "Epoch 87 loss: 1079.417\n",
            "Epoch 174 loss: 809.172\n",
            "Epoch 261 loss: 738.586\n",
            "Epoch 348 loss: 561.380\n",
            "WEEK 34\n",
            "----> Training for fridge\n",
            "Epoch 0 loss: 588.118\n",
            "Epoch 87 loss: 4.118\n",
            "Epoch 174 loss: 1.762\n",
            "Epoch 261 loss: 0.919\n",
            "Epoch 348 loss: 0.585\n",
            "----> DD step for fridge\n",
            "Epoch 0 loss: 1796.098\n",
            "Epoch 87 loss: 546.017\n",
            "Epoch 174 loss: 290.315\n",
            "Epoch 261 loss: 239.790\n",
            "Epoch 348 loss: 206.669\n",
            "----> Training for washing_drying\n",
            "Epoch 0 loss: 12792.798\n",
            "Epoch 87 loss: 31.280\n",
            "Epoch 174 loss: 11.566\n",
            "Epoch 261 loss: 9.728\n",
            "Epoch 348 loss: 9.431\n",
            "----> DD step for washing_drying\n",
            "Epoch 0 loss: 13049.050\n",
            "Epoch 87 loss: 3407.818\n",
            "Epoch 174 loss: 1853.630\n",
            "Epoch 261 loss: 1328.153\n",
            "Epoch 348 loss: 1105.634\n",
            "----> Training for computer_tv\n",
            "Epoch 0 loss: 136.017\n",
            "Epoch 87 loss: 1.082\n",
            "Epoch 174 loss: 0.409\n",
            "Epoch 261 loss: 0.223\n",
            "Epoch 348 loss: 0.136\n",
            "----> DD step for computer_tv\n",
            "Epoch 0 loss: 14459.304\n",
            "Epoch 87 loss: 281.415\n",
            "Epoch 174 loss: 252.673\n",
            "Epoch 261 loss: 236.969\n",
            "Epoch 348 loss: 226.725\n",
            "----> Training for heating\n",
            "Epoch 0 loss: 4449.618\n",
            "Epoch 87 loss: 13.903\n",
            "Epoch 174 loss: 3.846\n",
            "Epoch 261 loss: 1.016\n",
            "Epoch 348 loss: 0.696\n",
            "----> DD step for heating\n",
            "Epoch 0 loss: 6591.725\n",
            "Epoch 87 loss: 1865.882\n",
            "Epoch 174 loss: 980.014\n",
            "Epoch 261 loss: 862.041\n",
            "Epoch 348 loss: 819.455\n",
            "training took 229.44 seconds\n"
          ]
        }
      ],
      "source": [
        "y_apps = []\n",
        "y_apps_test = []\n",
        "#weeks_to_train = 10 # len(train) - 1\n",
        "\n",
        "\n",
        "t = time.time()\n",
        "for week in range(weeks_to_train):\n",
        "  print('WEEK {}'.format(week))\n",
        "  current_y = dict()\n",
        "  current_y_test = dict()\n",
        "  for cat in appliance_categories:\n",
        "    current_y_cat, current_y_test_cat = train_on_week_and_category(week, cat, dsc_learning_rate, input_size, output_size, num_filters, filter_size, encoding_dim, num_epochs, display_every_n_epochs, enable_transfer_learning=False)\n",
        "\n",
        "    current_y[cat] = current_y_cat\n",
        "    current_y_test[cat] = current_y_test_cat\n",
        "\n",
        "  y_apps.append(current_y)\n",
        "  y_apps_test.append(current_y_test)\n",
        "\n",
        "print('training took {} seconds'.format(round(time.time() - t, 2)))"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "xGGa4FVAEmHX"
      },
      "source": [
        "#### Transfer DSC"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "oDmSTT9ABRmA",
        "outputId": "7d58ff90-a7b0-49ae-8e4c-f2fc6662ebe5"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "WEEK 0\n",
            "----> Training for fridge\n",
            "Epoch 0 loss: 1379.294\n",
            "Epoch 87 loss: 6.185\n",
            "Epoch 174 loss: 1.911\n",
            "Epoch 261 loss: 1.083\n",
            "Epoch 348 loss: 0.733\n",
            "----> Transfer training for fridge\n",
            "Epoch 0 loss: 2045.279\n",
            "Epoch 87 loss: 11.049\n",
            "Epoch 174 loss: 5.990\n",
            "Epoch 261 loss: 4.036\n",
            "Epoch 348 loss: 2.941\n",
            "----> DD step for fridge\n",
            "Epoch 0 loss: 7006.057\n",
            "Epoch 87 loss: 1168.569\n",
            "Epoch 174 loss: 612.549\n",
            "Epoch 261 loss: 527.167\n",
            "Epoch 348 loss: 460.100\n",
            "----> Training for washing_drying\n",
            "Epoch 0 loss: 13768.906\n",
            "Epoch 87 loss: 84.997\n",
            "Epoch 174 loss: 50.068\n",
            "Epoch 261 loss: 30.190\n",
            "Epoch 348 loss: 19.763\n",
            "----> Transfer training for washing_drying\n",
            "Epoch 0 loss: 19037.780\n",
            "Epoch 87 loss: 71.417\n",
            "Epoch 174 loss: 62.095\n",
            "Epoch 261 loss: 15.984\n",
            "Epoch 348 loss: 14.938\n",
            "----> DD step for washing_drying\n",
            "Epoch 0 loss: 17101.147\n",
            "Epoch 87 loss: 3481.550\n",
            "Epoch 174 loss: 2352.820\n",
            "Epoch 261 loss: 1869.531\n",
            "Epoch 348 loss: 1601.024\n",
            "----> Training for computer_tv\n",
            "Epoch 0 loss: 565.572\n",
            "Epoch 87 loss: 2.535\n",
            "Epoch 174 loss: 1.208\n",
            "Epoch 261 loss: 0.646\n",
            "Epoch 348 loss: 0.388\n",
            "----> Transfer training for computer_tv\n",
            "Epoch 0 loss: 545.522\n",
            "Epoch 87 loss: 3.116\n",
            "Epoch 174 loss: 1.349\n",
            "Epoch 261 loss: 0.836\n",
            "Epoch 348 loss: 0.607\n",
            "----> DD step for computer_tv\n",
            "Epoch 0 loss: 5550.756\n",
            "Epoch 87 loss: 621.821\n",
            "Epoch 174 loss: 512.114\n",
            "Epoch 261 loss: 236.463\n",
            "Epoch 348 loss: 170.727\n",
            "----> Training for heating\n",
            "Epoch 0 loss: 4044.165\n",
            "Epoch 87 loss: 2.426\n",
            "Epoch 174 loss: 2.021\n",
            "Epoch 261 loss: 1.761\n",
            "Epoch 348 loss: 1.409\n",
            "----> Transfer training for heating\n",
            "Epoch 0 loss: 4957.795\n",
            "Epoch 87 loss: 1.080\n",
            "Epoch 174 loss: 0.904\n",
            "Epoch 261 loss: 0.845\n",
            "Epoch 348 loss: 0.783\n",
            "----> DD step for heating\n",
            "Epoch 0 loss: 14798.383\n",
            "Epoch 87 loss: 2627.775\n",
            "Epoch 174 loss: 2522.131\n",
            "Epoch 261 loss: 2484.198\n",
            "Epoch 348 loss: 2464.844\n",
            "WEEK 1\n",
            "----> Training for fridge\n",
            "Epoch 0 loss: 1489.226\n",
            "Epoch 87 loss: 5.978\n",
            "Epoch 174 loss: 1.836\n",
            "Epoch 261 loss: 0.959\n",
            "Epoch 348 loss: 0.615\n",
            "----> Transfer training for fridge\n",
            "Epoch 0 loss: 2355.029\n",
            "Epoch 87 loss: 11.459\n",
            "Epoch 174 loss: 5.903\n",
            "Epoch 261 loss: 3.829\n",
            "Epoch 348 loss: 2.723\n",
            "----> DD step for fridge\n",
            "Epoch 0 loss: 3142.556\n",
            "Epoch 87 loss: 1084.142\n",
            "Epoch 174 loss: 835.842\n",
            "Epoch 261 loss: 669.780\n",
            "Epoch 348 loss: 596.165\n",
            "----> Training for washing_drying\n",
            "Epoch 0 loss: 14355.562\n",
            "Epoch 87 loss: 39.508\n",
            "Epoch 174 loss: 27.774\n",
            "Epoch 261 loss: 26.572\n",
            "Epoch 348 loss: 19.816\n",
            "----> Transfer training for washing_drying\n",
            "Epoch 0 loss: 22826.998\n",
            "Epoch 87 loss: 88.412\n",
            "Epoch 174 loss: 66.218\n",
            "Epoch 261 loss: 49.227\n",
            "Epoch 348 loss: 39.741\n",
            "----> DD step for washing_drying\n",
            "Epoch 0 loss: 50870.881\n",
            "Epoch 87 loss: 9442.659\n",
            "Epoch 174 loss: 6757.256\n",
            "Epoch 261 loss: 5595.639\n",
            "Epoch 348 loss: 4999.269\n",
            "----> Training for computer_tv\n",
            "Epoch 0 loss: 593.070\n",
            "Epoch 87 loss: 1.415\n",
            "Epoch 174 loss: 0.624\n",
            "Epoch 261 loss: 0.407\n",
            "Epoch 348 loss: 0.300\n",
            "----> Transfer training for computer_tv\n",
            "Epoch 0 loss: 509.182\n",
            "Epoch 87 loss: 2.468\n",
            "Epoch 174 loss: 1.413\n",
            "Epoch 261 loss: 0.994\n",
            "Epoch 348 loss: 0.756\n",
            "----> DD step for computer_tv\n",
            "Epoch 0 loss: 931.092\n",
            "Epoch 87 loss: 127.804\n",
            "Epoch 174 loss: 72.020\n",
            "Epoch 261 loss: 43.595\n",
            "Epoch 348 loss: 34.229\n",
            "----> Training for heating\n",
            "Epoch 0 loss: 3853.113\n",
            "Epoch 87 loss: 0.497\n",
            "Epoch 174 loss: 0.401\n",
            "Epoch 261 loss: 0.366\n",
            "Epoch 348 loss: 0.339\n",
            "----> Transfer training for heating\n",
            "Epoch 0 loss: 11959.262\n",
            "Epoch 87 loss: 1.927\n",
            "Epoch 174 loss: 1.482\n",
            "Epoch 261 loss: 1.309\n",
            "Epoch 348 loss: 1.164\n",
            "----> DD step for heating\n",
            "Epoch 0 loss: 13323.791\n",
            "Epoch 87 loss: 6573.202\n",
            "Epoch 174 loss: 5969.460\n",
            "Epoch 261 loss: 5710.504\n",
            "Epoch 348 loss: 3904.384\n",
            "WEEK 2\n",
            "----> Training for fridge\n",
            "Epoch 0 loss: 1716.524\n",
            "Epoch 87 loss: 9.368\n",
            "Epoch 174 loss: 3.542\n",
            "Epoch 261 loss: 1.986\n",
            "Epoch 348 loss: 1.287\n",
            "----> Transfer training for fridge\n",
            "Epoch 0 loss: 2637.411\n",
            "Epoch 87 loss: 19.961\n",
            "Epoch 174 loss: 10.524\n",
            "Epoch 261 loss: 6.264\n",
            "Epoch 348 loss: 4.035\n",
            "----> DD step for fridge\n",
            "Epoch 0 loss: 6002.457\n",
            "Epoch 87 loss: 919.404\n",
            "Epoch 174 loss: 640.725\n",
            "Epoch 261 loss: 530.230\n",
            "Epoch 348 loss: 475.927\n",
            "----> Training for washing_drying\n",
            "Epoch 0 loss: 14850.908\n",
            "Epoch 87 loss: 36.688\n",
            "Epoch 174 loss: 30.414\n",
            "Epoch 261 loss: 9.441\n",
            "Epoch 348 loss: 8.343\n",
            "----> Transfer training for washing_drying\n",
            "Epoch 0 loss: 16975.627\n",
            "Epoch 87 loss: 48.356\n",
            "Epoch 174 loss: 42.157\n",
            "Epoch 261 loss: 40.765\n",
            "Epoch 348 loss: 36.806\n",
            "----> DD step for washing_drying\n",
            "Epoch 0 loss: 18931.127\n",
            "Epoch 87 loss: 2592.899\n",
            "Epoch 174 loss: 997.996\n",
            "Epoch 261 loss: 832.220\n",
            "Epoch 348 loss: 768.726\n",
            "----> Training for computer_tv\n",
            "Epoch 0 loss: 341.980\n",
            "Epoch 87 loss: 1.561\n",
            "Epoch 174 loss: 0.522\n",
            "Epoch 261 loss: 0.276\n",
            "Epoch 348 loss: 0.179\n",
            "----> Transfer training for computer_tv\n",
            "Epoch 0 loss: 500.052\n",
            "Epoch 87 loss: 2.489\n",
            "Epoch 174 loss: 1.305\n",
            "Epoch 261 loss: 0.788\n",
            "Epoch 348 loss: 0.521\n",
            "----> DD step for computer_tv\n",
            "Epoch 0 loss: 7267.979\n",
            "Epoch 87 loss: 526.219\n",
            "Epoch 174 loss: 242.320\n",
            "Epoch 261 loss: 193.267\n",
            "Epoch 348 loss: 145.783\n",
            "----> Training for heating\n",
            "Epoch 0 loss: 2706.405\n",
            "Epoch 87 loss: 0.888\n",
            "Epoch 174 loss: 0.594\n",
            "Epoch 261 loss: 0.496\n",
            "Epoch 348 loss: 0.414\n",
            "----> Transfer training for heating\n",
            "Epoch 0 loss: 8471.098\n",
            "Epoch 87 loss: 0.932\n",
            "Epoch 174 loss: 0.833\n",
            "Epoch 261 loss: 0.749\n",
            "Epoch 348 loss: 0.678\n",
            "----> DD step for heating\n",
            "Epoch 0 loss: 92420.831\n",
            "Epoch 87 loss: 7122.334\n",
            "Epoch 174 loss: 7026.102\n",
            "Epoch 261 loss: 6955.752\n",
            "Epoch 348 loss: 6905.267\n",
            "WEEK 3\n",
            "----> Training for fridge\n",
            "Epoch 0 loss: 1184.013\n",
            "Epoch 87 loss: 6.230\n",
            "Epoch 174 loss: 2.155\n",
            "Epoch 261 loss: 1.078\n",
            "Epoch 348 loss: 0.675\n",
            "----> Transfer training for fridge\n",
            "Epoch 0 loss: 2289.318\n",
            "Epoch 87 loss: 11.547\n",
            "Epoch 174 loss: 6.542\n",
            "Epoch 261 loss: 4.610\n",
            "Epoch 348 loss: 3.618\n",
            "----> DD step for fridge\n",
            "Epoch 0 loss: 30405.006\n",
            "Epoch 87 loss: 2520.716\n",
            "Epoch 174 loss: 2429.146\n",
            "Epoch 261 loss: 1684.831\n",
            "Epoch 348 loss: 899.267\n",
            "----> Training for washing_drying\n",
            "Epoch 0 loss: 13022.198\n",
            "Epoch 87 loss: 41.069\n",
            "Epoch 174 loss: 35.450\n",
            "Epoch 261 loss: 25.855\n",
            "Epoch 348 loss: 24.939\n",
            "----> Transfer training for washing_drying\n",
            "Epoch 0 loss: 20068.839\n",
            "Epoch 87 loss: 24.016\n",
            "Epoch 174 loss: 17.492\n",
            "Epoch 261 loss: 16.742\n",
            "Epoch 348 loss: 16.184\n",
            "----> DD step for washing_drying\n",
            "Epoch 0 loss: 20309.652\n",
            "Epoch 87 loss: 4045.286\n",
            "Epoch 174 loss: 2118.650\n",
            "Epoch 261 loss: 1813.262\n",
            "Epoch 348 loss: 1732.903\n",
            "----> Training for computer_tv\n",
            "Epoch 0 loss: 789.271\n",
            "Epoch 87 loss: 3.358\n",
            "Epoch 174 loss: 1.270\n",
            "Epoch 261 loss: 0.661\n",
            "Epoch 348 loss: 0.398\n",
            "----> Transfer training for computer_tv\n",
            "Epoch 0 loss: 518.128\n",
            "Epoch 87 loss: 2.957\n",
            "Epoch 174 loss: 1.141\n",
            "Epoch 261 loss: 0.760\n",
            "Epoch 348 loss: 0.575\n",
            "----> DD step for computer_tv\n",
            "Epoch 0 loss: 18246.787\n",
            "Epoch 87 loss: 655.716\n",
            "Epoch 174 loss: 606.593\n",
            "Epoch 261 loss: 566.827\n",
            "Epoch 348 loss: 328.664\n",
            "----> Training for heating\n",
            "Epoch 0 loss: 2520.296\n",
            "Epoch 87 loss: 1.298\n",
            "Epoch 174 loss: 0.881\n",
            "Epoch 261 loss: 0.713\n",
            "Epoch 348 loss: 0.547\n",
            "----> Transfer training for heating\n",
            "Epoch 0 loss: 15027.298\n",
            "Epoch 87 loss: 7.037\n",
            "Epoch 174 loss: 6.484\n",
            "Epoch 261 loss: 6.103\n",
            "Epoch 348 loss: 5.760\n",
            "----> DD step for heating\n",
            "Epoch 0 loss: 14337.344\n",
            "Epoch 87 loss: 4768.320\n",
            "Epoch 174 loss: 3800.270\n",
            "Epoch 261 loss: 972.543\n",
            "Epoch 348 loss: 828.549\n",
            "WEEK 4\n",
            "----> Training for fridge\n",
            "Epoch 0 loss: 1241.701\n",
            "Epoch 87 loss: 4.793\n",
            "Epoch 174 loss: 1.969\n",
            "Epoch 261 loss: 1.157\n",
            "Epoch 348 loss: 0.765\n",
            "----> Transfer training for fridge\n",
            "Epoch 0 loss: 2517.144\n",
            "Epoch 87 loss: 18.311\n",
            "Epoch 174 loss: 7.133\n",
            "Epoch 261 loss: 4.480\n",
            "Epoch 348 loss: 3.224\n",
            "----> DD step for fridge\n",
            "Epoch 0 loss: 25157.003\n",
            "Epoch 87 loss: 1043.854\n",
            "Epoch 174 loss: 858.209\n",
            "Epoch 261 loss: 731.526\n",
            "Epoch 348 loss: 656.274\n",
            "----> Training for washing_drying\n",
            "Epoch 0 loss: 9584.404\n",
            "Epoch 87 loss: 41.715\n",
            "Epoch 174 loss: 18.930\n",
            "Epoch 261 loss: 13.515\n",
            "Epoch 348 loss: 6.368\n",
            "----> Transfer training for washing_drying\n",
            "Epoch 0 loss: 15245.342\n",
            "Epoch 87 loss: 37.350\n",
            "Epoch 174 loss: 25.442\n",
            "Epoch 261 loss: 13.027\n",
            "Epoch 348 loss: 11.968\n",
            "----> DD step for washing_drying\n",
            "Epoch 0 loss: 70600.625\n",
            "Epoch 87 loss: 6477.981\n",
            "Epoch 174 loss: 3244.676\n",
            "Epoch 261 loss: 2174.333\n",
            "Epoch 348 loss: 1805.316\n",
            "----> Training for computer_tv\n",
            "Epoch 0 loss: 622.786\n",
            "Epoch 87 loss: 1.507\n",
            "Epoch 174 loss: 0.564\n",
            "Epoch 261 loss: 0.379\n",
            "Epoch 348 loss: 0.294\n",
            "----> Transfer training for computer_tv\n",
            "Epoch 0 loss: 605.740\n",
            "Epoch 87 loss: 4.075\n",
            "Epoch 174 loss: 1.286\n",
            "Epoch 261 loss: 0.789\n",
            "Epoch 348 loss: 0.566\n",
            "----> DD step for computer_tv\n",
            "Epoch 0 loss: 13443.934\n",
            "Epoch 87 loss: 702.322\n",
            "Epoch 174 loss: 272.437\n",
            "Epoch 261 loss: 231.322\n",
            "Epoch 348 loss: 217.446\n",
            "----> Training for heating\n",
            "Epoch 0 loss: 1708.656\n",
            "Epoch 87 loss: 2.161\n",
            "Epoch 174 loss: 1.649\n",
            "Epoch 261 loss: 0.255\n",
            "Epoch 348 loss: 0.226\n",
            "----> Transfer training for heating\n",
            "Epoch 0 loss: 26975.819\n",
            "Epoch 87 loss: 4.290\n",
            "Epoch 174 loss: 1.555\n",
            "Epoch 261 loss: 1.445\n",
            "Epoch 348 loss: 1.329\n",
            "----> DD step for heating\n",
            "Epoch 0 loss: 26864.569\n",
            "Epoch 87 loss: 5668.934\n",
            "Epoch 174 loss: 3750.660\n",
            "Epoch 261 loss: 2750.188\n",
            "Epoch 348 loss: 458.368\n",
            "WEEK 5\n",
            "----> Training for fridge\n",
            "Epoch 0 loss: 1514.126\n",
            "Epoch 87 loss: 9.205\n",
            "Epoch 174 loss: 3.510\n",
            "Epoch 261 loss: 1.953\n",
            "Epoch 348 loss: 1.276\n",
            "----> Transfer training for fridge\n",
            "Epoch 0 loss: 2450.753\n",
            "Epoch 87 loss: 15.230\n",
            "Epoch 174 loss: 7.655\n",
            "Epoch 261 loss: 4.792\n",
            "Epoch 348 loss: 3.494\n",
            "----> DD step for fridge\n",
            "Epoch 0 loss: 19688.247\n",
            "Epoch 87 loss: 2543.587\n",
            "Epoch 174 loss: 1260.622\n",
            "Epoch 261 loss: 702.469\n",
            "Epoch 348 loss: 589.958\n",
            "----> Training for washing_drying\n",
            "Epoch 0 loss: 13119.702\n",
            "Epoch 87 loss: 40.854\n",
            "Epoch 174 loss: 17.796\n",
            "Epoch 261 loss: 12.053\n",
            "Epoch 348 loss: 9.461\n",
            "----> Transfer training for washing_drying\n",
            "Epoch 0 loss: 19882.317\n",
            "Epoch 87 loss: 28.604\n",
            "Epoch 174 loss: 23.095\n",
            "Epoch 261 loss: 22.037\n",
            "Epoch 348 loss: 20.643\n",
            "----> DD step for washing_drying\n",
            "Epoch 0 loss: 23966.352\n",
            "Epoch 87 loss: 4892.800\n",
            "Epoch 174 loss: 3246.247\n",
            "Epoch 261 loss: 2583.787\n",
            "Epoch 348 loss: 2328.171\n",
            "----> Training for computer_tv\n",
            "Epoch 0 loss: 583.711\n",
            "Epoch 87 loss: 2.870\n",
            "Epoch 174 loss: 0.933\n",
            "Epoch 261 loss: 0.484\n",
            "Epoch 348 loss: 0.283\n",
            "----> Transfer training for computer_tv\n",
            "Epoch 0 loss: 420.390\n",
            "Epoch 87 loss: 1.945\n",
            "Epoch 174 loss: 1.153\n",
            "Epoch 261 loss: 0.793\n",
            "Epoch 348 loss: 0.604\n",
            "----> DD step for computer_tv\n",
            "Epoch 0 loss: 613.034\n",
            "Epoch 87 loss: 174.860\n",
            "Epoch 174 loss: 115.257\n",
            "Epoch 261 loss: 90.912\n",
            "Epoch 348 loss: 83.445\n",
            "----> Training for heating\n",
            "Epoch 0 loss: 2101.761\n",
            "Epoch 87 loss: 0.996\n",
            "Epoch 174 loss: 0.574\n",
            "Epoch 261 loss: 0.165\n",
            "Epoch 348 loss: 0.127\n",
            "----> Transfer training for heating\n",
            "Epoch 0 loss: 19344.883\n",
            "Epoch 87 loss: 3.151\n",
            "Epoch 174 loss: 2.618\n",
            "Epoch 261 loss: 2.368\n",
            "Epoch 348 loss: 2.149\n",
            "----> DD step for heating\n",
            "Epoch 0 loss: 35783.256\n",
            "Epoch 87 loss: 7270.280\n",
            "Epoch 174 loss: 6257.014\n",
            "Epoch 261 loss: 5949.017\n",
            "Epoch 348 loss: 2240.382\n",
            "WEEK 6\n",
            "----> Training for fridge\n",
            "Epoch 0 loss: 1419.729\n",
            "Epoch 87 loss: 10.648\n",
            "Epoch 174 loss: 2.723\n",
            "Epoch 261 loss: 1.029\n",
            "Epoch 348 loss: 0.621\n",
            "----> Transfer training for fridge\n",
            "Epoch 0 loss: 1286.080\n",
            "Epoch 87 loss: 14.650\n",
            "Epoch 174 loss: 6.871\n",
            "Epoch 261 loss: 4.182\n",
            "Epoch 348 loss: 2.996\n",
            "----> DD step for fridge\n",
            "Epoch 0 loss: 47109.884\n",
            "Epoch 87 loss: 2278.016\n",
            "Epoch 174 loss: 2208.338\n",
            "Epoch 261 loss: 2171.265\n",
            "Epoch 348 loss: 2061.468\n",
            "----> Training for washing_drying\n",
            "Epoch 0 loss: 17103.010\n",
            "Epoch 87 loss: 30.648\n",
            "Epoch 174 loss: 27.417\n",
            "Epoch 261 loss: 20.762\n",
            "Epoch 348 loss: 17.802\n",
            "----> Transfer training for washing_drying\n",
            "Epoch 0 loss: 13505.964\n",
            "Epoch 87 loss: 29.300\n",
            "Epoch 174 loss: 28.584\n",
            "Epoch 261 loss: 14.168\n",
            "Epoch 348 loss: 13.705\n",
            "----> DD step for washing_drying\n",
            "Epoch 0 loss: 28112.884\n",
            "Epoch 87 loss: 6517.189\n",
            "Epoch 174 loss: 5903.024\n",
            "Epoch 261 loss: 4353.919\n",
            "Epoch 348 loss: 4038.491\n",
            "----> Training for computer_tv\n",
            "Epoch 0 loss: 717.568\n",
            "Epoch 87 loss: 3.489\n",
            "Epoch 174 loss: 1.482\n",
            "Epoch 261 loss: 0.716\n",
            "Epoch 348 loss: 0.442\n",
            "----> Transfer training for computer_tv\n",
            "Epoch 0 loss: 228.914\n",
            "Epoch 87 loss: 1.280\n",
            "Epoch 174 loss: 0.607\n",
            "Epoch 261 loss: 0.384\n",
            "Epoch 348 loss: 0.281\n",
            "----> DD step for computer_tv\n",
            "Epoch 0 loss: 5064.160\n",
            "Epoch 87 loss: 276.099\n",
            "Epoch 174 loss: 188.720\n",
            "Epoch 261 loss: 80.366\n",
            "Epoch 348 loss: 50.539\n",
            "----> Training for heating\n",
            "Epoch 0 loss: 5922.682\n",
            "Epoch 87 loss: 3.894\n",
            "Epoch 174 loss: 1.897\n",
            "Epoch 261 loss: 0.383\n",
            "Epoch 348 loss: 0.227\n",
            "----> Transfer training for heating\n",
            "Epoch 0 loss: 8564.068\n",
            "Epoch 87 loss: 1.601\n",
            "Epoch 174 loss: 1.271\n",
            "Epoch 261 loss: 1.141\n",
            "Epoch 348 loss: 1.018\n",
            "----> DD step for heating\n",
            "Epoch 0 loss: 14830.003\n",
            "Epoch 87 loss: 6280.189\n",
            "Epoch 174 loss: 271.730\n",
            "Epoch 261 loss: 61.456\n",
            "Epoch 348 loss: 41.702\n",
            "WEEK 7\n",
            "----> Training for fridge\n",
            "Epoch 0 loss: 1528.771\n",
            "Epoch 87 loss: 6.989\n",
            "Epoch 174 loss: 2.170\n",
            "Epoch 261 loss: 1.171\n",
            "Epoch 348 loss: 0.743\n",
            "----> Transfer training for fridge\n",
            "Epoch 0 loss: 1631.607\n",
            "Epoch 87 loss: 12.914\n",
            "Epoch 174 loss: 5.703\n",
            "Epoch 261 loss: 4.030\n",
            "Epoch 348 loss: 3.183\n",
            "----> DD step for fridge\n",
            "Epoch 0 loss: 7014.041\n",
            "Epoch 87 loss: 1110.199\n",
            "Epoch 174 loss: 570.278\n",
            "Epoch 261 loss: 462.820\n",
            "Epoch 348 loss: 406.973\n",
            "----> Training for washing_drying\n",
            "Epoch 0 loss: 17534.268\n",
            "Epoch 87 loss: 48.244\n",
            "Epoch 174 loss: 27.414\n",
            "Epoch 261 loss: 17.212\n",
            "Epoch 348 loss: 13.512\n",
            "----> Transfer training for washing_drying\n",
            "Epoch 0 loss: 7770.258\n",
            "Epoch 87 loss: 52.449\n",
            "Epoch 174 loss: 42.767\n",
            "Epoch 261 loss: 2.041\n",
            "Epoch 348 loss: 1.187\n",
            "----> DD step for washing_drying\n",
            "Epoch 0 loss: 7873.250\n",
            "Epoch 87 loss: 2261.673\n",
            "Epoch 174 loss: 1476.334\n",
            "Epoch 261 loss: 222.979\n",
            "Epoch 348 loss: 172.110\n",
            "----> Training for computer_tv\n",
            "Epoch 0 loss: 752.283\n",
            "Epoch 87 loss: 3.221\n",
            "Epoch 174 loss: 0.988\n",
            "Epoch 261 loss: 0.495\n",
            "Epoch 348 loss: 0.307\n",
            "----> Transfer training for computer_tv\n",
            "Epoch 0 loss: 343.078\n",
            "Epoch 87 loss: 2.868\n",
            "Epoch 174 loss: 1.367\n",
            "Epoch 261 loss: 0.781\n",
            "Epoch 348 loss: 0.519\n",
            "----> DD step for computer_tv\n",
            "Epoch 0 loss: 13783.905\n",
            "Epoch 87 loss: 398.032\n",
            "Epoch 174 loss: 206.847\n",
            "Epoch 261 loss: 136.282\n",
            "Epoch 348 loss: 89.914\n",
            "----> Training for heating\n",
            "Epoch 0 loss: 5053.963\n",
            "Epoch 87 loss: 1.182\n",
            "Epoch 174 loss: 1.070\n",
            "Epoch 261 loss: 1.007\n",
            "Epoch 348 loss: 0.909\n",
            "----> Transfer training for heating\n",
            "Epoch 0 loss: 3786.583\n",
            "Epoch 87 loss: 1.000\n",
            "Epoch 174 loss: 0.887\n",
            "Epoch 261 loss: 0.791\n",
            "Epoch 348 loss: 0.688\n",
            "----> DD step for heating\n",
            "Epoch 0 loss: 17465.638\n",
            "Epoch 87 loss: 1059.492\n",
            "Epoch 174 loss: 827.125\n",
            "Epoch 261 loss: 813.784\n",
            "Epoch 348 loss: 803.960\n",
            "WEEK 8\n",
            "----> Training for fridge\n",
            "Epoch 0 loss: 1395.230\n",
            "Epoch 87 loss: 5.867\n",
            "Epoch 174 loss: 1.843\n",
            "Epoch 261 loss: 0.979\n",
            "Epoch 348 loss: 0.634\n",
            "----> Transfer training for fridge\n",
            "Epoch 0 loss: 1604.848\n",
            "Epoch 87 loss: 10.943\n",
            "Epoch 174 loss: 5.321\n",
            "Epoch 261 loss: 3.657\n",
            "Epoch 348 loss: 2.867\n",
            "----> DD step for fridge\n",
            "Epoch 0 loss: 2697.705\n",
            "Epoch 87 loss: 815.188\n",
            "Epoch 174 loss: 564.930\n",
            "Epoch 261 loss: 472.582\n",
            "Epoch 348 loss: 412.540\n",
            "----> Training for washing_drying\n",
            "Epoch 0 loss: 17208.330\n",
            "Epoch 87 loss: 118.872\n",
            "Epoch 174 loss: 22.127\n",
            "Epoch 261 loss: 18.342\n",
            "Epoch 348 loss: 8.466\n",
            "----> Transfer training for washing_drying\n",
            "Epoch 0 loss: 16562.233\n",
            "Epoch 87 loss: 146.593\n",
            "Epoch 174 loss: 21.202\n",
            "Epoch 261 loss: 12.459\n",
            "Epoch 348 loss: 12.382\n",
            "----> DD step for washing_drying\n",
            "Epoch 0 loss: 18294.803\n",
            "Epoch 87 loss: 4461.637\n",
            "Epoch 174 loss: 2985.850\n",
            "Epoch 261 loss: 2660.134\n",
            "Epoch 348 loss: 2132.888\n",
            "----> Training for computer_tv\n",
            "Epoch 0 loss: 770.720\n",
            "Epoch 87 loss: 3.937\n",
            "Epoch 174 loss: 1.013\n",
            "Epoch 261 loss: 0.496\n",
            "Epoch 348 loss: 0.303\n",
            "----> Transfer training for computer_tv\n",
            "Epoch 0 loss: 443.226\n",
            "Epoch 87 loss: 4.004\n",
            "Epoch 174 loss: 1.199\n",
            "Epoch 261 loss: 0.551\n",
            "Epoch 348 loss: 0.363\n",
            "----> DD step for computer_tv\n",
            "Epoch 0 loss: 4448.339\n",
            "Epoch 87 loss: 257.835\n",
            "Epoch 174 loss: 146.762\n",
            "Epoch 261 loss: 126.566\n",
            "Epoch 348 loss: 104.445\n",
            "----> Training for heating\n",
            "Epoch 0 loss: 3255.099\n",
            "Epoch 87 loss: 2.801\n",
            "Epoch 174 loss: 2.650\n",
            "Epoch 261 loss: 2.512\n",
            "Epoch 348 loss: 2.400\n",
            "----> Transfer training for heating\n",
            "Epoch 0 loss: 25792.606\n",
            "Epoch 87 loss: 0.979\n",
            "Epoch 174 loss: 0.676\n",
            "Epoch 261 loss: 0.623\n",
            "Epoch 348 loss: 0.579\n",
            "----> DD step for heating\n",
            "Epoch 0 loss: 44839.841\n",
            "Epoch 87 loss: 6410.610\n",
            "Epoch 174 loss: 3937.978\n",
            "Epoch 261 loss: 2638.098\n",
            "Epoch 348 loss: 2150.066\n",
            "WEEK 9\n",
            "----> Training for fridge\n",
            "Epoch 0 loss: 1332.998\n",
            "Epoch 87 loss: 5.427\n",
            "Epoch 174 loss: 2.226\n",
            "Epoch 261 loss: 1.350\n",
            "Epoch 348 loss: 0.921\n",
            "----> Transfer training for fridge\n",
            "Epoch 0 loss: 3385.941\n",
            "Epoch 87 loss: 31.868\n",
            "Epoch 174 loss: 12.057\n",
            "Epoch 261 loss: 6.858\n",
            "Epoch 348 loss: 4.968\n",
            "----> DD step for fridge\n",
            "Epoch 0 loss: 15992.077\n",
            "Epoch 87 loss: 1971.876\n",
            "Epoch 174 loss: 1188.263\n",
            "Epoch 261 loss: 810.506\n",
            "Epoch 348 loss: 644.803\n",
            "----> Training for washing_drying\n",
            "Epoch 0 loss: 13022.738\n",
            "Epoch 87 loss: 69.034\n",
            "Epoch 174 loss: 51.711\n",
            "Epoch 261 loss: 39.966\n",
            "Epoch 348 loss: 30.276\n",
            "----> Transfer training for washing_drying\n",
            "Epoch 0 loss: 12241.294\n",
            "Epoch 87 loss: 56.466\n",
            "Epoch 174 loss: 55.344\n",
            "Epoch 261 loss: 47.445\n",
            "Epoch 348 loss: 39.799\n",
            "----> DD step for washing_drying\n",
            "Epoch 0 loss: 90637.350\n",
            "Epoch 87 loss: 12260.819\n",
            "Epoch 174 loss: 8961.109\n",
            "Epoch 261 loss: 5627.292\n",
            "Epoch 348 loss: 4378.229\n",
            "----> Training for computer_tv\n",
            "Epoch 0 loss: 657.399\n",
            "Epoch 87 loss: 2.780\n",
            "Epoch 174 loss: 1.143\n",
            "Epoch 261 loss: 0.674\n",
            "Epoch 348 loss: 0.486\n",
            "----> Transfer training for computer_tv\n",
            "Epoch 0 loss: 348.112\n",
            "Epoch 87 loss: 3.559\n",
            "Epoch 174 loss: 1.573\n",
            "Epoch 261 loss: 0.906\n",
            "Epoch 348 loss: 0.604\n",
            "----> DD step for computer_tv\n",
            "Epoch 0 loss: 36948.338\n",
            "Epoch 87 loss: 551.941\n",
            "Epoch 174 loss: 523.340\n",
            "Epoch 261 loss: 508.452\n",
            "Epoch 348 loss: 440.734\n",
            "----> Training for heating\n",
            "Epoch 0 loss: 2349.015\n",
            "Epoch 87 loss: 2.199\n",
            "Epoch 174 loss: 1.821\n",
            "Epoch 261 loss: 1.419\n",
            "Epoch 348 loss: 0.709\n",
            "----> Transfer training for heating\n",
            "Epoch 0 loss: 20465.669\n",
            "Epoch 87 loss: 93.605\n",
            "Epoch 174 loss: 0.852\n",
            "Epoch 261 loss: 0.789\n",
            "Epoch 348 loss: 0.753\n",
            "----> DD step for heating\n",
            "Epoch 0 loss: 22654.222\n",
            "Epoch 87 loss: 2147.153\n",
            "Epoch 174 loss: 788.281\n",
            "Epoch 261 loss: 304.398\n",
            "Epoch 348 loss: 148.523\n",
            "WEEK 10\n",
            "----> Training for fridge\n",
            "Epoch 0 loss: 1284.463\n",
            "Epoch 87 loss: 5.164\n",
            "Epoch 174 loss: 1.637\n",
            "Epoch 261 loss: 0.802\n",
            "Epoch 348 loss: 0.531\n",
            "----> Transfer training for fridge\n",
            "Epoch 0 loss: 2108.854\n",
            "Epoch 87 loss: 20.549\n",
            "Epoch 174 loss: 6.245\n",
            "Epoch 261 loss: 3.499\n",
            "Epoch 348 loss: 2.552\n",
            "----> DD step for fridge\n",
            "Epoch 0 loss: 3833.157\n",
            "Epoch 87 loss: 809.959\n",
            "Epoch 174 loss: 453.652\n",
            "Epoch 261 loss: 348.931\n",
            "Epoch 348 loss: 291.929\n",
            "----> Training for washing_drying\n",
            "Epoch 0 loss: 11761.384\n",
            "Epoch 87 loss: 53.054\n",
            "Epoch 174 loss: 39.000\n",
            "Epoch 261 loss: 34.453\n",
            "Epoch 348 loss: 22.200\n",
            "----> Transfer training for washing_drying\n",
            "Epoch 0 loss: 18504.180\n",
            "Epoch 87 loss: 41.249\n",
            "Epoch 174 loss: 32.481\n",
            "Epoch 261 loss: 29.708\n",
            "Epoch 348 loss: 22.084\n",
            "----> DD step for washing_drying\n",
            "Epoch 0 loss: 24034.222\n",
            "Epoch 87 loss: 3399.101\n",
            "Epoch 174 loss: 1450.112\n",
            "Epoch 261 loss: 691.250\n",
            "Epoch 348 loss: 353.607\n",
            "----> Training for computer_tv\n",
            "Epoch 0 loss: 523.325\n",
            "Epoch 87 loss: 1.885\n",
            "Epoch 174 loss: 0.863\n",
            "Epoch 261 loss: 0.590\n",
            "Epoch 348 loss: 0.438\n",
            "----> Transfer training for computer_tv\n",
            "Epoch 0 loss: 312.700\n",
            "Epoch 87 loss: 3.009\n",
            "Epoch 174 loss: 1.435\n",
            "Epoch 261 loss: 0.730\n",
            "Epoch 348 loss: 0.466\n",
            "----> DD step for computer_tv\n",
            "Epoch 0 loss: 30664.619\n",
            "Epoch 87 loss: 653.705\n",
            "Epoch 174 loss: 594.770\n",
            "Epoch 261 loss: 557.638\n",
            "Epoch 348 loss: 514.090\n",
            "----> Training for heating\n",
            "Epoch 0 loss: 385.989\n",
            "Epoch 87 loss: 0.258\n",
            "Epoch 174 loss: 0.170\n",
            "Epoch 261 loss: 0.069\n",
            "Epoch 348 loss: 0.060\n",
            "----> Transfer training for heating\n",
            "Epoch 0 loss: 28004.191\n",
            "Epoch 87 loss: 3.517\n",
            "Epoch 174 loss: 2.731\n",
            "Epoch 261 loss: 2.541\n",
            "Epoch 348 loss: 2.335\n",
            "----> DD step for heating\n",
            "Epoch 0 loss: 28910.747\n",
            "Epoch 87 loss: 16245.059\n",
            "Epoch 174 loss: 9379.268\n",
            "Epoch 261 loss: 5527.397\n",
            "Epoch 348 loss: 119.084\n",
            "WEEK 11\n",
            "----> Training for fridge\n",
            "Epoch 0 loss: 994.696\n",
            "Epoch 87 loss: 7.325\n",
            "Epoch 174 loss: 2.163\n",
            "Epoch 261 loss: 1.008\n",
            "Epoch 348 loss: 0.603\n",
            "----> Transfer training for fridge\n",
            "Epoch 0 loss: 2579.442\n",
            "Epoch 87 loss: 15.629\n",
            "Epoch 174 loss: 8.242\n",
            "Epoch 261 loss: 5.394\n",
            "Epoch 348 loss: 4.009\n",
            "----> DD step for fridge\n",
            "Epoch 0 loss: 46658.969\n",
            "Epoch 87 loss: 3333.246\n",
            "Epoch 174 loss: 2760.237\n",
            "Epoch 261 loss: 1499.483\n",
            "Epoch 348 loss: 938.369\n",
            "----> Training for washing_drying\n",
            "Epoch 0 loss: 13498.062\n",
            "Epoch 87 loss: 34.397\n",
            "Epoch 174 loss: 26.334\n",
            "Epoch 261 loss: 19.461\n",
            "Epoch 348 loss: 18.941\n",
            "----> Transfer training for washing_drying\n",
            "Epoch 0 loss: 21209.216\n",
            "Epoch 87 loss: 35.385\n",
            "Epoch 174 loss: 28.897\n",
            "Epoch 261 loss: 27.476\n",
            "Epoch 348 loss: 23.055\n",
            "----> DD step for washing_drying\n",
            "Epoch 0 loss: 37575.562\n",
            "Epoch 87 loss: 4999.006\n",
            "Epoch 174 loss: 2921.562\n",
            "Epoch 261 loss: 2334.441\n",
            "Epoch 348 loss: 2075.656\n",
            "----> Training for computer_tv\n",
            "Epoch 0 loss: 399.865\n",
            "Epoch 87 loss: 1.731\n",
            "Epoch 174 loss: 0.729\n",
            "Epoch 261 loss: 0.381\n",
            "Epoch 348 loss: 0.246\n",
            "----> Transfer training for computer_tv\n",
            "Epoch 0 loss: 591.965\n",
            "Epoch 87 loss: 1.802\n",
            "Epoch 174 loss: 0.955\n",
            "Epoch 261 loss: 0.667\n",
            "Epoch 348 loss: 0.517\n",
            "----> DD step for computer_tv\n",
            "Epoch 0 loss: 683.872\n",
            "Epoch 87 loss: 187.427\n",
            "Epoch 174 loss: 116.365\n",
            "Epoch 261 loss: 87.800\n",
            "Epoch 348 loss: 76.754\n",
            "----> Training for heating\n",
            "Epoch 0 loss: 4563.161\n",
            "Epoch 87 loss: 0.944\n",
            "Epoch 174 loss: 0.323\n",
            "Epoch 261 loss: 0.211\n",
            "Epoch 348 loss: 0.180\n",
            "----> Transfer training for heating\n",
            "Epoch 0 loss: 17145.625\n",
            "Epoch 87 loss: 2.747\n",
            "Epoch 174 loss: 2.108\n",
            "Epoch 261 loss: 1.922\n",
            "Epoch 348 loss: 1.754\n",
            "----> DD step for heating\n",
            "Epoch 0 loss: 18159.747\n",
            "Epoch 87 loss: 4291.452\n",
            "Epoch 174 loss: 4000.168\n",
            "Epoch 261 loss: 154.310\n",
            "Epoch 348 loss: 43.468\n",
            "WEEK 12\n",
            "----> Training for fridge\n",
            "Epoch 0 loss: 1338.097\n",
            "Epoch 87 loss: 7.164\n",
            "Epoch 174 loss: 2.440\n",
            "Epoch 261 loss: 1.309\n",
            "Epoch 348 loss: 0.843\n",
            "----> Transfer training for fridge\n",
            "Epoch 0 loss: 1625.607\n",
            "Epoch 87 loss: 10.597\n",
            "Epoch 174 loss: 5.360\n",
            "Epoch 261 loss: 3.288\n",
            "Epoch 348 loss: 2.194\n",
            "----> DD step for fridge\n",
            "Epoch 0 loss: 151516.575\n",
            "Epoch 87 loss: 1909.688\n",
            "Epoch 174 loss: 1816.261\n",
            "Epoch 261 loss: 1753.436\n",
            "Epoch 348 loss: 1709.552\n",
            "----> Training for washing_drying\n",
            "Epoch 0 loss: 28805.549\n",
            "Epoch 87 loss: 40.117\n",
            "Epoch 174 loss: 33.237\n",
            "Epoch 261 loss: 32.248\n",
            "Epoch 348 loss: 30.915\n",
            "----> Transfer training for washing_drying\n",
            "Epoch 0 loss: 13438.761\n",
            "Epoch 87 loss: 43.363\n",
            "Epoch 174 loss: 35.056\n",
            "Epoch 261 loss: 6.465\n",
            "Epoch 348 loss: 4.011\n",
            "----> DD step for washing_drying\n",
            "Epoch 0 loss: 15790.800\n",
            "Epoch 87 loss: 3285.847\n",
            "Epoch 174 loss: 1666.935\n",
            "Epoch 261 loss: 1185.507\n",
            "Epoch 348 loss: 971.056\n",
            "----> Training for computer_tv\n",
            "Epoch 0 loss: 842.187\n",
            "Epoch 87 loss: 3.518\n",
            "Epoch 174 loss: 2.576\n",
            "Epoch 261 loss: 1.330\n",
            "Epoch 348 loss: 0.539\n",
            "----> Transfer training for computer_tv\n",
            "Epoch 0 loss: 190.183\n",
            "Epoch 87 loss: 1.150\n",
            "Epoch 174 loss: 0.646\n",
            "Epoch 261 loss: 0.451\n",
            "Epoch 348 loss: 0.356\n",
            "----> DD step for computer_tv\n",
            "Epoch 0 loss: 73829.656\n",
            "Epoch 87 loss: 588.716\n",
            "Epoch 174 loss: 493.627\n",
            "Epoch 261 loss: 431.656\n",
            "Epoch 348 loss: 393.182\n",
            "----> Training for heating\n",
            "Epoch 0 loss: 1342.221\n",
            "Epoch 87 loss: 0.205\n",
            "Epoch 174 loss: 0.129\n",
            "Epoch 261 loss: 0.077\n",
            "Epoch 348 loss: 0.062\n",
            "----> Transfer training for heating\n",
            "Epoch 0 loss: 20384.223\n",
            "Epoch 87 loss: 75.858\n",
            "Epoch 174 loss: 65.016\n",
            "Epoch 261 loss: 62.711\n",
            "Epoch 348 loss: 8.543\n",
            "----> DD step for heating\n",
            "Epoch 0 loss: 55429.775\n",
            "Epoch 87 loss: 14275.469\n",
            "Epoch 174 loss: 9975.598\n",
            "Epoch 261 loss: 8428.121\n",
            "Epoch 348 loss: 7398.425\n",
            "WEEK 13\n",
            "----> Training for fridge\n",
            "Epoch 0 loss: 1264.894\n",
            "Epoch 87 loss: 6.137\n",
            "Epoch 174 loss: 2.619\n",
            "Epoch 261 loss: 1.309\n",
            "Epoch 348 loss: 0.733\n",
            "----> Transfer training for fridge\n",
            "Epoch 0 loss: 2409.158\n",
            "Epoch 87 loss: 13.630\n",
            "Epoch 174 loss: 8.509\n",
            "Epoch 261 loss: 5.966\n",
            "Epoch 348 loss: 4.466\n",
            "----> DD step for fridge\n",
            "Epoch 0 loss: 3112.057\n",
            "Epoch 87 loss: 1150.814\n",
            "Epoch 174 loss: 900.276\n",
            "Epoch 261 loss: 796.827\n",
            "Epoch 348 loss: 728.104\n",
            "----> Training for washing_drying\n",
            "Epoch 0 loss: 15101.971\n",
            "Epoch 87 loss: 56.020\n",
            "Epoch 174 loss: 37.291\n",
            "Epoch 261 loss: 17.560\n",
            "Epoch 348 loss: 14.583\n",
            "----> Transfer training for washing_drying\n",
            "Epoch 0 loss: 25867.672\n",
            "Epoch 87 loss: 36.778\n",
            "Epoch 174 loss: 35.166\n",
            "Epoch 261 loss: 34.806\n",
            "Epoch 348 loss: 34.472\n",
            "----> DD step for washing_drying\n",
            "Epoch 0 loss: 29079.825\n",
            "Epoch 87 loss: 5785.497\n",
            "Epoch 174 loss: 3061.522\n",
            "Epoch 261 loss: 2169.379\n",
            "Epoch 348 loss: 1709.426\n",
            "----> Training for computer_tv\n",
            "Epoch 0 loss: 579.798\n",
            "Epoch 87 loss: 1.675\n",
            "Epoch 174 loss: 0.861\n",
            "Epoch 261 loss: 0.564\n",
            "Epoch 348 loss: 0.426\n",
            "----> Transfer training for computer_tv\n",
            "Epoch 0 loss: 501.767\n",
            "Epoch 87 loss: 1.866\n",
            "Epoch 174 loss: 1.157\n",
            "Epoch 261 loss: 0.860\n",
            "Epoch 348 loss: 0.673\n",
            "----> DD step for computer_tv\n",
            "Epoch 0 loss: 1103.691\n",
            "Epoch 87 loss: 289.490\n",
            "Epoch 174 loss: 166.572\n",
            "Epoch 261 loss: 127.652\n",
            "Epoch 348 loss: 102.581\n",
            "----> Training for heating\n",
            "Epoch 0 loss: 8752.140\n",
            "Epoch 87 loss: 15.524\n",
            "Epoch 174 loss: 1.137\n",
            "Epoch 261 loss: 0.727\n",
            "Epoch 348 loss: 0.659\n",
            "----> Transfer training for heating\n",
            "Epoch 0 loss: 17798.214\n",
            "Epoch 87 loss: 2.319\n",
            "Epoch 174 loss: 0.844\n",
            "Epoch 261 loss: 0.776\n",
            "Epoch 348 loss: 0.730\n",
            "----> DD step for heating\n",
            "Epoch 0 loss: 23534.408\n",
            "Epoch 87 loss: 1044.469\n",
            "Epoch 174 loss: 811.736\n",
            "Epoch 261 loss: 787.785\n",
            "Epoch 348 loss: 776.441\n",
            "WEEK 14\n",
            "----> Training for fridge\n",
            "Epoch 0 loss: 1086.960\n",
            "Epoch 87 loss: 5.382\n",
            "Epoch 174 loss: 2.121\n",
            "Epoch 261 loss: 1.067\n",
            "Epoch 348 loss: 0.685\n",
            "----> Transfer training for fridge\n",
            "Epoch 0 loss: 1074.191\n",
            "Epoch 87 loss: 10.742\n",
            "Epoch 174 loss: 5.773\n",
            "Epoch 261 loss: 3.903\n",
            "Epoch 348 loss: 2.898\n",
            "----> DD step for fridge\n",
            "Epoch 0 loss: 2540.562\n",
            "Epoch 87 loss: 506.793\n",
            "Epoch 174 loss: 342.211\n",
            "Epoch 261 loss: 271.536\n",
            "Epoch 348 loss: 245.689\n",
            "----> Training for washing_drying\n",
            "Epoch 0 loss: 22122.357\n",
            "Epoch 87 loss: 77.127\n",
            "Epoch 174 loss: 59.983\n",
            "Epoch 261 loss: 47.923\n",
            "Epoch 348 loss: 21.781\n",
            "----> Transfer training for washing_drying\n",
            "Epoch 0 loss: 11250.648\n",
            "Epoch 87 loss: 34.776\n",
            "Epoch 174 loss: 28.129\n",
            "Epoch 261 loss: 9.493\n",
            "Epoch 348 loss: 6.006\n",
            "----> DD step for washing_drying\n",
            "Epoch 0 loss: 28199.669\n",
            "Epoch 87 loss: 8484.415\n",
            "Epoch 174 loss: 5262.559\n",
            "Epoch 261 loss: 4919.320\n",
            "Epoch 348 loss: 2588.124\n",
            "----> Training for computer_tv\n",
            "Epoch 0 loss: 538.257\n",
            "Epoch 87 loss: 2.470\n",
            "Epoch 174 loss: 1.021\n",
            "Epoch 261 loss: 0.588\n",
            "Epoch 348 loss: 0.381\n",
            "----> Transfer training for computer_tv\n",
            "Epoch 0 loss: 492.063\n",
            "Epoch 87 loss: 2.231\n",
            "Epoch 174 loss: 1.158\n",
            "Epoch 261 loss: 0.737\n",
            "Epoch 348 loss: 0.527\n",
            "----> DD step for computer_tv\n",
            "Epoch 0 loss: 11479.480\n",
            "Epoch 87 loss: 530.422\n",
            "Epoch 174 loss: 385.843\n",
            "Epoch 261 loss: 189.627\n",
            "Epoch 348 loss: 153.788\n",
            "----> Training for heating\n",
            "Epoch 0 loss: 7766.976\n",
            "Epoch 87 loss: 4.008\n",
            "Epoch 174 loss: 2.145\n",
            "Epoch 261 loss: 1.910\n",
            "Epoch 348 loss: 1.818\n",
            "----> Transfer training for heating\n",
            "Epoch 0 loss: 10842.071\n",
            "Epoch 87 loss: 2.408\n",
            "Epoch 174 loss: 2.052\n",
            "Epoch 261 loss: 1.949\n",
            "Epoch 348 loss: 1.879\n",
            "----> DD step for heating\n",
            "Epoch 0 loss: 11471.859\n",
            "Epoch 87 loss: 4086.318\n",
            "Epoch 174 loss: 2123.938\n",
            "Epoch 261 loss: 99.817\n",
            "Epoch 348 loss: 51.622\n",
            "WEEK 15\n",
            "----> Training for fridge\n",
            "Epoch 0 loss: 1086.126\n",
            "Epoch 87 loss: 7.358\n",
            "Epoch 174 loss: 2.816\n",
            "Epoch 261 loss: 1.488\n",
            "Epoch 348 loss: 0.906\n",
            "----> Transfer training for fridge\n",
            "Epoch 0 loss: 1643.354\n",
            "Epoch 87 loss: 15.963\n",
            "Epoch 174 loss: 8.382\n",
            "Epoch 261 loss: 5.527\n",
            "Epoch 348 loss: 4.055\n",
            "----> DD step for fridge\n",
            "Epoch 0 loss: 4942.273\n",
            "Epoch 87 loss: 985.886\n",
            "Epoch 174 loss: 611.325\n",
            "Epoch 261 loss: 508.164\n",
            "Epoch 348 loss: 399.252\n",
            "----> Training for washing_drying\n",
            "Epoch 0 loss: 24720.959\n",
            "Epoch 87 loss: 76.389\n",
            "Epoch 174 loss: 32.313\n",
            "Epoch 261 loss: 15.939\n",
            "Epoch 348 loss: 13.914\n",
            "----> Transfer training for washing_drying\n",
            "Epoch 0 loss: 26926.141\n",
            "Epoch 87 loss: 15.199\n",
            "Epoch 174 loss: 11.414\n",
            "Epoch 261 loss: 10.795\n",
            "Epoch 348 loss: 10.587\n",
            "----> DD step for washing_drying\n",
            "Epoch 0 loss: 28727.147\n",
            "Epoch 87 loss: 3441.731\n",
            "Epoch 174 loss: 1298.665\n",
            "Epoch 261 loss: 923.543\n",
            "Epoch 348 loss: 787.861\n",
            "----> Training for computer_tv\n",
            "Epoch 0 loss: 465.827\n",
            "Epoch 87 loss: 3.418\n",
            "Epoch 174 loss: 1.229\n",
            "Epoch 261 loss: 0.571\n",
            "Epoch 348 loss: 0.355\n",
            "----> Transfer training for computer_tv\n",
            "Epoch 0 loss: 349.062\n",
            "Epoch 87 loss: 2.294\n",
            "Epoch 174 loss: 0.894\n",
            "Epoch 261 loss: 0.616\n",
            "Epoch 348 loss: 0.466\n",
            "----> DD step for computer_tv\n",
            "Epoch 0 loss: 490.522\n",
            "Epoch 87 loss: 233.201\n",
            "Epoch 174 loss: 273.893\n",
            "Epoch 261 loss: 124.223\n",
            "Epoch 348 loss: 106.072\n",
            "----> Training for heating\n",
            "Epoch 0 loss: 3370.070\n",
            "Epoch 87 loss: 0.688\n",
            "Epoch 174 loss: 0.495\n",
            "Epoch 261 loss: 0.454\n",
            "Epoch 348 loss: 0.429\n",
            "----> Transfer training for heating\n",
            "Epoch 0 loss: 13203.830\n",
            "Epoch 87 loss: 1.721\n",
            "Epoch 174 loss: 1.282\n",
            "Epoch 261 loss: 1.059\n",
            "Epoch 348 loss: 0.897\n",
            "----> DD step for heating\n",
            "Epoch 0 loss: 25904.541\n",
            "Epoch 87 loss: 3025.960\n",
            "Epoch 174 loss: 2711.206\n",
            "Epoch 261 loss: 2639.028\n",
            "Epoch 348 loss: 337.599\n",
            "WEEK 16\n",
            "----> Training for fridge\n",
            "Epoch 0 loss: 716.534\n",
            "Epoch 87 loss: 3.977\n",
            "Epoch 174 loss: 1.687\n",
            "Epoch 261 loss: 1.032\n",
            "Epoch 348 loss: 0.722\n",
            "----> Transfer training for fridge\n",
            "Epoch 0 loss: 1212.212\n",
            "Epoch 87 loss: 13.351\n",
            "Epoch 174 loss: 5.858\n",
            "Epoch 261 loss: 4.053\n",
            "Epoch 348 loss: 3.115\n",
            "----> DD step for fridge\n",
            "Epoch 0 loss: 3193.883\n",
            "Epoch 87 loss: 818.501\n",
            "Epoch 174 loss: 566.817\n",
            "Epoch 261 loss: 437.091\n",
            "Epoch 348 loss: 363.975\n",
            "----> Training for washing_drying\n",
            "Epoch 0 loss: 23880.211\n",
            "Epoch 87 loss: 87.228\n",
            "Epoch 174 loss: 32.584\n",
            "Epoch 261 loss: 28.303\n",
            "Epoch 348 loss: 27.488\n",
            "----> Transfer training for washing_drying\n",
            "Epoch 0 loss: 23879.228\n",
            "Epoch 87 loss: 37.418\n",
            "Epoch 174 loss: 30.976\n",
            "Epoch 261 loss: 29.543\n",
            "Epoch 348 loss: 26.257\n",
            "----> DD step for washing_drying\n",
            "Epoch 0 loss: 31359.062\n",
            "Epoch 87 loss: 5647.489\n",
            "Epoch 174 loss: 2624.139\n",
            "Epoch 261 loss: 1554.775\n",
            "Epoch 348 loss: 1312.794\n",
            "----> Training for computer_tv\n",
            "Epoch 0 loss: 346.005\n",
            "Epoch 87 loss: 1.477\n",
            "Epoch 174 loss: 0.665\n",
            "Epoch 261 loss: 0.403\n",
            "Epoch 348 loss: 0.266\n",
            "----> Transfer training for computer_tv\n",
            "Epoch 0 loss: 480.737\n",
            "Epoch 87 loss: 4.231\n",
            "Epoch 174 loss: 1.974\n",
            "Epoch 261 loss: 1.161\n",
            "Epoch 348 loss: 0.761\n",
            "----> DD step for computer_tv\n",
            "Epoch 0 loss: 1183.610\n",
            "Epoch 87 loss: 283.988\n",
            "Epoch 174 loss: 195.868\n",
            "Epoch 261 loss: 137.928\n",
            "Epoch 348 loss: 112.821\n",
            "----> Training for heating\n",
            "Epoch 0 loss: 5721.460\n",
            "Epoch 87 loss: 12.074\n",
            "Epoch 174 loss: 4.790\n",
            "Epoch 261 loss: 2.259\n",
            "Epoch 348 loss: 1.737\n",
            "----> Transfer training for heating\n",
            "Epoch 0 loss: 26923.000\n",
            "Epoch 87 loss: 8.615\n",
            "Epoch 174 loss: 5.072\n",
            "Epoch 261 loss: 4.134\n",
            "Epoch 348 loss: 3.395\n",
            "----> DD step for heating\n",
            "Epoch 0 loss: 31593.519\n",
            "Epoch 87 loss: 6071.838\n",
            "Epoch 174 loss: 3334.111\n",
            "Epoch 261 loss: 1651.532\n",
            "Epoch 348 loss: 1261.203\n",
            "WEEK 17\n",
            "----> Training for fridge\n",
            "Epoch 0 loss: 999.955\n",
            "Epoch 87 loss: 5.811\n",
            "Epoch 174 loss: 2.073\n",
            "Epoch 261 loss: 1.077\n",
            "Epoch 348 loss: 0.676\n",
            "----> Transfer training for fridge\n",
            "Epoch 0 loss: 1780.247\n",
            "Epoch 87 loss: 12.397\n",
            "Epoch 174 loss: 6.680\n",
            "Epoch 261 loss: 3.903\n",
            "Epoch 348 loss: 2.530\n",
            "----> DD step for fridge\n",
            "Epoch 0 loss: 14970.677\n",
            "Epoch 87 loss: 2314.747\n",
            "Epoch 174 loss: 1203.457\n",
            "Epoch 261 loss: 1076.829\n",
            "Epoch 348 loss: 1000.510\n",
            "----> Training for washing_drying\n",
            "Epoch 0 loss: 20415.045\n",
            "Epoch 87 loss: 43.621\n",
            "Epoch 174 loss: 32.437\n",
            "Epoch 261 loss: 28.079\n",
            "Epoch 348 loss: 19.462\n",
            "----> Transfer training for washing_drying\n",
            "Epoch 0 loss: 13144.095\n",
            "Epoch 87 loss: 51.583\n",
            "Epoch 174 loss: 47.984\n",
            "Epoch 261 loss: 36.410\n",
            "Epoch 348 loss: 26.182\n",
            "----> DD step for washing_drying\n",
            "Epoch 0 loss: 25946.041\n",
            "Epoch 87 loss: 6072.777\n",
            "Epoch 174 loss: 3230.428\n",
            "Epoch 261 loss: 2847.091\n",
            "Epoch 348 loss: 2703.780\n",
            "----> Training for computer_tv\n",
            "Epoch 0 loss: 412.127\n",
            "Epoch 87 loss: 1.807\n",
            "Epoch 174 loss: 0.790\n",
            "Epoch 261 loss: 0.482\n",
            "Epoch 348 loss: 0.329\n",
            "----> Transfer training for computer_tv\n",
            "Epoch 0 loss: 575.379\n",
            "Epoch 87 loss: 3.889\n",
            "Epoch 174 loss: 2.186\n",
            "Epoch 261 loss: 1.365\n",
            "Epoch 348 loss: 0.866\n",
            "----> DD step for computer_tv\n",
            "Epoch 0 loss: 50078.791\n",
            "Epoch 87 loss: 702.662\n",
            "Epoch 174 loss: 666.382\n",
            "Epoch 261 loss: 639.995\n",
            "Epoch 348 loss: 621.492\n",
            "----> Training for heating\n",
            "Epoch 0 loss: 6571.718\n",
            "Epoch 87 loss: 1.750\n",
            "Epoch 174 loss: 0.599\n",
            "Epoch 261 loss: 0.514\n",
            "Epoch 348 loss: 0.452\n",
            "----> Transfer training for heating\n",
            "Epoch 0 loss: 19226.841\n",
            "Epoch 87 loss: 3.974\n",
            "Epoch 174 loss: 2.262\n",
            "Epoch 261 loss: 1.980\n",
            "Epoch 348 loss: 1.760\n",
            "----> DD step for heating\n",
            "Epoch 0 loss: 31938.222\n",
            "Epoch 87 loss: 2372.605\n",
            "Epoch 174 loss: 601.355\n",
            "Epoch 261 loss: 320.524\n",
            "Epoch 348 loss: 66.746\n",
            "WEEK 18\n",
            "----> Training for fridge\n",
            "Epoch 0 loss: 1384.357\n",
            "Epoch 87 loss: 7.188\n",
            "Epoch 174 loss: 3.072\n",
            "Epoch 261 loss: 1.602\n",
            "Epoch 348 loss: 1.020\n",
            "----> Transfer training for fridge\n",
            "Epoch 0 loss: 1180.618\n",
            "Epoch 87 loss: 7.083\n",
            "Epoch 174 loss: 3.127\n",
            "Epoch 261 loss: 2.075\n",
            "Epoch 348 loss: 1.517\n",
            "----> DD step for fridge\n",
            "Epoch 0 loss: 3390.363\n",
            "Epoch 87 loss: 790.360\n",
            "Epoch 174 loss: 583.986\n",
            "Epoch 261 loss: 525.447\n",
            "Epoch 348 loss: 461.212\n",
            "----> Training for washing_drying\n",
            "Epoch 0 loss: 24783.568\n",
            "Epoch 87 loss: 52.593\n",
            "Epoch 174 loss: 31.851\n",
            "Epoch 261 loss: 27.149\n",
            "Epoch 348 loss: 19.174\n",
            "----> Transfer training for washing_drying\n",
            "Epoch 0 loss: 17905.517\n",
            "Epoch 87 loss: 41.742\n",
            "Epoch 174 loss: 27.111\n",
            "Epoch 261 loss: 18.683\n",
            "Epoch 348 loss: 3.358\n",
            "----> DD step for washing_drying\n",
            "Epoch 0 loss: 17357.133\n",
            "Epoch 87 loss: 1736.104\n",
            "Epoch 174 loss: 706.945\n",
            "Epoch 261 loss: 428.116\n",
            "Epoch 348 loss: 239.560\n",
            "----> Training for computer_tv\n",
            "Epoch 0 loss: 406.619\n",
            "Epoch 87 loss: 2.139\n",
            "Epoch 174 loss: 0.914\n",
            "Epoch 261 loss: 0.535\n",
            "Epoch 348 loss: 0.362\n",
            "----> Transfer training for computer_tv\n",
            "Epoch 0 loss: 310.301\n",
            "Epoch 87 loss: 2.316\n",
            "Epoch 174 loss: 1.287\n",
            "Epoch 261 loss: 0.846\n",
            "Epoch 348 loss: 0.613\n",
            "----> DD step for computer_tv\n",
            "Epoch 0 loss: 1178.396\n",
            "Epoch 87 loss: 367.589\n",
            "Epoch 174 loss: 173.794\n",
            "Epoch 261 loss: 112.835\n",
            "Epoch 348 loss: 103.345\n",
            "----> Training for heating\n",
            "Epoch 0 loss: 2461.571\n",
            "Epoch 87 loss: 0.883\n",
            "Epoch 174 loss: 0.788\n",
            "Epoch 261 loss: 0.425\n",
            "Epoch 348 loss: 0.150\n",
            "----> Transfer training for heating\n",
            "Epoch 0 loss: 13710.825\n",
            "Epoch 87 loss: 3.051\n",
            "Epoch 174 loss: 1.921\n",
            "Epoch 261 loss: 1.599\n",
            "Epoch 348 loss: 1.233\n",
            "----> DD step for heating\n",
            "Epoch 0 loss: 13816.491\n",
            "Epoch 87 loss: 2895.877\n",
            "Epoch 174 loss: 561.207\n",
            "Epoch 261 loss: 385.707\n",
            "Epoch 348 loss: 355.465\n",
            "WEEK 19\n",
            "----> Training for fridge\n",
            "Epoch 0 loss: 901.068\n",
            "Epoch 87 loss: 6.152\n",
            "Epoch 174 loss: 2.262\n",
            "Epoch 261 loss: 1.261\n",
            "Epoch 348 loss: 0.821\n",
            "----> Transfer training for fridge\n",
            "Epoch 0 loss: 2103.068\n",
            "Epoch 87 loss: 14.404\n",
            "Epoch 174 loss: 6.574\n",
            "Epoch 261 loss: 4.471\n",
            "Epoch 348 loss: 3.315\n",
            "----> DD step for fridge\n",
            "Epoch 0 loss: 4617.733\n",
            "Epoch 87 loss: 1374.486\n",
            "Epoch 174 loss: 1051.065\n",
            "Epoch 261 loss: 932.860\n",
            "Epoch 348 loss: 830.741\n",
            "----> Training for washing_drying\n",
            "Epoch 0 loss: 25669.135\n",
            "Epoch 87 loss: 75.056\n",
            "Epoch 174 loss: 70.210\n",
            "Epoch 261 loss: 58.777\n",
            "Epoch 348 loss: 31.517\n",
            "----> Transfer training for washing_drying\n",
            "Epoch 0 loss: 28478.234\n",
            "Epoch 87 loss: 126.070\n",
            "Epoch 174 loss: 92.537\n",
            "Epoch 261 loss: 31.489\n",
            "Epoch 348 loss: 31.010\n",
            "----> DD step for washing_drying\n",
            "Epoch 0 loss: 34609.078\n",
            "Epoch 87 loss: 5614.316\n",
            "Epoch 174 loss: 2875.686\n",
            "Epoch 261 loss: 1945.087\n",
            "Epoch 348 loss: 1666.931\n",
            "----> Training for computer_tv\n",
            "Epoch 0 loss: 449.793\n",
            "Epoch 87 loss: 1.577\n",
            "Epoch 174 loss: 0.611\n",
            "Epoch 261 loss: 0.330\n",
            "Epoch 348 loss: 0.206\n",
            "----> Transfer training for computer_tv\n",
            "Epoch 0 loss: 467.460\n",
            "Epoch 87 loss: 2.745\n",
            "Epoch 174 loss: 1.413\n",
            "Epoch 261 loss: 0.922\n",
            "Epoch 348 loss: 0.635\n",
            "----> DD step for computer_tv\n",
            "Epoch 0 loss: 20482.956\n",
            "Epoch 87 loss: 629.105\n",
            "Epoch 174 loss: 575.252\n",
            "Epoch 261 loss: 435.867\n",
            "Epoch 348 loss: 250.429\n",
            "----> Training for heating\n",
            "Epoch 0 loss: 5921.880\n",
            "Epoch 87 loss: 1.902\n",
            "Epoch 174 loss: 1.418\n",
            "Epoch 261 loss: 1.253\n",
            "Epoch 348 loss: 1.118\n",
            "----> Transfer training for heating\n",
            "Epoch 0 loss: 11745.184\n",
            "Epoch 87 loss: 1.337\n",
            "Epoch 174 loss: 1.197\n",
            "Epoch 261 loss: 1.079\n",
            "Epoch 348 loss: 0.969\n",
            "----> DD step for heating\n",
            "Epoch 0 loss: 14219.406\n",
            "Epoch 87 loss: 3074.178\n",
            "Epoch 174 loss: 1035.668\n",
            "Epoch 261 loss: 285.136\n",
            "Epoch 348 loss: 104.916\n",
            "WEEK 20\n",
            "----> Training for fridge\n",
            "Epoch 0 loss: 868.255\n",
            "Epoch 87 loss: 5.708\n",
            "Epoch 174 loss: 2.004\n",
            "Epoch 261 loss: 1.052\n",
            "Epoch 348 loss: 0.672\n",
            "----> Transfer training for fridge\n",
            "Epoch 0 loss: 2326.928\n",
            "Epoch 87 loss: 15.014\n",
            "Epoch 174 loss: 8.234\n",
            "Epoch 261 loss: 4.831\n",
            "Epoch 348 loss: 3.386\n",
            "----> DD step for fridge\n",
            "Epoch 0 loss: 5001.830\n",
            "Epoch 87 loss: 2192.913\n",
            "Epoch 174 loss: 931.798\n",
            "Epoch 261 loss: 770.347\n",
            "Epoch 348 loss: 650.569\n",
            "----> Training for washing_drying\n",
            "Epoch 0 loss: 28924.375\n",
            "Epoch 87 loss: 62.070\n",
            "Epoch 174 loss: 29.798\n",
            "Epoch 261 loss: 28.033\n",
            "Epoch 348 loss: 27.573\n",
            "----> Transfer training for washing_drying\n",
            "Epoch 0 loss: 18677.772\n",
            "Epoch 87 loss: 80.032\n",
            "Epoch 174 loss: 59.348\n",
            "Epoch 261 loss: 38.624\n",
            "Epoch 348 loss: 37.269\n",
            "----> DD step for washing_drying\n",
            "Epoch 0 loss: 23631.977\n",
            "Epoch 87 loss: 3244.132\n",
            "Epoch 174 loss: 275.151\n",
            "Epoch 261 loss: 203.962\n",
            "Epoch 348 loss: 178.144\n",
            "----> Training for computer_tv\n",
            "Epoch 0 loss: 486.570\n",
            "Epoch 87 loss: 2.020\n",
            "Epoch 174 loss: 0.709\n",
            "Epoch 261 loss: 0.433\n",
            "Epoch 348 loss: 0.329\n",
            "----> Transfer training for computer_tv\n",
            "Epoch 0 loss: 565.430\n",
            "Epoch 87 loss: 4.454\n",
            "Epoch 174 loss: 1.799\n",
            "Epoch 261 loss: 1.023\n",
            "Epoch 348 loss: 0.665\n",
            "----> DD step for computer_tv\n",
            "Epoch 0 loss: 5975.056\n",
            "Epoch 87 loss: 693.219\n",
            "Epoch 174 loss: 419.392\n",
            "Epoch 261 loss: 235.003\n",
            "Epoch 348 loss: 185.945\n",
            "----> Training for heating\n",
            "Epoch 0 loss: 5526.648\n",
            "Epoch 87 loss: 2.696\n",
            "Epoch 174 loss: 1.593\n",
            "Epoch 261 loss: 1.370\n",
            "Epoch 348 loss: 1.244\n",
            "----> Transfer training for heating\n",
            "Epoch 0 loss: 8366.082\n",
            "Epoch 87 loss: 1.438\n",
            "Epoch 174 loss: 1.112\n",
            "Epoch 261 loss: 0.980\n",
            "Epoch 348 loss: 0.857\n",
            "----> DD step for heating\n",
            "Epoch 0 loss: 9311.877\n",
            "Epoch 87 loss: 477.222\n",
            "Epoch 174 loss: 291.524\n",
            "Epoch 261 loss: 239.277\n",
            "Epoch 348 loss: 207.718\n",
            "WEEK 21\n",
            "----> Training for fridge\n",
            "Epoch 0 loss: 1023.478\n",
            "Epoch 87 loss: 5.578\n",
            "Epoch 174 loss: 1.971\n",
            "Epoch 261 loss: 1.116\n",
            "Epoch 348 loss: 0.752\n",
            "----> Transfer training for fridge\n",
            "Epoch 0 loss: 1028.111\n",
            "Epoch 87 loss: 8.711\n",
            "Epoch 174 loss: 5.012\n",
            "Epoch 261 loss: 3.314\n",
            "Epoch 348 loss: 2.418\n",
            "----> DD step for fridge\n",
            "Epoch 0 loss: 28614.178\n",
            "Epoch 87 loss: 1453.470\n",
            "Epoch 174 loss: 762.017\n",
            "Epoch 261 loss: 651.243\n",
            "Epoch 348 loss: 565.410\n",
            "----> Training for washing_drying\n",
            "Epoch 0 loss: 21948.488\n",
            "Epoch 87 loss: 44.836\n",
            "Epoch 174 loss: 31.091\n",
            "Epoch 261 loss: 29.416\n",
            "Epoch 348 loss: 19.416\n",
            "----> Transfer training for washing_drying\n",
            "Epoch 0 loss: 30205.684\n",
            "Epoch 87 loss: 70.498\n",
            "Epoch 174 loss: 34.405\n",
            "Epoch 261 loss: 29.289\n",
            "Epoch 348 loss: 26.267\n",
            "----> DD step for washing_drying\n",
            "Epoch 0 loss: 27228.903\n",
            "Epoch 87 loss: 3528.267\n",
            "Epoch 174 loss: 2117.158\n",
            "Epoch 261 loss: 1593.653\n",
            "Epoch 348 loss: 254.959\n",
            "----> Training for computer_tv\n",
            "Epoch 0 loss: 557.507\n",
            "Epoch 87 loss: 1.524\n",
            "Epoch 174 loss: 0.728\n",
            "Epoch 261 loss: 0.458\n",
            "Epoch 348 loss: 0.334\n",
            "----> Transfer training for computer_tv\n",
            "Epoch 0 loss: 282.112\n",
            "Epoch 87 loss: 2.052\n",
            "Epoch 174 loss: 1.153\n",
            "Epoch 261 loss: 0.767\n",
            "Epoch 348 loss: 0.567\n",
            "----> DD step for computer_tv\n",
            "Epoch 0 loss: 2737.172\n",
            "Epoch 87 loss: 527.834\n",
            "Epoch 174 loss: 277.534\n",
            "Epoch 261 loss: 222.916\n",
            "Epoch 348 loss: 194.251\n",
            "----> Training for heating\n",
            "Epoch 0 loss: 3260.598\n",
            "Epoch 87 loss: 11.143\n",
            "Epoch 174 loss: 4.966\n",
            "Epoch 261 loss: 1.843\n",
            "Epoch 348 loss: 0.781\n",
            "----> Transfer training for heating\n",
            "Epoch 0 loss: 6398.877\n",
            "Epoch 87 loss: 0.800\n",
            "Epoch 174 loss: 0.534\n",
            "Epoch 261 loss: 0.483\n",
            "Epoch 348 loss: 0.430\n",
            "----> DD step for heating\n",
            "Epoch 0 loss: 14027.944\n",
            "Epoch 87 loss: 6205.912\n",
            "Epoch 174 loss: 2693.302\n",
            "Epoch 261 loss: 2491.977\n",
            "Epoch 348 loss: 835.993\n",
            "WEEK 22\n",
            "----> Training for fridge\n",
            "Epoch 0 loss: 844.210\n",
            "Epoch 87 loss: 4.127\n",
            "Epoch 174 loss: 1.827\n",
            "Epoch 261 loss: 1.067\n",
            "Epoch 348 loss: 0.719\n",
            "----> Transfer training for fridge\n",
            "Epoch 0 loss: 1283.801\n",
            "Epoch 87 loss: 9.421\n",
            "Epoch 174 loss: 3.366\n",
            "Epoch 261 loss: 2.214\n",
            "Epoch 348 loss: 1.650\n",
            "----> DD step for fridge\n",
            "Epoch 0 loss: 7873.977\n",
            "Epoch 87 loss: 1068.567\n",
            "Epoch 174 loss: 817.010\n",
            "Epoch 261 loss: 738.675\n",
            "Epoch 348 loss: 693.121\n",
            "----> Training for washing_drying\n",
            "Epoch 0 loss: 21855.277\n",
            "Epoch 87 loss: 31.956\n",
            "Epoch 174 loss: 18.804\n",
            "Epoch 261 loss: 15.715\n",
            "Epoch 348 loss: 13.706\n",
            "----> Transfer training for washing_drying\n",
            "Epoch 0 loss: 26045.202\n",
            "Epoch 87 loss: 61.343\n",
            "Epoch 174 loss: 54.185\n",
            "Epoch 261 loss: 52.101\n",
            "Epoch 348 loss: 40.793\n",
            "----> DD step for washing_drying\n",
            "Epoch 0 loss: 33952.200\n",
            "Epoch 87 loss: 10454.505\n",
            "Epoch 174 loss: 7376.838\n",
            "Epoch 261 loss: 3354.806\n",
            "Epoch 348 loss: 3135.357\n",
            "----> Training for computer_tv\n",
            "Epoch 0 loss: 364.685\n",
            "Epoch 87 loss: 1.078\n",
            "Epoch 174 loss: 0.538\n",
            "Epoch 261 loss: 0.349\n",
            "Epoch 348 loss: 0.263\n",
            "----> Transfer training for computer_tv\n",
            "Epoch 0 loss: 205.338\n",
            "Epoch 87 loss: 1.363\n",
            "Epoch 174 loss: 0.834\n",
            "Epoch 261 loss: 0.583\n",
            "Epoch 348 loss: 0.439\n",
            "----> DD step for computer_tv\n",
            "Epoch 0 loss: 29261.819\n",
            "Epoch 87 loss: 449.391\n",
            "Epoch 174 loss: 416.170\n",
            "Epoch 261 loss: 398.583\n",
            "Epoch 348 loss: 379.504\n",
            "----> Training for heating\n",
            "Epoch 0 loss: 1704.072\n",
            "Epoch 87 loss: 0.374\n",
            "Epoch 174 loss: 0.248\n",
            "Epoch 261 loss: 0.200\n",
            "Epoch 348 loss: 0.163\n",
            "----> Transfer training for heating\n",
            "Epoch 0 loss: 7598.712\n",
            "Epoch 87 loss: 2.507\n",
            "Epoch 174 loss: 2.231\n",
            "Epoch 261 loss: 1.943\n",
            "Epoch 348 loss: 1.671\n",
            "----> DD step for heating\n",
            "Epoch 0 loss: 9735.514\n",
            "Epoch 87 loss: 990.155\n",
            "Epoch 174 loss: 540.548\n",
            "Epoch 261 loss: 438.937\n",
            "Epoch 348 loss: 386.290\n",
            "WEEK 23\n",
            "----> Training for fridge\n",
            "Epoch 0 loss: 952.868\n",
            "Epoch 87 loss: 6.083\n",
            "Epoch 174 loss: 2.495\n",
            "Epoch 261 loss: 1.426\n",
            "Epoch 348 loss: 0.951\n",
            "----> Transfer training for fridge\n",
            "Epoch 0 loss: 996.005\n",
            "Epoch 87 loss: 10.150\n",
            "Epoch 174 loss: 4.877\n",
            "Epoch 261 loss: 2.754\n",
            "Epoch 348 loss: 1.761\n",
            "----> DD step for fridge\n",
            "Epoch 0 loss: 25578.763\n",
            "Epoch 87 loss: 1406.689\n",
            "Epoch 174 loss: 1280.815\n",
            "Epoch 261 loss: 1207.864\n",
            "Epoch 348 loss: 1158.801\n",
            "----> Training for washing_drying\n",
            "Epoch 0 loss: 33516.422\n",
            "Epoch 87 loss: 90.119\n",
            "Epoch 174 loss: 50.684\n",
            "Epoch 261 loss: 42.613\n",
            "Epoch 348 loss: 40.716\n",
            "----> Transfer training for washing_drying\n",
            "Epoch 0 loss: 20759.917\n",
            "Epoch 87 loss: 51.996\n",
            "Epoch 174 loss: 48.037\n",
            "Epoch 261 loss: 45.106\n",
            "Epoch 348 loss: 34.665\n",
            "----> DD step for washing_drying\n",
            "Epoch 0 loss: 36917.509\n",
            "Epoch 87 loss: 4626.726\n",
            "Epoch 174 loss: 1904.472\n",
            "Epoch 261 loss: 941.345\n",
            "Epoch 348 loss: 466.087\n",
            "----> Training for computer_tv\n",
            "Epoch 0 loss: 259.432\n",
            "Epoch 87 loss: 0.822\n",
            "Epoch 174 loss: 0.431\n",
            "Epoch 261 loss: 0.289\n",
            "Epoch 348 loss: 0.210\n",
            "----> Transfer training for computer_tv\n",
            "Epoch 0 loss: 270.010\n",
            "Epoch 87 loss: 1.717\n",
            "Epoch 174 loss: 1.009\n",
            "Epoch 261 loss: 0.680\n",
            "Epoch 348 loss: 0.511\n",
            "----> DD step for computer_tv\n",
            "Epoch 0 loss: 1258.816\n",
            "Epoch 87 loss: 214.795\n",
            "Epoch 174 loss: 138.636\n",
            "Epoch 261 loss: 116.257\n",
            "Epoch 348 loss: 107.570\n",
            "----> Training for heating\n",
            "Epoch 0 loss: 8844.043\n",
            "Epoch 87 loss: 0.546\n",
            "Epoch 174 loss: 0.341\n",
            "Epoch 261 loss: 0.295\n",
            "Epoch 348 loss: 0.261\n",
            "----> Transfer training for heating\n",
            "Epoch 0 loss: 12398.614\n",
            "Epoch 87 loss: 2.269\n",
            "Epoch 174 loss: 1.102\n",
            "Epoch 261 loss: 0.998\n",
            "Epoch 348 loss: 0.947\n",
            "----> DD step for heating\n",
            "Epoch 0 loss: 12301.001\n",
            "Epoch 87 loss: 2602.087\n",
            "Epoch 174 loss: 520.408\n",
            "Epoch 261 loss: 498.277\n",
            "Epoch 348 loss: 203.987\n",
            "WEEK 24\n",
            "----> Training for fridge\n",
            "Epoch 0 loss: 690.354\n",
            "Epoch 87 loss: 5.067\n",
            "Epoch 174 loss: 2.393\n",
            "Epoch 261 loss: 1.259\n",
            "Epoch 348 loss: 0.744\n",
            "----> Transfer training for fridge\n",
            "Epoch 0 loss: 1216.941\n",
            "Epoch 87 loss: 10.513\n",
            "Epoch 174 loss: 5.265\n",
            "Epoch 261 loss: 3.194\n",
            "Epoch 348 loss: 2.174\n",
            "----> DD step for fridge\n",
            "Epoch 0 loss: 73815.025\n",
            "Epoch 87 loss: 1447.253\n",
            "Epoch 174 loss: 1393.898\n",
            "Epoch 261 loss: 1359.299\n",
            "Epoch 348 loss: 1334.170\n",
            "----> Training for washing_drying\n",
            "Epoch 0 loss: 24880.443\n",
            "Epoch 87 loss: 60.778\n",
            "Epoch 174 loss: 42.193\n",
            "Epoch 261 loss: 38.146\n",
            "Epoch 348 loss: 36.505\n",
            "----> Transfer training for washing_drying\n",
            "Epoch 0 loss: 24175.769\n",
            "Epoch 87 loss: 46.461\n",
            "Epoch 174 loss: 43.414\n",
            "Epoch 261 loss: 42.497\n",
            "Epoch 348 loss: 41.673\n",
            "----> DD step for washing_drying\n",
            "Epoch 0 loss: 31542.916\n",
            "Epoch 87 loss: 2842.840\n",
            "Epoch 174 loss: 423.830\n",
            "Epoch 261 loss: 309.649\n",
            "Epoch 348 loss: 290.670\n",
            "----> Training for computer_tv\n",
            "Epoch 0 loss: 338.267\n",
            "Epoch 87 loss: 0.868\n",
            "Epoch 174 loss: 0.435\n",
            "Epoch 261 loss: 0.299\n",
            "Epoch 348 loss: 0.202\n",
            "----> Transfer training for computer_tv\n",
            "Epoch 0 loss: 219.100\n",
            "Epoch 87 loss: 1.306\n",
            "Epoch 174 loss: 0.686\n",
            "Epoch 261 loss: 0.446\n",
            "Epoch 348 loss: 0.311\n",
            "----> DD step for computer_tv\n",
            "Epoch 0 loss: 1027.931\n",
            "Epoch 87 loss: 265.875\n",
            "Epoch 174 loss: 144.243\n",
            "Epoch 261 loss: 103.656\n",
            "Epoch 348 loss: 91.878\n",
            "----> Training for heating\n",
            "Epoch 0 loss: 2766.118\n",
            "Epoch 87 loss: 0.817\n",
            "Epoch 174 loss: 0.696\n",
            "Epoch 261 loss: 0.607\n",
            "Epoch 348 loss: 0.530\n",
            "----> Transfer training for heating\n",
            "Epoch 0 loss: 13380.869\n",
            "Epoch 87 loss: 1.439\n",
            "Epoch 174 loss: 1.306\n",
            "Epoch 261 loss: 1.262\n",
            "Epoch 348 loss: 1.216\n",
            "----> DD step for heating\n",
            "Epoch 0 loss: 15041.648\n",
            "Epoch 87 loss: 4290.972\n",
            "Epoch 174 loss: 2664.679\n",
            "Epoch 261 loss: 1942.574\n",
            "Epoch 348 loss: 184.475\n",
            "WEEK 25\n",
            "----> Training for fridge\n",
            "Epoch 0 loss: 1084.689\n",
            "Epoch 87 loss: 5.330\n",
            "Epoch 174 loss: 1.902\n",
            "Epoch 261 loss: 1.151\n",
            "Epoch 348 loss: 0.813\n",
            "----> Transfer training for fridge\n",
            "Epoch 0 loss: 1115.520\n",
            "Epoch 87 loss: 11.468\n",
            "Epoch 174 loss: 5.618\n",
            "Epoch 261 loss: 3.204\n",
            "Epoch 348 loss: 2.154\n",
            "----> DD step for fridge\n",
            "Epoch 0 loss: 22463.030\n",
            "Epoch 87 loss: 1717.603\n",
            "Epoch 174 loss: 1590.427\n",
            "Epoch 261 loss: 650.221\n",
            "Epoch 348 loss: 528.756\n",
            "----> Training for washing_drying\n",
            "Epoch 0 loss: 15726.229\n",
            "Epoch 87 loss: 31.279\n",
            "Epoch 174 loss: 23.706\n",
            "Epoch 261 loss: 22.288\n",
            "Epoch 348 loss: 19.172\n",
            "----> Transfer training for washing_drying\n",
            "Epoch 0 loss: 19614.645\n",
            "Epoch 87 loss: 51.662\n",
            "Epoch 174 loss: 30.463\n",
            "Epoch 261 loss: 27.486\n",
            "Epoch 348 loss: 24.796\n",
            "----> DD step for washing_drying\n",
            "Epoch 0 loss: 19941.589\n",
            "Epoch 87 loss: 3391.181\n",
            "Epoch 174 loss: 2150.549\n",
            "Epoch 261 loss: 1888.915\n",
            "Epoch 348 loss: 1349.412\n",
            "----> Training for computer_tv\n",
            "Epoch 0 loss: 328.779\n",
            "Epoch 87 loss: 1.028\n",
            "Epoch 174 loss: 0.499\n",
            "Epoch 261 loss: 0.351\n",
            "Epoch 348 loss: 0.269\n",
            "----> Transfer training for computer_tv\n",
            "Epoch 0 loss: 357.693\n",
            "Epoch 87 loss: 1.888\n",
            "Epoch 174 loss: 1.106\n",
            "Epoch 261 loss: 0.786\n",
            "Epoch 348 loss: 0.622\n",
            "----> DD step for computer_tv\n",
            "Epoch 0 loss: 602.532\n",
            "Epoch 87 loss: 253.750\n",
            "Epoch 174 loss: 165.552\n",
            "Epoch 261 loss: 137.904\n",
            "Epoch 348 loss: 123.612\n",
            "----> Training for heating\n",
            "Epoch 0 loss: 5862.604\n",
            "Epoch 87 loss: 1.599\n",
            "Epoch 174 loss: 1.264\n",
            "Epoch 261 loss: 1.166\n",
            "Epoch 348 loss: 1.085\n",
            "----> Transfer training for heating\n",
            "Epoch 0 loss: 9451.755\n",
            "Epoch 87 loss: 1.322\n",
            "Epoch 174 loss: 0.905\n",
            "Epoch 261 loss: 0.813\n",
            "Epoch 348 loss: 0.758\n",
            "----> DD step for heating\n",
            "Epoch 0 loss: 9964.954\n",
            "Epoch 87 loss: 2273.400\n",
            "Epoch 174 loss: 1822.869\n",
            "Epoch 261 loss: 112.123\n",
            "Epoch 348 loss: 39.724\n",
            "WEEK 26\n",
            "----> Training for fridge\n",
            "Epoch 0 loss: 813.855\n",
            "Epoch 87 loss: 4.786\n",
            "Epoch 174 loss: 1.632\n",
            "Epoch 261 loss: 0.941\n",
            "Epoch 348 loss: 0.640\n",
            "----> Transfer training for fridge\n",
            "Epoch 0 loss: 1154.075\n",
            "Epoch 87 loss: 8.393\n",
            "Epoch 174 loss: 3.968\n",
            "Epoch 261 loss: 2.469\n",
            "Epoch 348 loss: 1.779\n",
            "----> DD step for fridge\n",
            "Epoch 0 loss: 15813.942\n",
            "Epoch 87 loss: 1508.306\n",
            "Epoch 174 loss: 1380.848\n",
            "Epoch 261 loss: 861.998\n",
            "Epoch 348 loss: 517.723\n",
            "----> Training for washing_drying\n",
            "Epoch 0 loss: 26982.477\n",
            "Epoch 87 loss: 63.338\n",
            "Epoch 174 loss: 45.740\n",
            "Epoch 261 loss: 31.358\n",
            "Epoch 348 loss: 28.458\n",
            "----> Transfer training for washing_drying\n",
            "Epoch 0 loss: 31684.291\n",
            "Epoch 87 loss: 28.840\n",
            "Epoch 174 loss: 17.924\n",
            "Epoch 261 loss: 13.730\n",
            "Epoch 348 loss: 12.835\n",
            "----> DD step for washing_drying\n",
            "Epoch 0 loss: 39576.738\n",
            "Epoch 87 loss: 4045.429\n",
            "Epoch 174 loss: 1383.161\n",
            "Epoch 261 loss: 546.560\n",
            "Epoch 348 loss: 301.051\n",
            "----> Training for computer_tv\n",
            "Epoch 0 loss: 281.966\n",
            "Epoch 87 loss: 0.971\n",
            "Epoch 174 loss: 0.467\n",
            "Epoch 261 loss: 0.276\n",
            "Epoch 348 loss: 0.211\n",
            "----> Transfer training for computer_tv\n",
            "Epoch 0 loss: 283.313\n",
            "Epoch 87 loss: 1.742\n",
            "Epoch 174 loss: 0.989\n",
            "Epoch 261 loss: 0.649\n",
            "Epoch 348 loss: 0.471\n",
            "----> DD step for computer_tv\n",
            "Epoch 0 loss: 10166.836\n",
            "Epoch 87 loss: 467.819\n",
            "Epoch 174 loss: 427.881\n",
            "Epoch 261 loss: 316.340\n",
            "Epoch 348 loss: 186.863\n",
            "----> Training for heating\n",
            "Epoch 0 loss: 7135.254\n",
            "Epoch 87 loss: 2.863\n",
            "Epoch 174 loss: 1.120\n",
            "Epoch 261 loss: 0.904\n",
            "Epoch 348 loss: 0.845\n",
            "----> Transfer training for heating\n",
            "Epoch 0 loss: 7903.398\n",
            "Epoch 87 loss: 1.200\n",
            "Epoch 174 loss: 0.811\n",
            "Epoch 261 loss: 0.695\n",
            "Epoch 348 loss: 0.588\n",
            "----> DD step for heating\n",
            "Epoch 0 loss: 7942.173\n",
            "Epoch 87 loss: 3857.183\n",
            "Epoch 174 loss: 2284.471\n",
            "Epoch 261 loss: 242.169\n",
            "Epoch 348 loss: 199.372\n",
            "WEEK 27\n",
            "----> Training for fridge\n",
            "Epoch 0 loss: 918.858\n",
            "Epoch 87 loss: 4.976\n",
            "Epoch 174 loss: 1.927\n",
            "Epoch 261 loss: 1.072\n",
            "Epoch 348 loss: 0.696\n",
            "----> Transfer training for fridge\n",
            "Epoch 0 loss: 1466.178\n",
            "Epoch 87 loss: 8.788\n",
            "Epoch 174 loss: 4.351\n",
            "Epoch 261 loss: 2.755\n",
            "Epoch 348 loss: 1.997\n",
            "----> DD step for fridge\n",
            "Epoch 0 loss: 3613.414\n",
            "Epoch 87 loss: 1319.184\n",
            "Epoch 174 loss: 933.091\n",
            "Epoch 261 loss: 801.643\n",
            "Epoch 348 loss: 700.293\n",
            "----> Training for washing_drying\n",
            "Epoch 0 loss: 27928.346\n",
            "Epoch 87 loss: 122.030\n",
            "Epoch 174 loss: 85.800\n",
            "Epoch 261 loss: 33.252\n",
            "Epoch 348 loss: 24.584\n",
            "----> Transfer training for washing_drying\n",
            "Epoch 0 loss: 35020.441\n",
            "Epoch 87 loss: 36.375\n",
            "Epoch 174 loss: 15.820\n",
            "Epoch 261 loss: 14.948\n",
            "Epoch 348 loss: 8.966\n",
            "----> DD step for washing_drying\n",
            "Epoch 0 loss: 35120.488\n",
            "Epoch 87 loss: 5182.916\n",
            "Epoch 174 loss: 2520.678\n",
            "Epoch 261 loss: 1859.733\n",
            "Epoch 348 loss: 1593.226\n",
            "----> Training for computer_tv\n",
            "Epoch 0 loss: 348.630\n",
            "Epoch 87 loss: 0.988\n",
            "Epoch 174 loss: 0.447\n",
            "Epoch 261 loss: 0.284\n",
            "Epoch 348 loss: 0.187\n",
            "----> Transfer training for computer_tv\n",
            "Epoch 0 loss: 540.551\n",
            "Epoch 87 loss: 2.851\n",
            "Epoch 174 loss: 1.576\n",
            "Epoch 261 loss: 1.106\n",
            "Epoch 348 loss: 0.782\n",
            "----> DD step for computer_tv\n",
            "Epoch 0 loss: 2415.250\n",
            "Epoch 87 loss: 372.584\n",
            "Epoch 174 loss: 240.746\n",
            "Epoch 261 loss: 192.115\n",
            "Epoch 348 loss: 184.734\n",
            "----> Training for heating\n",
            "Epoch 0 loss: 4899.775\n",
            "Epoch 87 loss: 1.134\n",
            "Epoch 174 loss: 0.739\n",
            "Epoch 261 loss: 0.644\n",
            "Epoch 348 loss: 0.581\n",
            "----> Transfer training for heating\n",
            "Epoch 0 loss: 13688.980\n",
            "Epoch 87 loss: 3.327\n",
            "Epoch 174 loss: 2.458\n",
            "Epoch 261 loss: 2.200\n",
            "Epoch 348 loss: 1.984\n",
            "----> DD step for heating\n",
            "Epoch 0 loss: 45020.894\n",
            "Epoch 87 loss: 11164.616\n",
            "Epoch 174 loss: 9347.616\n",
            "Epoch 261 loss: 9134.711\n",
            "Epoch 348 loss: 7386.709\n",
            "WEEK 28\n",
            "----> Training for fridge\n",
            "Epoch 0 loss: 1113.487\n",
            "Epoch 87 loss: 5.301\n",
            "Epoch 174 loss: 2.272\n",
            "Epoch 261 loss: 1.253\n",
            "Epoch 348 loss: 0.809\n",
            "----> Transfer training for fridge\n",
            "Epoch 0 loss: 2025.046\n",
            "Epoch 87 loss: 10.166\n",
            "Epoch 174 loss: 4.355\n",
            "Epoch 261 loss: 2.598\n",
            "Epoch 348 loss: 1.721\n",
            "----> DD step for fridge\n",
            "Epoch 0 loss: 11338.598\n",
            "Epoch 87 loss: 2044.387\n",
            "Epoch 174 loss: 648.725\n",
            "Epoch 261 loss: 489.998\n",
            "Epoch 348 loss: 393.091\n",
            "----> Training for washing_drying\n",
            "Epoch 0 loss: 17135.773\n",
            "Epoch 87 loss: 61.570\n",
            "Epoch 174 loss: 33.440\n",
            "Epoch 261 loss: 18.976\n",
            "Epoch 348 loss: 13.189\n",
            "----> Transfer training for washing_drying\n",
            "Epoch 0 loss: 26850.228\n",
            "Epoch 87 loss: 85.417\n",
            "Epoch 174 loss: 41.308\n",
            "Epoch 261 loss: 35.942\n",
            "Epoch 348 loss: 35.307\n",
            "----> DD step for washing_drying\n",
            "Epoch 0 loss: 40762.197\n",
            "Epoch 87 loss: 4761.953\n",
            "Epoch 174 loss: 2677.737\n",
            "Epoch 261 loss: 1803.043\n",
            "Epoch 348 loss: 1263.612\n",
            "----> Training for computer_tv\n",
            "Epoch 0 loss: 298.728\n",
            "Epoch 87 loss: 1.042\n",
            "Epoch 174 loss: 0.541\n",
            "Epoch 261 loss: 0.344\n",
            "Epoch 348 loss: 0.239\n",
            "----> Transfer training for computer_tv\n",
            "Epoch 0 loss: 458.378\n",
            "Epoch 87 loss: 1.909\n",
            "Epoch 174 loss: 0.867\n",
            "Epoch 261 loss: 0.515\n",
            "Epoch 348 loss: 0.355\n",
            "----> DD step for computer_tv\n",
            "Epoch 0 loss: 3773.134\n",
            "Epoch 87 loss: 298.882\n",
            "Epoch 174 loss: 157.521\n",
            "Epoch 261 loss: 138.370\n",
            "Epoch 348 loss: 127.560\n",
            "----> Training for heating\n",
            "Epoch 0 loss: 2523.360\n",
            "Epoch 87 loss: 0.568\n",
            "Epoch 174 loss: 0.459\n",
            "Epoch 261 loss: 0.345\n",
            "Epoch 348 loss: 0.248\n",
            "----> Transfer training for heating\n",
            "Epoch 0 loss: 11453.980\n",
            "Epoch 87 loss: 1.317\n",
            "Epoch 174 loss: 1.077\n",
            "Epoch 261 loss: 0.972\n",
            "Epoch 348 loss: 0.863\n",
            "----> DD step for heating\n",
            "Epoch 0 loss: 32220.362\n",
            "Epoch 87 loss: 9979.603\n",
            "Epoch 174 loss: 3276.002\n",
            "Epoch 261 loss: 2335.578\n",
            "Epoch 348 loss: 1852.518\n",
            "WEEK 29\n",
            "----> Training for fridge\n",
            "Epoch 0 loss: 1319.532\n",
            "Epoch 87 loss: 8.517\n",
            "Epoch 174 loss: 4.228\n",
            "Epoch 261 loss: 2.453\n",
            "Epoch 348 loss: 1.534\n",
            "----> Transfer training for fridge\n",
            "Epoch 0 loss: 853.879\n",
            "Epoch 87 loss: 9.541\n",
            "Epoch 174 loss: 3.818\n",
            "Epoch 261 loss: 2.284\n",
            "Epoch 348 loss: 1.576\n",
            "----> DD step for fridge\n",
            "Epoch 0 loss: 36618.103\n",
            "Epoch 87 loss: 1697.345\n",
            "Epoch 174 loss: 1546.961\n",
            "Epoch 261 loss: 727.063\n",
            "Epoch 348 loss: 607.300\n",
            "----> Training for washing_drying\n",
            "Epoch 0 loss: 26568.629\n",
            "Epoch 87 loss: 193.144\n",
            "Epoch 174 loss: 105.535\n",
            "Epoch 261 loss: 74.642\n",
            "Epoch 348 loss: 45.983\n",
            "----> Transfer training for washing_drying\n",
            "Epoch 0 loss: 27132.134\n",
            "Epoch 87 loss: 91.427\n",
            "Epoch 174 loss: 77.279\n",
            "Epoch 261 loss: 19.316\n",
            "Epoch 348 loss: 10.087\n",
            "----> DD step for washing_drying\n",
            "Epoch 0 loss: 35365.234\n",
            "Epoch 87 loss: 5282.093\n",
            "Epoch 174 loss: 1993.618\n",
            "Epoch 261 loss: 1082.034\n",
            "Epoch 348 loss: 753.365\n",
            "----> Training for computer_tv\n",
            "Epoch 0 loss: 186.063\n",
            "Epoch 87 loss: 1.527\n",
            "Epoch 174 loss: 0.606\n",
            "Epoch 261 loss: 0.364\n",
            "Epoch 348 loss: 0.250\n",
            "----> Transfer training for computer_tv\n",
            "Epoch 0 loss: 575.273\n",
            "Epoch 87 loss: 3.995\n",
            "Epoch 174 loss: 1.529\n",
            "Epoch 261 loss: 0.887\n",
            "Epoch 348 loss: 0.594\n",
            "----> DD step for computer_tv\n",
            "Epoch 0 loss: 8306.309\n",
            "Epoch 87 loss: 637.557\n",
            "Epoch 174 loss: 426.830\n",
            "Epoch 261 loss: 270.832\n",
            "Epoch 348 loss: 207.315\n",
            "----> Training for heating\n",
            "Epoch 0 loss: 5298.104\n",
            "Epoch 87 loss: 3.573\n",
            "Epoch 174 loss: 3.117\n",
            "Epoch 261 loss: 2.709\n",
            "Epoch 348 loss: 2.390\n",
            "----> Transfer training for heating\n",
            "Epoch 0 loss: 9155.308\n",
            "Epoch 87 loss: 1.983\n",
            "Epoch 174 loss: 1.349\n",
            "Epoch 261 loss: 1.246\n",
            "Epoch 348 loss: 1.146\n",
            "----> DD step for heating\n",
            "Epoch 0 loss: 11327.166\n",
            "Epoch 87 loss: 1466.614\n",
            "Epoch 174 loss: 655.501\n",
            "Epoch 261 loss: 589.287\n",
            "Epoch 348 loss: 528.208\n",
            "WEEK 30\n",
            "----> Training for fridge\n",
            "Epoch 0 loss: 1358.780\n",
            "Epoch 87 loss: 11.541\n",
            "Epoch 174 loss: 4.458\n",
            "Epoch 261 loss: 2.129\n",
            "Epoch 348 loss: 1.272\n",
            "----> Transfer training for fridge\n",
            "Epoch 0 loss: 1657.654\n",
            "Epoch 87 loss: 9.837\n",
            "Epoch 174 loss: 5.748\n",
            "Epoch 261 loss: 3.959\n",
            "Epoch 348 loss: 3.006\n",
            "----> DD step for fridge\n",
            "Epoch 0 loss: 23133.542\n",
            "Epoch 87 loss: 1798.664\n",
            "Epoch 174 loss: 1685.175\n",
            "Epoch 261 loss: 743.651\n",
            "Epoch 348 loss: 599.553\n",
            "----> Training for washing_drying\n",
            "Epoch 0 loss: 22587.469\n",
            "Epoch 87 loss: 42.033\n",
            "Epoch 174 loss: 28.905\n",
            "Epoch 261 loss: 24.683\n",
            "Epoch 348 loss: 23.732\n",
            "----> Transfer training for washing_drying\n",
            "Epoch 0 loss: 33592.869\n",
            "Epoch 87 loss: 96.981\n",
            "Epoch 174 loss: 56.690\n",
            "Epoch 261 loss: 51.108\n",
            "Epoch 348 loss: 49.450\n",
            "----> DD step for washing_drying\n",
            "Epoch 0 loss: 56956.244\n",
            "Epoch 87 loss: 10852.516\n",
            "Epoch 174 loss: 5540.502\n",
            "Epoch 261 loss: 3859.164\n",
            "Epoch 348 loss: 3197.042\n",
            "----> Training for computer_tv\n",
            "Epoch 0 loss: 272.707\n",
            "Epoch 87 loss: 1.205\n",
            "Epoch 174 loss: 0.561\n",
            "Epoch 261 loss: 0.326\n",
            "Epoch 348 loss: 0.214\n",
            "----> Transfer training for computer_tv\n",
            "Epoch 0 loss: 568.281\n",
            "Epoch 87 loss: 3.895\n",
            "Epoch 174 loss: 1.959\n",
            "Epoch 261 loss: 1.329\n",
            "Epoch 348 loss: 1.002\n",
            "----> DD step for computer_tv\n",
            "Epoch 0 loss: 3059.111\n",
            "Epoch 87 loss: 558.228\n",
            "Epoch 174 loss: 306.197\n",
            "Epoch 261 loss: 253.350\n",
            "Epoch 348 loss: 206.562\n",
            "----> Training for heating\n",
            "Epoch 0 loss: 7662.701\n",
            "Epoch 87 loss: 2.371\n",
            "Epoch 174 loss: 0.640\n",
            "Epoch 261 loss: 0.485\n",
            "Epoch 348 loss: 0.386\n",
            "----> Transfer training for heating\n",
            "Epoch 0 loss: 10486.280\n",
            "Epoch 87 loss: 6.329\n",
            "Epoch 174 loss: 2.633\n",
            "Epoch 261 loss: 2.344\n",
            "Epoch 348 loss: 2.114\n",
            "----> DD step for heating\n",
            "Epoch 0 loss: 39189.903\n",
            "Epoch 87 loss: 7461.783\n",
            "Epoch 174 loss: 5338.354\n",
            "Epoch 261 loss: 4903.270\n",
            "Epoch 348 loss: 1146.635\n",
            "WEEK 31\n",
            "----> Training for fridge\n",
            "Epoch 0 loss: 924.384\n",
            "Epoch 87 loss: 5.350\n",
            "Epoch 174 loss: 2.189\n",
            "Epoch 261 loss: 1.109\n",
            "Epoch 348 loss: 0.663\n",
            "----> Transfer training for fridge\n",
            "Epoch 0 loss: 2673.400\n",
            "Epoch 87 loss: 32.799\n",
            "Epoch 174 loss: 14.504\n",
            "Epoch 261 loss: 7.938\n",
            "Epoch 348 loss: 5.555\n",
            "----> DD step for fridge\n",
            "Epoch 0 loss: 9000.715\n",
            "Epoch 87 loss: 2636.470\n",
            "Epoch 174 loss: 1173.316\n",
            "Epoch 261 loss: 855.553\n",
            "Epoch 348 loss: 615.864\n",
            "----> Training for washing_drying\n",
            "Epoch 0 loss: 18242.799\n",
            "Epoch 87 loss: 61.696\n",
            "Epoch 174 loss: 29.428\n",
            "Epoch 261 loss: 12.699\n",
            "Epoch 348 loss: 9.368\n",
            "----> Transfer training for washing_drying\n",
            "Epoch 0 loss: 29391.772\n",
            "Epoch 87 loss: 181.303\n",
            "Epoch 174 loss: 44.373\n",
            "Epoch 261 loss: 28.286\n",
            "Epoch 348 loss: 23.623\n",
            "----> DD step for washing_drying\n",
            "Epoch 0 loss: 30727.862\n",
            "Epoch 87 loss: 3919.237\n",
            "Epoch 174 loss: 2216.567\n",
            "Epoch 261 loss: 1656.781\n",
            "Epoch 348 loss: 1442.560\n",
            "----> Training for computer_tv\n",
            "Epoch 0 loss: 304.495\n",
            "Epoch 87 loss: 0.996\n",
            "Epoch 174 loss: 0.466\n",
            "Epoch 261 loss: 0.281\n",
            "Epoch 348 loss: 0.197\n",
            "----> Transfer training for computer_tv\n",
            "Epoch 0 loss: 406.073\n",
            "Epoch 87 loss: 2.208\n",
            "Epoch 174 loss: 1.089\n",
            "Epoch 261 loss: 0.658\n",
            "Epoch 348 loss: 0.428\n",
            "----> DD step for computer_tv\n",
            "Epoch 0 loss: 15903.656\n",
            "Epoch 87 loss: 603.678\n",
            "Epoch 174 loss: 546.509\n",
            "Epoch 261 loss: 511.257\n",
            "Epoch 348 loss: 397.606\n",
            "----> Training for heating\n",
            "Epoch 0 loss: 2898.020\n",
            "Epoch 87 loss: 0.786\n",
            "Epoch 174 loss: 0.736\n",
            "Epoch 261 loss: 0.694\n",
            "Epoch 348 loss: 0.653\n",
            "----> Transfer training for heating\n",
            "Epoch 0 loss: 19315.945\n",
            "Epoch 87 loss: 1.912\n",
            "Epoch 174 loss: 1.502\n",
            "Epoch 261 loss: 1.408\n",
            "Epoch 348 loss: 1.339\n",
            "----> DD step for heating\n",
            "Epoch 0 loss: 19270.256\n",
            "Epoch 87 loss: 1457.546\n",
            "Epoch 174 loss: 372.628\n",
            "Epoch 261 loss: 272.428\n",
            "Epoch 348 loss: 245.205\n",
            "WEEK 32\n",
            "----> Training for fridge\n",
            "Epoch 0 loss: 662.784\n",
            "Epoch 87 loss: 4.354\n",
            "Epoch 174 loss: 1.622\n",
            "Epoch 261 loss: 0.869\n",
            "Epoch 348 loss: 0.552\n",
            "----> Transfer training for fridge\n",
            "Epoch 0 loss: 1603.095\n",
            "Epoch 87 loss: 9.884\n",
            "Epoch 174 loss: 5.809\n",
            "Epoch 261 loss: 3.967\n",
            "Epoch 348 loss: 2.910\n",
            "----> DD step for fridge\n",
            "Epoch 0 loss: 4273.253\n",
            "Epoch 87 loss: 879.313\n",
            "Epoch 174 loss: 490.722\n",
            "Epoch 261 loss: 371.951\n",
            "Epoch 348 loss: 312.448\n",
            "----> Training for washing_drying\n",
            "Epoch 0 loss: 15556.789\n",
            "Epoch 87 loss: 132.172\n",
            "Epoch 174 loss: 58.952\n",
            "Epoch 261 loss: 55.382\n",
            "Epoch 348 loss: 40.015\n",
            "----> Transfer training for washing_drying\n",
            "Epoch 0 loss: 27672.309\n",
            "Epoch 87 loss: 66.379\n",
            "Epoch 174 loss: 64.254\n",
            "Epoch 261 loss: 62.691\n",
            "Epoch 348 loss: 61.202\n",
            "----> DD step for washing_drying\n",
            "Epoch 0 loss: 24309.616\n",
            "Epoch 87 loss: 2376.054\n",
            "Epoch 174 loss: 1745.338\n",
            "Epoch 261 loss: 1343.587\n",
            "Epoch 348 loss: 1028.080\n",
            "----> Training for computer_tv\n",
            "Epoch 0 loss: 309.190\n",
            "Epoch 87 loss: 0.989\n",
            "Epoch 174 loss: 0.383\n",
            "Epoch 261 loss: 0.179\n",
            "Epoch 348 loss: 0.106\n",
            "----> Transfer training for computer_tv\n",
            "Epoch 0 loss: 207.747\n",
            "Epoch 87 loss: 1.876\n",
            "Epoch 174 loss: 0.876\n",
            "Epoch 261 loss: 0.539\n",
            "Epoch 348 loss: 0.391\n",
            "----> DD step for computer_tv\n",
            "Epoch 0 loss: 8635.155\n",
            "Epoch 87 loss: 587.564\n",
            "Epoch 174 loss: 556.751\n",
            "Epoch 261 loss: 487.616\n",
            "Epoch 348 loss: 255.500\n",
            "----> Training for heating\n",
            "Epoch 0 loss: 2509.952\n",
            "Epoch 87 loss: 1.571\n",
            "Epoch 174 loss: 1.328\n",
            "Epoch 261 loss: 0.948\n",
            "Epoch 348 loss: 0.801\n",
            "----> Transfer training for heating\n",
            "Epoch 0 loss: 8107.130\n",
            "Epoch 87 loss: 2.028\n",
            "Epoch 174 loss: 1.745\n",
            "Epoch 261 loss: 1.536\n",
            "Epoch 348 loss: 1.339\n",
            "----> DD step for heating\n",
            "Epoch 0 loss: 30087.041\n",
            "Epoch 87 loss: 3790.430\n",
            "Epoch 174 loss: 1984.491\n",
            "Epoch 261 loss: 1597.194\n",
            "Epoch 348 loss: 1399.188\n",
            "WEEK 33\n",
            "----> Training for fridge\n",
            "Epoch 0 loss: 1036.166\n",
            "Epoch 87 loss: 4.621\n",
            "Epoch 174 loss: 1.653\n",
            "Epoch 261 loss: 0.922\n",
            "Epoch 348 loss: 0.606\n",
            "----> Transfer training for fridge\n",
            "Epoch 0 loss: 977.357\n",
            "Epoch 87 loss: 9.823\n",
            "Epoch 174 loss: 5.563\n",
            "Epoch 261 loss: 3.807\n",
            "Epoch 348 loss: 2.823\n",
            "----> DD step for fridge\n",
            "Epoch 0 loss: 2344.249\n",
            "Epoch 87 loss: 773.390\n",
            "Epoch 174 loss: 464.463\n",
            "Epoch 261 loss: 391.959\n",
            "Epoch 348 loss: 341.856\n",
            "----> Training for washing_drying\n",
            "Epoch 0 loss: 17006.648\n",
            "Epoch 87 loss: 86.759\n",
            "Epoch 174 loss: 30.093\n",
            "Epoch 261 loss: 14.273\n",
            "Epoch 348 loss: 7.292\n",
            "----> Transfer training for washing_drying\n",
            "Epoch 0 loss: 9945.899\n",
            "Epoch 87 loss: 30.994\n",
            "Epoch 174 loss: 11.118\n",
            "Epoch 261 loss: 9.288\n",
            "Epoch 348 loss: 8.588\n",
            "----> DD step for washing_drying\n",
            "Epoch 0 loss: 13095.060\n",
            "Epoch 87 loss: 3156.951\n",
            "Epoch 174 loss: 1803.099\n",
            "Epoch 261 loss: 1452.505\n",
            "Epoch 348 loss: 1341.451\n",
            "----> Training for computer_tv\n",
            "Epoch 0 loss: 176.370\n",
            "Epoch 87 loss: 1.032\n",
            "Epoch 174 loss: 0.391\n",
            "Epoch 261 loss: 0.223\n",
            "Epoch 348 loss: 0.144\n",
            "----> Transfer training for computer_tv\n",
            "Epoch 0 loss: 349.703\n",
            "Epoch 87 loss: 3.086\n",
            "Epoch 174 loss: 1.299\n",
            "Epoch 261 loss: 0.786\n",
            "Epoch 348 loss: 0.537\n",
            "----> DD step for computer_tv\n",
            "Epoch 0 loss: 16087.623\n",
            "Epoch 87 loss: 509.677\n",
            "Epoch 174 loss: 490.590\n",
            "Epoch 261 loss: 466.099\n",
            "Epoch 348 loss: 431.149\n",
            "----> Training for heating\n",
            "Epoch 0 loss: 3649.463\n",
            "Epoch 87 loss: 1.533\n",
            "Epoch 174 loss: 1.354\n",
            "Epoch 261 loss: 1.262\n",
            "Epoch 348 loss: 1.175\n",
            "----> Transfer training for heating\n",
            "Epoch 0 loss: 7494.501\n",
            "Epoch 87 loss: 1.695\n",
            "Epoch 174 loss: 1.181\n",
            "Epoch 261 loss: 1.119\n",
            "Epoch 348 loss: 1.055\n",
            "----> DD step for heating\n",
            "Epoch 0 loss: 17594.461\n",
            "Epoch 87 loss: 2635.865\n",
            "Epoch 174 loss: 817.836\n",
            "Epoch 261 loss: 591.120\n",
            "Epoch 348 loss: 547.038\n",
            "WEEK 34\n",
            "----> Training for fridge\n",
            "Epoch 0 loss: 724.385\n",
            "Epoch 87 loss: 4.398\n",
            "Epoch 174 loss: 1.914\n",
            "Epoch 261 loss: 1.062\n",
            "Epoch 348 loss: 0.676\n",
            "----> Transfer training for fridge\n",
            "Epoch 0 loss: 1353.698\n",
            "Epoch 87 loss: 13.883\n",
            "Epoch 174 loss: 6.824\n",
            "Epoch 261 loss: 4.701\n",
            "Epoch 348 loss: 3.586\n",
            "----> DD step for fridge\n",
            "Epoch 0 loss: 2565.027\n",
            "Epoch 87 loss: 740.892\n",
            "Epoch 174 loss: 492.546\n",
            "Epoch 261 loss: 385.649\n",
            "Epoch 348 loss: 281.041\n",
            "----> Training for washing_drying\n",
            "Epoch 0 loss: 24514.803\n",
            "Epoch 87 loss: 64.661\n",
            "Epoch 174 loss: 34.671\n",
            "Epoch 261 loss: 28.671\n",
            "Epoch 348 loss: 12.523\n",
            "----> Transfer training for washing_drying\n",
            "Epoch 0 loss: 16891.581\n",
            "Epoch 87 loss: 34.912\n",
            "Epoch 174 loss: 20.133\n",
            "Epoch 261 loss: 19.150\n",
            "Epoch 348 loss: 18.631\n",
            "----> DD step for washing_drying\n",
            "Epoch 0 loss: 31312.397\n",
            "Epoch 87 loss: 3234.312\n",
            "Epoch 174 loss: 923.914\n",
            "Epoch 261 loss: 384.371\n",
            "Epoch 348 loss: 253.820\n",
            "----> Training for computer_tv\n",
            "Epoch 0 loss: 302.357\n",
            "Epoch 87 loss: 0.958\n",
            "Epoch 174 loss: 0.250\n",
            "Epoch 261 loss: 0.151\n",
            "Epoch 348 loss: 0.178\n",
            "----> Transfer training for computer_tv\n",
            "Epoch 0 loss: 628.836\n",
            "Epoch 87 loss: 4.135\n",
            "Epoch 174 loss: 2.053\n",
            "Epoch 261 loss: 1.363\n",
            "Epoch 348 loss: 1.004\n",
            "----> DD step for computer_tv\n",
            "Epoch 0 loss: 13954.191\n",
            "Epoch 87 loss: 827.484\n",
            "Epoch 174 loss: 683.042\n",
            "Epoch 261 loss: 461.400\n",
            "Epoch 348 loss: 312.952\n",
            "----> Training for heating\n",
            "Epoch 0 loss: 5528.438\n",
            "Epoch 87 loss: 1.511\n",
            "Epoch 174 loss: 1.058\n",
            "Epoch 261 loss: 0.942\n",
            "Epoch 348 loss: 0.879\n",
            "----> Transfer training for heating\n",
            "Epoch 0 loss: 18085.769\n",
            "Epoch 87 loss: 183.900\n",
            "Epoch 174 loss: 66.254\n",
            "Epoch 261 loss: 22.730\n",
            "Epoch 348 loss: 7.512\n",
            "----> DD step for heating\n",
            "Epoch 0 loss: 20020.508\n",
            "Epoch 87 loss: 6087.575\n",
            "Epoch 174 loss: 5296.326\n",
            "Epoch 261 loss: 967.096\n",
            "Epoch 348 loss: 823.252\n"
          ]
        }
      ],
      "source": [
        "y_apps_tdsc = []\n",
        "y_apps_test_tdsc = []\n",
        "#weeks_to_train = 5 # len(train) - 1\n",
        "\n",
        "for week in range(weeks_to_train):\n",
        "  print('WEEK {}'.format(week))\n",
        "  current_y = dict()\n",
        "  current_y_test = dict()\n",
        "  for cat in appliance_categories:\n",
        "    current_y_cat, current_y_test_cat = train_on_week_and_category(week, cat, dsc_learning_rate, input_size, output_size, num_filters, filter_size, encoding_dim, num_epochs, display_every_n_epochs, enable_transfer_learning=True, target_ind=target_ind)\n",
        "\n",
        "    current_y[cat] = current_y_cat\n",
        "    current_y_test[cat] = current_y_test_cat\n",
        "\n",
        "  y_apps_tdsc.append(current_y)\n",
        "  y_apps_test_tdsc.append(current_y_test)"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "nTxTkfJJe864"
      },
      "source": [
        "#### VSC"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "vtjxP8qUCsz6",
        "outputId": "f3935f37-6024-41b0-d3b0-aa1017fd07b6"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "WEEK 0\n",
            "----> Training for fridge\n",
            "Epoch 0 loss: 451.429\n",
            "Epoch 87 loss: 322.942\n",
            "Epoch 174 loss: 318.049\n",
            "Epoch 261 loss: 315.615\n",
            "Epoch 348 loss: 314.617\n",
            "----> DD step for fridge\n",
            "Epoch 0 loss: 857.851\n",
            "Epoch 87 loss: 526.223\n",
            "Epoch 174 loss: 452.907\n",
            "Epoch 261 loss: 444.291\n",
            "Epoch 348 loss: 437.284\n",
            "----> Training for washing_drying\n",
            "Epoch 0 loss: 8091.742\n",
            "Epoch 87 loss: 7829.617\n",
            "Epoch 174 loss: 7808.286\n",
            "Epoch 261 loss: 7779.743\n",
            "Epoch 348 loss: 7815.184\n",
            "----> DD step for washing_drying\n",
            "Epoch 0 loss: 8207.968\n",
            "Epoch 87 loss: 7903.915\n",
            "Epoch 174 loss: 7849.699\n",
            "Epoch 261 loss: 7845.448\n",
            "Epoch 348 loss: 7842.424\n",
            "----> Training for computer_tv\n",
            "Epoch 0 loss: 277.157\n",
            "Epoch 87 loss: 154.430\n",
            "Epoch 174 loss: 153.559\n",
            "Epoch 261 loss: 151.903\n",
            "Epoch 348 loss: 150.923\n",
            "----> DD step for computer_tv\n",
            "Epoch 0 loss: 361.872\n",
            "Epoch 87 loss: 214.491\n",
            "Epoch 174 loss: 197.213\n",
            "Epoch 261 loss: 188.992\n",
            "Epoch 348 loss: 182.498\n",
            "----> Training for heating\n",
            "Epoch 0 loss: 2524.727\n",
            "Epoch 87 loss: 2241.926\n",
            "Epoch 174 loss: 2240.504\n",
            "Epoch 261 loss: 2244.828\n",
            "Epoch 348 loss: 2236.167\n",
            "----> DD step for heating\n",
            "Epoch 0 loss: 2604.857\n",
            "Epoch 87 loss: 2272.785\n",
            "Epoch 174 loss: 2270.929\n",
            "Epoch 261 loss: 2257.380\n",
            "Epoch 348 loss: 2253.625\n",
            "WEEK 1\n",
            "----> Training for fridge\n",
            "Epoch 0 loss: 1000.322\n",
            "Epoch 87 loss: 382.940\n",
            "Epoch 174 loss: 371.849\n",
            "Epoch 261 loss: 367.020\n",
            "Epoch 348 loss: 370.133\n",
            "----> DD step for fridge\n",
            "Epoch 0 loss: 1462.390\n",
            "Epoch 87 loss: 549.669\n",
            "Epoch 174 loss: 520.920\n",
            "Epoch 261 loss: 499.127\n",
            "Epoch 348 loss: 482.250\n",
            "----> Training for washing_drying\n",
            "Epoch 0 loss: 8777.953\n",
            "Epoch 87 loss: 8474.789\n",
            "Epoch 174 loss: 8467.445\n",
            "Epoch 261 loss: 8470.937\n",
            "Epoch 348 loss: 8468.219\n",
            "----> DD step for washing_drying\n",
            "Epoch 0 loss: 8648.306\n",
            "Epoch 87 loss: 8683.760\n",
            "Epoch 174 loss: 8547.408\n",
            "Epoch 261 loss: 8534.500\n",
            "Epoch 348 loss: 8543.112\n",
            "----> Training for computer_tv\n",
            "Epoch 0 loss: 351.464\n",
            "Epoch 87 loss: 150.103\n",
            "Epoch 174 loss: 142.154\n",
            "Epoch 261 loss: 142.551\n",
            "Epoch 348 loss: 141.403\n",
            "----> DD step for computer_tv\n",
            "Epoch 0 loss: 1414.858\n",
            "Epoch 87 loss: 363.733\n",
            "Epoch 174 loss: 246.248\n",
            "Epoch 261 loss: 186.171\n",
            "Epoch 348 loss: 183.540\n",
            "----> Training for heating\n",
            "Epoch 0 loss: 3209.284\n",
            "Epoch 87 loss: 3178.322\n",
            "Epoch 174 loss: 3136.696\n",
            "Epoch 261 loss: 3178.879\n",
            "Epoch 348 loss: 3128.873\n",
            "----> DD step for heating\n",
            "Epoch 0 loss: 3193.534\n",
            "Epoch 87 loss: 3184.893\n",
            "Epoch 174 loss: 3183.776\n",
            "Epoch 261 loss: 3158.391\n",
            "Epoch 348 loss: 3169.752\n",
            "WEEK 2\n",
            "----> Training for fridge\n",
            "Epoch 0 loss: 960.359\n",
            "Epoch 87 loss: 391.894\n",
            "Epoch 174 loss: 382.631\n",
            "Epoch 261 loss: 386.392\n",
            "Epoch 348 loss: 383.059\n",
            "----> DD step for fridge\n",
            "Epoch 0 loss: 1065.135\n",
            "Epoch 87 loss: 564.504\n",
            "Epoch 174 loss: 522.034\n",
            "Epoch 261 loss: 531.981\n",
            "Epoch 348 loss: 536.336\n",
            "----> Training for washing_drying\n",
            "Epoch 0 loss: 8029.153\n",
            "Epoch 87 loss: 7737.234\n",
            "Epoch 174 loss: 7713.910\n",
            "Epoch 261 loss: 7659.964\n",
            "Epoch 348 loss: 7734.035\n",
            "----> DD step for washing_drying\n",
            "Epoch 0 loss: 7922.109\n",
            "Epoch 87 loss: 7771.401\n",
            "Epoch 174 loss: 7765.727\n",
            "Epoch 261 loss: 7743.651\n",
            "Epoch 348 loss: 7745.540\n",
            "----> Training for computer_tv\n",
            "Epoch 0 loss: 263.529\n",
            "Epoch 87 loss: 125.556\n",
            "Epoch 174 loss: 124.872\n",
            "Epoch 261 loss: 123.020\n",
            "Epoch 348 loss: 124.051\n",
            "----> DD step for computer_tv\n",
            "Epoch 0 loss: 339.761\n",
            "Epoch 87 loss: 161.360\n",
            "Epoch 174 loss: 154.860\n",
            "Epoch 261 loss: 152.242\n",
            "Epoch 348 loss: 151.118\n",
            "----> Training for heating\n",
            "Epoch 0 loss: 2117.330\n",
            "Epoch 87 loss: 2021.053\n",
            "Epoch 174 loss: 2015.278\n",
            "Epoch 261 loss: 2018.482\n",
            "Epoch 348 loss: 2003.998\n",
            "----> DD step for heating\n",
            "Epoch 0 loss: 2038.865\n",
            "Epoch 87 loss: 2027.904\n",
            "Epoch 174 loss: 2023.705\n",
            "Epoch 261 loss: 2017.190\n",
            "Epoch 348 loss: 2012.815\n",
            "WEEK 3\n",
            "----> Training for fridge\n",
            "Epoch 0 loss: 948.488\n",
            "Epoch 87 loss: 358.182\n",
            "Epoch 174 loss: 353.560\n",
            "Epoch 261 loss: 350.763\n",
            "Epoch 348 loss: 350.540\n",
            "----> DD step for fridge\n",
            "Epoch 0 loss: 1584.760\n",
            "Epoch 87 loss: 598.847\n",
            "Epoch 174 loss: 474.804\n",
            "Epoch 261 loss: 438.331\n",
            "Epoch 348 loss: 430.633\n",
            "----> Training for washing_drying\n",
            "Epoch 0 loss: 9051.662\n",
            "Epoch 87 loss: 8664.841\n",
            "Epoch 174 loss: 8747.148\n",
            "Epoch 261 loss: 8709.105\n",
            "Epoch 348 loss: 8702.950\n",
            "----> DD step for washing_drying\n",
            "Epoch 0 loss: 9075.848\n",
            "Epoch 87 loss: 8893.392\n",
            "Epoch 174 loss: 8824.793\n",
            "Epoch 261 loss: 8789.064\n",
            "Epoch 348 loss: 8812.575\n",
            "----> Training for computer_tv\n",
            "Epoch 0 loss: 308.066\n",
            "Epoch 87 loss: 145.315\n",
            "Epoch 174 loss: 145.336\n",
            "Epoch 261 loss: 142.458\n",
            "Epoch 348 loss: 143.873\n",
            "----> DD step for computer_tv\n",
            "Epoch 0 loss: 430.575\n",
            "Epoch 87 loss: 188.666\n",
            "Epoch 174 loss: 186.532\n",
            "Epoch 261 loss: 185.179\n",
            "Epoch 348 loss: 185.805\n",
            "----> Training for heating\n",
            "Epoch 0 loss: 3206.182\n",
            "Epoch 87 loss: 3229.043\n",
            "Epoch 174 loss: 3203.272\n",
            "Epoch 261 loss: 3186.477\n",
            "Epoch 348 loss: 3200.688\n",
            "----> DD step for heating\n",
            "Epoch 0 loss: 3263.565\n",
            "Epoch 87 loss: 3168.238\n",
            "Epoch 174 loss: 3180.215\n",
            "Epoch 261 loss: 3161.826\n",
            "Epoch 348 loss: 3035.404\n",
            "WEEK 4\n",
            "----> Training for fridge\n",
            "Epoch 0 loss: 834.727\n",
            "Epoch 87 loss: 341.521\n",
            "Epoch 174 loss: 335.015\n",
            "Epoch 261 loss: 337.337\n",
            "Epoch 348 loss: 337.018\n",
            "----> DD step for fridge\n",
            "Epoch 0 loss: 1637.841\n",
            "Epoch 87 loss: 605.453\n",
            "Epoch 174 loss: 485.710\n",
            "Epoch 261 loss: 469.698\n",
            "Epoch 348 loss: 453.409\n",
            "----> Training for washing_drying\n",
            "Epoch 0 loss: 6608.697\n",
            "Epoch 87 loss: 6372.793\n",
            "Epoch 174 loss: 6293.197\n",
            "Epoch 261 loss: 6295.512\n",
            "Epoch 348 loss: 6313.626\n",
            "----> DD step for washing_drying\n",
            "Epoch 0 loss: 6508.604\n",
            "Epoch 87 loss: 6413.824\n",
            "Epoch 174 loss: 6377.745\n",
            "Epoch 261 loss: 6338.737\n",
            "Epoch 348 loss: 6311.501\n",
            "----> Training for computer_tv\n",
            "Epoch 0 loss: 284.967\n",
            "Epoch 87 loss: 111.320\n",
            "Epoch 174 loss: 111.187\n",
            "Epoch 261 loss: 110.303\n",
            "Epoch 348 loss: 108.886\n",
            "----> DD step for computer_tv\n",
            "Epoch 0 loss: 6348.816\n",
            "Epoch 87 loss: 403.548\n",
            "Epoch 174 loss: 376.417\n",
            "Epoch 261 loss: 365.469\n",
            "Epoch 348 loss: 342.784\n",
            "----> Training for heating\n",
            "Epoch 0 loss: 4585.190\n",
            "Epoch 87 loss: 4504.387\n",
            "Epoch 174 loss: 4500.019\n",
            "Epoch 261 loss: 4499.138\n",
            "Epoch 348 loss: 4508.334\n",
            "----> DD step for heating\n",
            "Epoch 0 loss: 4870.247\n",
            "Epoch 87 loss: 4596.834\n",
            "Epoch 174 loss: 4560.222\n",
            "Epoch 261 loss: 4554.095\n",
            "Epoch 348 loss: 4515.791\n",
            "WEEK 5\n",
            "----> Training for fridge\n",
            "Epoch 0 loss: 977.698\n",
            "Epoch 87 loss: 404.460\n",
            "Epoch 174 loss: 398.075\n",
            "Epoch 261 loss: 391.651\n",
            "Epoch 348 loss: 391.744\n",
            "----> DD step for fridge\n",
            "Epoch 0 loss: 1799.313\n",
            "Epoch 87 loss: 992.038\n",
            "Epoch 174 loss: 563.526\n",
            "Epoch 261 loss: 517.908\n",
            "Epoch 348 loss: 516.147\n",
            "----> Training for washing_drying\n",
            "Epoch 0 loss: 7276.338\n",
            "Epoch 87 loss: 7151.081\n",
            "Epoch 174 loss: 7114.571\n",
            "Epoch 261 loss: 7090.276\n",
            "Epoch 348 loss: 7102.758\n",
            "----> DD step for washing_drying\n",
            "Epoch 0 loss: 7650.663\n",
            "Epoch 87 loss: 7255.963\n",
            "Epoch 174 loss: 7152.918\n",
            "Epoch 261 loss: 7173.630\n",
            "Epoch 348 loss: 7149.110\n",
            "----> Training for computer_tv\n",
            "Epoch 0 loss: 301.250\n",
            "Epoch 87 loss: 119.529\n",
            "Epoch 174 loss: 118.897\n",
            "Epoch 261 loss: 117.219\n",
            "Epoch 348 loss: 115.189\n",
            "----> DD step for computer_tv\n",
            "Epoch 0 loss: 717.745\n",
            "Epoch 87 loss: 233.316\n",
            "Epoch 174 loss: 172.112\n",
            "Epoch 261 loss: 170.003\n",
            "Epoch 348 loss: 164.977\n",
            "----> Training for heating\n",
            "Epoch 0 loss: 3996.607\n",
            "Epoch 87 loss: 3887.746\n",
            "Epoch 174 loss: 3886.532\n",
            "Epoch 261 loss: 3867.613\n",
            "Epoch 348 loss: 3879.231\n",
            "----> DD step for heating\n",
            "Epoch 0 loss: 4025.934\n",
            "Epoch 87 loss: 3961.011\n",
            "Epoch 174 loss: 3907.088\n",
            "Epoch 261 loss: 3889.160\n",
            "Epoch 348 loss: 3876.262\n",
            "WEEK 6\n",
            "----> Training for fridge\n",
            "Epoch 0 loss: 856.000\n",
            "Epoch 87 loss: 322.794\n",
            "Epoch 174 loss: 311.882\n",
            "Epoch 261 loss: 310.735\n",
            "Epoch 348 loss: 308.993\n",
            "----> DD step for fridge\n",
            "Epoch 0 loss: 2911.092\n",
            "Epoch 87 loss: 875.834\n",
            "Epoch 174 loss: 486.682\n",
            "Epoch 261 loss: 438.501\n",
            "Epoch 348 loss: 408.753\n",
            "----> Training for washing_drying\n",
            "Epoch 0 loss: 10553.892\n",
            "Epoch 87 loss: 9817.219\n",
            "Epoch 174 loss: 9855.816\n",
            "Epoch 261 loss: 9910.224\n",
            "Epoch 348 loss: 9853.267\n",
            "----> DD step for washing_drying\n",
            "Epoch 0 loss: 10682.117\n",
            "Epoch 87 loss: 10147.417\n",
            "Epoch 174 loss: 10090.446\n",
            "Epoch 261 loss: 10136.392\n",
            "Epoch 348 loss: 10025.927\n",
            "----> Training for computer_tv\n",
            "Epoch 0 loss: 304.306\n",
            "Epoch 87 loss: 122.313\n",
            "Epoch 174 loss: 119.155\n",
            "Epoch 261 loss: 118.108\n",
            "Epoch 348 loss: 118.442\n",
            "----> DD step for computer_tv\n",
            "Epoch 0 loss: 377.417\n",
            "Epoch 87 loss: 181.959\n",
            "Epoch 174 loss: 180.115\n",
            "Epoch 261 loss: 172.824\n",
            "Epoch 348 loss: 175.859\n",
            "----> Training for heating\n",
            "Epoch 0 loss: 3527.903\n",
            "Epoch 87 loss: 3532.998\n",
            "Epoch 174 loss: 3509.861\n",
            "Epoch 261 loss: 3526.562\n",
            "Epoch 348 loss: 3527.001\n",
            "----> DD step for heating\n",
            "Epoch 0 loss: 4463.090\n",
            "Epoch 87 loss: 3585.459\n",
            "Epoch 174 loss: 3571.977\n",
            "Epoch 261 loss: 3532.326\n",
            "Epoch 348 loss: 3478.523\n",
            "WEEK 7\n",
            "----> Training for fridge\n",
            "Epoch 0 loss: 914.426\n",
            "Epoch 87 loss: 338.956\n",
            "Epoch 174 loss: 328.815\n",
            "Epoch 261 loss: 328.349\n",
            "Epoch 348 loss: 326.290\n",
            "----> DD step for fridge\n",
            "Epoch 0 loss: 11103.642\n",
            "Epoch 87 loss: 1020.537\n",
            "Epoch 174 loss: 765.249\n",
            "Epoch 261 loss: 612.526\n",
            "Epoch 348 loss: 557.605\n",
            "----> Training for washing_drying\n",
            "Epoch 0 loss: 8711.350\n",
            "Epoch 87 loss: 8338.684\n",
            "Epoch 174 loss: 8348.296\n",
            "Epoch 261 loss: 8279.760\n",
            "Epoch 348 loss: 8300.183\n",
            "----> DD step for washing_drying\n",
            "Epoch 0 loss: 9328.707\n",
            "Epoch 87 loss: 8695.213\n",
            "Epoch 174 loss: 8445.250\n",
            "Epoch 261 loss: 8354.597\n",
            "Epoch 348 loss: 8342.261\n",
            "----> Training for computer_tv\n",
            "Epoch 0 loss: 291.122\n",
            "Epoch 87 loss: 133.696\n",
            "Epoch 174 loss: 131.409\n",
            "Epoch 261 loss: 130.006\n",
            "Epoch 348 loss: 127.985\n",
            "----> DD step for computer_tv\n",
            "Epoch 0 loss: 383.151\n",
            "Epoch 87 loss: 169.413\n",
            "Epoch 174 loss: 156.083\n",
            "Epoch 261 loss: 146.326\n",
            "Epoch 348 loss: 142.808\n",
            "----> Training for heating\n",
            "Epoch 0 loss: 2566.273\n",
            "Epoch 87 loss: 2491.689\n",
            "Epoch 174 loss: 2495.576\n",
            "Epoch 261 loss: 2504.269\n",
            "Epoch 348 loss: 2498.619\n",
            "----> DD step for heating\n",
            "Epoch 0 loss: 2600.815\n",
            "Epoch 87 loss: 2550.071\n",
            "Epoch 174 loss: 2533.167\n",
            "Epoch 261 loss: 2550.721\n",
            "Epoch 348 loss: 2510.094\n",
            "WEEK 8\n",
            "----> Training for fridge\n",
            "Epoch 0 loss: 782.093\n",
            "Epoch 87 loss: 322.368\n",
            "Epoch 174 loss: 315.541\n",
            "Epoch 261 loss: 316.063\n",
            "Epoch 348 loss: 313.442\n",
            "----> DD step for fridge\n",
            "Epoch 0 loss: 6450.323\n",
            "Epoch 87 loss: 906.263\n",
            "Epoch 174 loss: 841.282\n",
            "Epoch 261 loss: 561.235\n",
            "Epoch 348 loss: 421.761\n",
            "----> Training for washing_drying\n",
            "Epoch 0 loss: 9189.176\n",
            "Epoch 87 loss: 8919.724\n",
            "Epoch 174 loss: 8891.476\n",
            "Epoch 261 loss: 8827.706\n",
            "Epoch 348 loss: 8876.051\n",
            "----> DD step for washing_drying\n",
            "Epoch 0 loss: 9234.165\n",
            "Epoch 87 loss: 9006.627\n",
            "Epoch 174 loss: 8969.014\n",
            "Epoch 261 loss: 8939.716\n",
            "Epoch 348 loss: 8978.305\n",
            "----> Training for computer_tv\n",
            "Epoch 0 loss: 342.294\n",
            "Epoch 87 loss: 166.892\n",
            "Epoch 174 loss: 164.415\n",
            "Epoch 261 loss: 160.718\n",
            "Epoch 348 loss: 160.634\n",
            "----> DD step for computer_tv\n",
            "Epoch 0 loss: 3426.475\n",
            "Epoch 87 loss: 408.685\n",
            "Epoch 174 loss: 369.301\n",
            "Epoch 261 loss: 260.633\n",
            "Epoch 348 loss: 249.580\n",
            "----> Training for heating\n",
            "Epoch 0 loss: 4891.983\n",
            "Epoch 87 loss: 4909.423\n",
            "Epoch 174 loss: 4860.143\n",
            "Epoch 261 loss: 4765.143\n",
            "Epoch 348 loss: 4756.015\n",
            "----> DD step for heating\n",
            "Epoch 0 loss: 5010.193\n",
            "Epoch 87 loss: 4920.972\n",
            "Epoch 174 loss: 4904.946\n",
            "Epoch 261 loss: 4872.919\n",
            "Epoch 348 loss: 4866.718\n",
            "WEEK 9\n",
            "----> Training for fridge\n",
            "Epoch 0 loss: 809.940\n",
            "Epoch 87 loss: 478.210\n",
            "Epoch 174 loss: 472.211\n",
            "Epoch 261 loss: 464.707\n",
            "Epoch 348 loss: 453.472\n",
            "----> DD step for fridge\n",
            "Epoch 0 loss: 1071.279\n",
            "Epoch 87 loss: 743.960\n",
            "Epoch 174 loss: 662.395\n",
            "Epoch 261 loss: 640.990\n",
            "Epoch 348 loss: 628.766\n",
            "----> Training for washing_drying\n",
            "Epoch 0 loss: 6727.363\n",
            "Epoch 87 loss: 6473.241\n",
            "Epoch 174 loss: 6507.124\n",
            "Epoch 261 loss: 6514.518\n",
            "Epoch 348 loss: 6495.679\n",
            "----> DD step for washing_drying\n",
            "Epoch 0 loss: 6678.300\n",
            "Epoch 87 loss: 6548.181\n",
            "Epoch 174 loss: 6492.177\n",
            "Epoch 261 loss: 6388.458\n",
            "Epoch 348 loss: 6363.354\n",
            "----> Training for computer_tv\n",
            "Epoch 0 loss: 311.411\n",
            "Epoch 87 loss: 145.648\n",
            "Epoch 174 loss: 138.684\n",
            "Epoch 261 loss: 137.781\n",
            "Epoch 348 loss: 138.143\n",
            "----> DD step for computer_tv\n",
            "Epoch 0 loss: 423.513\n",
            "Epoch 87 loss: 183.363\n",
            "Epoch 174 loss: 164.687\n",
            "Epoch 261 loss: 162.119\n",
            "Epoch 348 loss: 157.981\n",
            "----> Training for heating\n",
            "Epoch 0 loss: 4210.631\n",
            "Epoch 87 loss: 3733.507\n",
            "Epoch 174 loss: 3527.380\n",
            "Epoch 261 loss: 3564.858\n",
            "Epoch 348 loss: 3437.461\n",
            "----> DD step for heating\n",
            "Epoch 0 loss: 8450.973\n",
            "Epoch 87 loss: 4348.404\n",
            "Epoch 174 loss: 4179.471\n",
            "Epoch 261 loss: 4033.616\n",
            "Epoch 348 loss: 4004.329\n",
            "WEEK 10\n",
            "----> Training for fridge\n",
            "Epoch 0 loss: 870.126\n",
            "Epoch 87 loss: 355.013\n",
            "Epoch 174 loss: 353.318\n",
            "Epoch 261 loss: 348.531\n",
            "Epoch 348 loss: 347.759\n",
            "----> DD step for fridge\n",
            "Epoch 0 loss: 903.940\n",
            "Epoch 87 loss: 475.488\n",
            "Epoch 174 loss: 461.070\n",
            "Epoch 261 loss: 444.514\n",
            "Epoch 348 loss: 439.605\n",
            "----> Training for washing_drying\n",
            "Epoch 0 loss: 7164.505\n",
            "Epoch 87 loss: 6915.432\n",
            "Epoch 174 loss: 6906.269\n",
            "Epoch 261 loss: 6898.692\n",
            "Epoch 348 loss: 6899.055\n",
            "----> DD step for washing_drying\n",
            "Epoch 0 loss: 9146.514\n",
            "Epoch 87 loss: 7185.614\n",
            "Epoch 174 loss: 6983.718\n",
            "Epoch 261 loss: 6968.206\n",
            "Epoch 348 loss: 6940.612\n",
            "----> Training for computer_tv\n",
            "Epoch 0 loss: 242.247\n",
            "Epoch 87 loss: 129.200\n",
            "Epoch 174 loss: 126.644\n",
            "Epoch 261 loss: 125.860\n",
            "Epoch 348 loss: 125.525\n",
            "----> DD step for computer_tv\n",
            "Epoch 0 loss: 886.527\n",
            "Epoch 87 loss: 293.729\n",
            "Epoch 174 loss: 161.440\n",
            "Epoch 261 loss: 146.959\n",
            "Epoch 348 loss: 148.260\n",
            "----> Training for heating\n",
            "Epoch 0 loss: 4295.741\n",
            "Epoch 87 loss: 4174.398\n",
            "Epoch 174 loss: 4105.199\n",
            "Epoch 261 loss: 4192.562\n",
            "Epoch 348 loss: 4139.778\n",
            "----> DD step for heating\n",
            "Epoch 0 loss: 4240.046\n",
            "Epoch 87 loss: 4174.095\n",
            "Epoch 174 loss: 4147.861\n",
            "Epoch 261 loss: 4212.927\n",
            "Epoch 348 loss: 4135.830\n",
            "WEEK 11\n",
            "----> Training for fridge\n",
            "Epoch 0 loss: 689.024\n",
            "Epoch 87 loss: 390.654\n",
            "Epoch 174 loss: 390.417\n",
            "Epoch 261 loss: 390.094\n",
            "Epoch 348 loss: 382.676\n",
            "----> DD step for fridge\n",
            "Epoch 0 loss: 1345.890\n",
            "Epoch 87 loss: 579.244\n",
            "Epoch 174 loss: 561.290\n",
            "Epoch 261 loss: 550.291\n",
            "Epoch 348 loss: 543.218\n",
            "----> Training for washing_drying\n",
            "Epoch 0 loss: 8698.276\n",
            "Epoch 87 loss: 8426.678\n",
            "Epoch 174 loss: 8355.506\n",
            "Epoch 261 loss: 8400.858\n",
            "Epoch 348 loss: 8388.190\n",
            "----> DD step for washing_drying\n",
            "Epoch 0 loss: 10351.956\n",
            "Epoch 87 loss: 8812.397\n",
            "Epoch 174 loss: 8532.892\n",
            "Epoch 261 loss: 8509.027\n",
            "Epoch 348 loss: 8520.297\n",
            "----> Training for computer_tv\n",
            "Epoch 0 loss: 229.355\n",
            "Epoch 87 loss: 146.044\n",
            "Epoch 174 loss: 144.662\n",
            "Epoch 261 loss: 142.165\n",
            "Epoch 348 loss: 141.825\n",
            "----> DD step for computer_tv\n",
            "Epoch 0 loss: 514.783\n",
            "Epoch 87 loss: 217.290\n",
            "Epoch 174 loss: 167.493\n",
            "Epoch 261 loss: 163.004\n",
            "Epoch 348 loss: 154.113\n",
            "----> Training for heating\n",
            "Epoch 0 loss: 4188.127\n",
            "Epoch 87 loss: 4105.028\n",
            "Epoch 174 loss: 4138.220\n",
            "Epoch 261 loss: 4129.524\n",
            "Epoch 348 loss: 4130.773\n",
            "----> DD step for heating\n",
            "Epoch 0 loss: 4324.663\n",
            "Epoch 87 loss: 4200.720\n",
            "Epoch 174 loss: 4190.297\n",
            "Epoch 261 loss: 4176.268\n",
            "Epoch 348 loss: 4165.443\n",
            "WEEK 12\n",
            "----> Training for fridge\n",
            "Epoch 0 loss: 733.391\n",
            "Epoch 87 loss: 401.240\n",
            "Epoch 174 loss: 399.645\n",
            "Epoch 261 loss: 395.277\n",
            "Epoch 348 loss: 395.804\n",
            "----> DD step for fridge\n",
            "Epoch 0 loss: 6345.745\n",
            "Epoch 87 loss: 778.292\n",
            "Epoch 174 loss: 653.124\n",
            "Epoch 261 loss: 542.884\n",
            "Epoch 348 loss: 494.878\n",
            "----> Training for washing_drying\n",
            "Epoch 0 loss: 12641.571\n",
            "Epoch 87 loss: 12209.529\n",
            "Epoch 174 loss: 12151.224\n",
            "Epoch 261 loss: 12142.409\n",
            "Epoch 348 loss: 12161.076\n",
            "----> DD step for washing_drying\n",
            "Epoch 0 loss: 12880.779\n",
            "Epoch 87 loss: 12346.958\n",
            "Epoch 174 loss: 12265.030\n",
            "Epoch 261 loss: 12257.591\n",
            "Epoch 348 loss: 12280.897\n",
            "----> Training for computer_tv\n",
            "Epoch 0 loss: 349.672\n",
            "Epoch 87 loss: 228.199\n",
            "Epoch 174 loss: 222.566\n",
            "Epoch 261 loss: 220.636\n",
            "Epoch 348 loss: 217.811\n",
            "----> DD step for computer_tv\n",
            "Epoch 0 loss: 710.328\n",
            "Epoch 87 loss: 326.582\n",
            "Epoch 174 loss: 271.138\n",
            "Epoch 261 loss: 256.750\n",
            "Epoch 348 loss: 249.542\n",
            "----> Training for heating\n",
            "Epoch 0 loss: 3501.011\n",
            "Epoch 87 loss: 3387.804\n",
            "Epoch 174 loss: 3385.729\n",
            "Epoch 261 loss: 3342.490\n",
            "Epoch 348 loss: 3333.722\n",
            "----> DD step for heating\n",
            "Epoch 0 loss: 3506.098\n",
            "Epoch 87 loss: 3502.232\n",
            "Epoch 174 loss: 3420.215\n",
            "Epoch 261 loss: 3344.425\n",
            "Epoch 348 loss: 3349.324\n",
            "WEEK 13\n",
            "----> Training for fridge\n",
            "Epoch 0 loss: 820.513\n",
            "Epoch 87 loss: 403.295\n",
            "Epoch 174 loss: 403.742\n",
            "Epoch 261 loss: 398.157\n",
            "Epoch 348 loss: 399.715\n",
            "----> DD step for fridge\n",
            "Epoch 0 loss: 1602.003\n",
            "Epoch 87 loss: 609.064\n",
            "Epoch 174 loss: 527.631\n",
            "Epoch 261 loss: 507.266\n",
            "Epoch 348 loss: 508.460\n",
            "----> Training for washing_drying\n",
            "Epoch 0 loss: 10113.090\n",
            "Epoch 87 loss: 9714.877\n",
            "Epoch 174 loss: 9683.686\n",
            "Epoch 261 loss: 9621.000\n",
            "Epoch 348 loss: 9643.794\n",
            "----> DD step for washing_drying\n",
            "Epoch 0 loss: 10062.121\n",
            "Epoch 87 loss: 9761.910\n",
            "Epoch 174 loss: 9725.221\n",
            "Epoch 261 loss: 9692.214\n",
            "Epoch 348 loss: 9687.285\n",
            "----> Training for computer_tv\n",
            "Epoch 0 loss: 294.961\n",
            "Epoch 87 loss: 128.597\n",
            "Epoch 174 loss: 129.785\n",
            "Epoch 261 loss: 128.712\n",
            "Epoch 348 loss: 127.393\n",
            "----> DD step for computer_tv\n",
            "Epoch 0 loss: 434.465\n",
            "Epoch 87 loss: 204.337\n",
            "Epoch 174 loss: 169.237\n",
            "Epoch 261 loss: 150.149\n",
            "Epoch 348 loss: 148.060\n",
            "----> Training for heating\n",
            "Epoch 0 loss: 5376.573\n",
            "Epoch 87 loss: 5322.805\n",
            "Epoch 174 loss: 5290.032\n",
            "Epoch 261 loss: 5298.146\n",
            "Epoch 348 loss: 5260.204\n",
            "----> DD step for heating\n",
            "Epoch 0 loss: 5448.967\n",
            "Epoch 87 loss: 5379.799\n",
            "Epoch 174 loss: 5369.072\n",
            "Epoch 261 loss: 5317.647\n",
            "Epoch 348 loss: 5334.790\n",
            "WEEK 14\n",
            "----> Training for fridge\n",
            "Epoch 0 loss: 680.352\n",
            "Epoch 87 loss: 314.804\n",
            "Epoch 174 loss: 311.241\n",
            "Epoch 261 loss: 310.427\n",
            "Epoch 348 loss: 309.100\n",
            "----> DD step for fridge\n",
            "Epoch 0 loss: 1357.995\n",
            "Epoch 87 loss: 515.163\n",
            "Epoch 174 loss: 426.546\n",
            "Epoch 261 loss: 413.893\n",
            "Epoch 348 loss: 409.889\n",
            "----> Training for washing_drying\n",
            "Epoch 0 loss: 11409.312\n",
            "Epoch 87 loss: 10841.511\n",
            "Epoch 174 loss: 10854.974\n",
            "Epoch 261 loss: 10881.623\n",
            "Epoch 348 loss: 10892.448\n",
            "----> DD step for washing_drying\n",
            "Epoch 0 loss: 11546.956\n",
            "Epoch 87 loss: 11088.445\n",
            "Epoch 174 loss: 11074.595\n",
            "Epoch 261 loss: 11026.623\n",
            "Epoch 348 loss: 11011.233\n",
            "----> Training for computer_tv\n",
            "Epoch 0 loss: 341.907\n",
            "Epoch 87 loss: 132.276\n",
            "Epoch 174 loss: 130.908\n",
            "Epoch 261 loss: 131.048\n",
            "Epoch 348 loss: 129.930\n",
            "----> DD step for computer_tv\n",
            "Epoch 0 loss: 1212.477\n",
            "Epoch 87 loss: 350.287\n",
            "Epoch 174 loss: 179.157\n",
            "Epoch 261 loss: 156.982\n",
            "Epoch 348 loss: 152.093\n",
            "----> Training for heating\n",
            "Epoch 0 loss: 4539.051\n",
            "Epoch 87 loss: 4392.460\n",
            "Epoch 174 loss: 4359.427\n",
            "Epoch 261 loss: 4348.207\n",
            "Epoch 348 loss: 4343.184\n",
            "----> DD step for heating\n",
            "Epoch 0 loss: 5555.950\n",
            "Epoch 87 loss: 4536.828\n",
            "Epoch 174 loss: 4579.016\n",
            "Epoch 261 loss: 4469.354\n",
            "Epoch 348 loss: 4425.314\n",
            "WEEK 15\n",
            "----> Training for fridge\n",
            "Epoch 0 loss: 619.456\n",
            "Epoch 87 loss: 326.428\n",
            "Epoch 174 loss: 323.119\n",
            "Epoch 261 loss: 321.883\n",
            "Epoch 348 loss: 321.006\n",
            "----> DD step for fridge\n",
            "Epoch 0 loss: 5178.087\n",
            "Epoch 87 loss: 736.708\n",
            "Epoch 174 loss: 703.039\n"
          ]
        }
      ],
      "source": [
        "y_apps_vsc = []\n",
        "y_apps_test_vsc = []\n",
        "#weeks_to_train = 2 # len(train) - 1\n",
        "\n",
        "\n",
        "t = time.time()\n",
        "for week in range(weeks_to_train):\n",
        "  print('WEEK {}'.format(week))\n",
        "  current_y = dict()\n",
        "  current_y_test = dict()\n",
        "  for cat in appliance_categories:\n",
        "    current_y_cat, current_y_test_cat = VSC_train_on_week_and_category(week, cat, vsc_learning_rate, input_size, output_size, num_filters, filter_size, encoding_dim, num_epochs, display_every_n_epochs, enable_transfer_learning=False)\n",
        "\n",
        "    current_y[cat] = current_y_cat\n",
        "    current_y_test[cat] = current_y_test_cat\n",
        "\n",
        "  y_apps_vsc.append(current_y)\n",
        "  y_apps_test_vsc.append(current_y_test)\n",
        "\n",
        "print('training took {} seconds'.format(round(time.time() - t, 2)))"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "q9KMUyTBe-AH"
      },
      "source": [
        "#### Transfer VSC"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "Hp5vXRGUqsQw"
      },
      "outputs": [],
      "source": [
        "y_apps_tvsc = []\n",
        "y_apps_test_tvsc = []\n",
        "#weeks_to_train = 5 # len(train) - 1\n",
        "\n",
        "for week in range(weeks_to_train):\n",
        "  print('WEEK {}'.format(week))\n",
        "  current_y = dict()\n",
        "  current_y_test = dict()\n",
        "  for cat in appliance_categories:\n",
        "    current_y_cat, current_y_test_cat = VSC_train_on_week_and_category(week, cat, vsc_learning_rate, input_size, output_size, num_filters, filter_size, encoding_dim, num_epochs, display_every_n_epochs, enable_transfer_learning=True, target_ind=target_ind, num_epochs_vsc_transfer=50)\n",
        "\n",
        "    current_y[cat] = current_y_cat\n",
        "    current_y_test[cat] = current_y_test_cat\n",
        "\n",
        "  y_apps_tvsc.append(current_y)\n",
        "  y_apps_test_tvsc.append(current_y_test)"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "sNfiUxVdE7yv"
      },
      "source": [
        "# **Metrics**"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "vi2tzQPjj7WT"
      },
      "outputs": [],
      "source": [
        "def dd_acc_cat(y_apps, data, target_only=False):\n",
        "  s = 0\n",
        "  acc_dict = dict()\n",
        "  for cat_ind, cat in enumerate(appliance_categories):\n",
        "    y_app = y_apps[cat][:,0,:]\n",
        "    if target_only:\n",
        "      y_real = data['X'][cat].iloc[:,target_ind:].values\n",
        "    else:\n",
        "      y_real = data['X'][cat].values\n",
        "    s += np.sum(np.abs(y_real - y_app), axis=0)\n",
        "    acc_dict[cat] = np.sum(np.abs(y_real - y_app), axis=0)\n",
        "\n",
        "  if target_only:\n",
        "    den = 2*data['X_bar'].iloc[:,target_ind:].sum(axis=0).values\n",
        "  else:\n",
        "    den = 2*data['X_bar'].sum(axis=0).values\n",
        "  return np.round(1 - s/den, 3), np.round(np.mean(1 - s/den), 3), {cat: 1 - v/den for cat,v in acc_dict.items()}\n",
        "\n",
        "def dd_acc_cat_non_zero(y_apps, data, target_only=False):\n",
        "  s = 0\n",
        "  total_acc = 0\n",
        "  house_range = data['X_bar'].shape[1] if not target_only else data['X_bar'].shape[1] + target_ind\n",
        "  for house in range(house_range):\n",
        "      sum_diff = 0\n",
        "      for cat_ind, cat in enumerate(appliance_categories):\n",
        "          y_app = y_apps[cat][:,0,:][:, house]\n",
        "          y_real = data['X'][cat].iloc[:, house].values\n",
        "\n",
        "          non_zero_inds = np.nonzero(y_real)[0]\n",
        "          sub_real = y_real[non_zero_inds]\n",
        "          sub_pred = y_app[non_zero_inds]\n",
        "          sum_diff += np.sum(np.abs(sub_real - np.ravel(sub_pred)))\n",
        "          #s += np.sum(np.abs(y_real - y_app), axis=0)\n",
        "          #acc_dict[cat] = 1 - (np.sum(np.abs(y_real - y_app), axis=0))/(2*y_real.sum(axis=0))\n",
        "\n",
        "      den = 2*data['X_bar'].iloc[:, house].values.sum()\n",
        "      total_acc += 1 - sum_diff/den\n",
        "\n",
        "  return np.round(total_acc / 5, 3)\n",
        "\n",
        "def dd_acc_cat_thresholded(y_apps, data, threshold_percentage=0.05, target_only=False):\n",
        "  s = 0\n",
        "  total_acc = 0\n",
        "  house_range = data['X_bar'].shape[1] if not target_only else data['X_bar'].shape[1] + target_ind\n",
        "  for house in range(house_range):\n",
        "      sum_diff = 0\n",
        "      for cat_ind, cat in enumerate(appliance_categories):\n",
        "          y_app = y_apps[cat][:,0,:][:, house]\n",
        "          y_real = data['X'][cat].iloc[:, house].values\n",
        "\n",
        "          threshold = y_real.max() * threshold_percentage\n",
        "          non_zero_inds = np.where(y_real > threshold)[0]\n",
        "\n",
        "          #non_zero_inds = np.nonzero(y_real)[0]\n",
        "          sub_real = y_real[non_zero_inds]\n",
        "          sub_pred = y_app[non_zero_inds]\n",
        "          sum_diff += np.sum(np.abs(sub_real - np.ravel(sub_pred)))\n",
        "          #s += np.sum(np.abs(y_real - y_app), axis=0)\n",
        "          #acc_dict[cat] = 1 - (np.sum(np.abs(y_real - y_app), axis=0))/(2*y_real.sum(axis=0))\n",
        "\n",
        "      den = 2*data['X_bar'].iloc[:, house].values.sum()\n",
        "      total_acc += 1 - sum_diff/den\n",
        "\n",
        "  return np.round(total_acc / 5, 3)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "JET88FjfJcFm"
      },
      "outputs": [],
      "source": [
        "dd_acc_cat_thresholded(y_apps_test[week], test[week])\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "nzgu9e4p3wdU"
      },
      "outputs": [],
      "source": [
        "y_apps_test"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "SnZgUF45q3v8"
      },
      "outputs": [],
      "source": [
        "sns.set_context('poster')"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "ySFNM0BCj5Iu"
      },
      "outputs": [],
      "source": [
        "def overall_accs_report(weeks_to_train):\n",
        "  mix_res_list = []\n",
        "  transfer_res_list = []\n",
        "  for week in range(weeks_to_train - 1):\n",
        "    mix_res_list.append(dd_acc_cat(y_apps_test[week], test[week])[1])\n",
        "    transfer_res_list.append(dd_acc_cat(y_apps_test_tdsc[week], test[week])[1])\n",
        "\n",
        "\n",
        "  vsc_res_list = []\n",
        "  tvsc_res_list = []\n",
        "  for week in range(weeks_to_train - 1):\n",
        "    #if week != 7: #nan for some reason\n",
        "    vsc_res_list.append(dd_acc_cat(y_apps_test_vsc[week], test[week])[1])\n",
        "    tvsc_res_list.append(dd_acc_cat(y_apps_test_tvsc[week], test[week])[1])\n",
        "\n",
        "  average_df = pd.DataFrame(\n",
        "      {'DSC': mix_res_list,\n",
        "      'TRANSFER DSC': transfer_res_list,\n",
        "      'VSC': vsc_res_list,# + [np.mean(vsc_res_list)], #the original week 7 was nan, need to fix\n",
        "      'TRANSFER VSC': tvsc_res_list,# + [np.mean(tvsc_res_list)],\n",
        "      }\n",
        "      )\n",
        "  plt.figure(figsize=(15,16))\n",
        "  sns.displot(average_df, kde=True, bins=20)\n",
        "  #plt.title('Average DD accuracy for DSC, TrDSC, VSC, TrVSC on all training weeks')\n",
        "  plt.savefig(fname='Distribution of Accuracies.png')\n",
        "\n",
        "  return round(np.mean(mix_res_list), 3), round(np.mean(transfer_res_list), 3), round(np.mean(vsc_res_list), 3), round(np.mean(tvsc_res_list), 3)\n",
        "\n",
        "\n",
        "dsc, tdsc, vsc, tvsc = overall_accs_report(weeks_to_train)\n",
        "\n",
        "\n",
        "print('average DD accuracy on weeks for Mix DSC', dsc)\n",
        "print('average DD accuracy on weeks for Transfer DSC', tdsc)\n",
        "print('average DD accuracy on weeks for Mix VSC', vsc)\n",
        "print('average DD accuracy on weeks for Transfer VSC', tvsc)\n",
        "\n",
        "\n",
        "def per_cat_accs_report(weeks_to_train):\n",
        "  mix_res_list = []\n",
        "  transfer_res_list = []\n",
        "  for week in range(weeks_to_train - 1):\n",
        "    mix_res_list.append(dd_acc_cat(y_apps_test[week], test[week])[2])\n",
        "    transfer_res_list.append(dd_acc_cat(y_apps_test_tdsc[week], test[week])[2])\n",
        "\n",
        "\n",
        "  vsc_res_list = []\n",
        "  tvsc_res_list = []\n",
        "  for week in range(weeks_to_train - 1):\n",
        "    #if week != 7: #nan for some reason\n",
        "    vsc_res_list.append(dd_acc_cat(y_apps_test_vsc[week], test[week])[2])\n",
        "    tvsc_res_list.append(dd_acc_cat(y_apps_test_tvsc[week], test[week])[2])\n",
        "\n",
        "  for cat_ind, cat in enumerate(appliance_categories):\n",
        "    average_df = pd.DataFrame(\n",
        "        {'DSC': [item[cat] for item in mix_res_list],\n",
        "        'TRANSFER DSC': [item[cat] for item in transfer_res_list],\n",
        "        'VSC': [item[cat] for item in vsc_res_list],# + [np.mean(vsc_res_list)], #the original week 7 was nan, need to fix\n",
        "        'TRANSFER VSC': [item[cat] for item in tvsc_res_list],# + [np.mean(tvsc_res_list)],\n",
        "        }\n",
        "        )\n",
        "    plt.figure(figsize=(15,16))\n",
        "    sns.displot(average_df, kde=True, bins=20)\n",
        "    #plt.title('Average DD accuracy for DSC, TrDSC, VSC, TrVSC on all training weeks for {}'.format(cat))\n",
        "    plt.savefig(fname='Distribution of Accuracies for {}.png'.format(cat))\n",
        "\n",
        "  return round(np.mean([item[cat] for item in mix_res_list]), 3), round(np.mean([item[cat] for item in transfer_res_list]), 3), round(np.mean([item[cat] for item in vsc_res_list]), 3), round(np.mean([item[cat] for item in tvsc_res_list]), 3)\n",
        "\n",
        "\n",
        "\n",
        "\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "GrvpfDn52FCa"
      },
      "outputs": [],
      "source": [
        "def overall_non_zero_accs_report(weeks_to_train):\n",
        "  mix_res_list = []\n",
        "  transfer_res_list = []\n",
        "  for week in range(weeks_to_train - 1):\n",
        "    mix_res_list.append(dd_acc_cat_non_zero(y_apps_test[week], test[week]))\n",
        "    transfer_res_list.append(dd_acc_cat_non_zero(y_apps_test_tdsc[week], test[week]))\n",
        "\n",
        "\n",
        "  vsc_res_list = []\n",
        "  tvsc_res_list = []\n",
        "  for week in range(weeks_to_train - 1):\n",
        "    #if week != 7: #nan for some reason\n",
        "    vsc_res_list.append(dd_acc_cat_non_zero(y_apps_test_vsc[week], test[week]))\n",
        "    tvsc_res_list.append(dd_acc_cat_non_zero(y_apps_test_tvsc[week], test[week]))\n",
        "\n",
        "  average_df = pd.DataFrame(\n",
        "      {'DSC': mix_res_list,\n",
        "      'TRANSFER DSC': transfer_res_list,\n",
        "      'VSC': vsc_res_list,# + [np.mean(vsc_res_list)], #the original week 7 was nan, need to fix\n",
        "      'TRANSFER VSC': tvsc_res_list,# + [np.mean(tvsc_res_list)],\n",
        "      }\n",
        "      )\n",
        "  plt.figure(figsize=(15,16))\n",
        "  sns.displot(average_df, kde=True, bins=20)\n",
        "  #plt.title('Average DD accuracy for DSC, TrDSC, VSC, TrVSC on all training weeks')\n",
        "  plt.savefig(fname='Distribution of Accuracies.png')\n",
        "\n",
        "  return round(np.mean(mix_res_list), 3), round(np.mean(transfer_res_list), 3), round(np.mean(vsc_res_list), 3), round(np.mean(tvsc_res_list), 3)\n",
        "\n",
        "dsc, tdsc, vsc, tvsc = overall_non_zero_accs_report(weeks_to_train)\n",
        "\n",
        "\n",
        "print('average DD accuracy on weeks for Mix DSC', dsc)\n",
        "print('average DD accuracy on weeks for Transfer DSC', tdsc)\n",
        "print('average DD accuracy on weeks for Mix VSC', vsc)\n",
        "print('average DD accuracy on weeks for Transfer VSC', tvsc)\n",
        "\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "gm1Nc2-2tMfp"
      },
      "outputs": [],
      "source": [
        "from sklearn.metrics import mean_squared_error\n",
        "\n",
        "def dd_acc_cat(y_apps, data, target_only=False):\n",
        "  s = 0\n",
        "  acc_dict = dict()\n",
        "  for cat_ind, cat in enumerate(appliance_categories):\n",
        "    y_app = y_apps[cat][:,0,:]\n",
        "    if target_only:\n",
        "      y_real = data['X'][cat].iloc[:,target_ind:].values\n",
        "    else:\n",
        "      y_real = data['X'][cat].values\n",
        "    s += np.sum(np.abs(y_real - y_app), axis=0)\n",
        "    acc_dict[cat] = np.sum(np.abs(y_real - y_app), axis=0)\n",
        "\n",
        "  if target_only:\n",
        "    den = 2*data['X_bar'].iloc[:,target_ind:].sum(axis=0).values\n",
        "  else:\n",
        "    den = 2*data['X_bar'].sum(axis=0).values\n",
        "  return np.round(1 - s/den, 3), np.round(np.mean(1 - s/den), 3), {cat: 1 - v/den for cat,v in acc_dict.items()}\n",
        "\n",
        "\n",
        "week = 0\n",
        "def dd_acc_per_category(y_apps, data, target_only=False):\n",
        "    s = 0\n",
        "    error_dict = dict()\n",
        "    for cat_ind, cat in enumerate(appliance_categories):\n",
        "        y_app = y_apps[cat][:,0,:]\n",
        "        if target_only:\n",
        "            y_real = data['X'][cat].iloc[:,target_ind:].values\n",
        "        else:\n",
        "            y_real = data['X'][cat].values\n",
        "        s += np.sum(np.abs(y_real - y_app), axis=0)\n",
        "        error_dict[cat] = np.sqrt(mean_squared_error(y_real, y_app)), np.sqrt(mean_squared_error(y_real, y_app))/np.linalg.norm(y_real, 2)\n",
        "\n",
        "    return error_dict"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "H-YQzSPbtMiu"
      },
      "outputs": [],
      "source": [
        "def per_cat_accs_report(weeks_to_train):\n",
        "  mix_res_list = []\n",
        "  transfer_res_list = []\n",
        "  for week in range(weeks_to_train - 1):\n",
        "    mix_res_list.append(dd_acc_per_category(y_apps_test[week], test[week]))\n",
        "    transfer_res_list.append(dd_acc_per_category(y_apps_test_tdsc[week], test[week]))\n",
        "\n",
        "\n",
        "  vsc_res_list = []\n",
        "  tvsc_res_list = []\n",
        "  for week in range(weeks_to_train - 1):\n",
        "    #if week != 7: #nan for some reason\n",
        "    vsc_res_list.append(dd_acc_per_category(y_apps_test_vsc[week], test[week]))\n",
        "    tvsc_res_list.append(dd_acc_per_category(y_apps_test_tvsc[week], test[week]))\n",
        "\n",
        "  for cat_ind, cat in enumerate(appliance_categories):\n",
        "    average_df = pd.DataFrame(\n",
        "        {'DSC': [item[cat] for item in mix_res_list],\n",
        "        'TRANSFER DSC': [item[cat] for item in transfer_res_list],\n",
        "        'VSC': [item[cat] for item in vsc_res_list],# + [np.mean(vsc_res_list)], #the original week 7 was nan, need to fix\n",
        "        'TRANSFER VSC': [item[cat] for item in tvsc_res_list],# + [np.mean(tvsc_res_list)],\n",
        "        }\n",
        "        )\n",
        "\n",
        "  for cat in appliance_categories:\n",
        "      errors_mix = [d[cat][0] for d in mix_res_list]\n",
        "      print('average DSC error for {} is {}'.format(cat, np.round(np.mean(errors_mix))), 'ratio is {}'.format(np.round(np.mean([d[cat][1] for d in mix_res_list]), 3)))\n",
        "      errors_source = [d[cat][0] for d in transfer_res_list]\n",
        "      print('average T-DSC error for {} is {}'.format(cat, np.round(np.mean(errors_source))), 'ratio is {}'.format(np.round(np.mean([d[cat][1] for d in transfer_res_list]), 3)))\n",
        "      errors_target = [d[cat][0] for d in vsc_res_list]\n",
        "      print('average VSC error for {} is {}'.format(cat, np.round(np.mean(errors_target))), 'ratio is {}'.format(np.round(np.mean([d[cat][1] for d in vsc_res_list]), 3)))\n",
        "      errors_tsc = [d[cat][0] for d in tvsc_res_list]\n",
        "      print('average T-VSC error for {} is {}'.format(cat, np.round(np.mean(errors_tsc))), 'ratio is {}'.format(np.round(np.mean([d[cat][1] for d in tvsc_res_list]), 3)))\n",
        "      print(\"\\n\")\n",
        "\n",
        "\n",
        "  return errors_mix, errors_source, errors_target, errors_tsc\n",
        "\n",
        "\n",
        "sc_cat, ssc_cat, tarsc_cat, tsc_cat = per_cat_accs_report(weeks_to_train)\n",
        "\n",
        "\n",
        "#print('average DD sqrt error per category on weeks for Mix SC', sc_cat)\n",
        "#print('average DD sqrt error per category on weeks for Source only SC, target only DD', ssc_cat)\n",
        "#print('average DD sqrt error per category on weeks for Target only SC and DD', tarsc_cat)\n",
        "#print('average DD sqrt error per category on weeks for Transfer SC', tsc_cat)\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "kGlDwVBitMlU"
      },
      "outputs": [],
      "source": []
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "SU58IXsYuuTw"
      },
      "outputs": [],
      "source": [
        "y_apps_test"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "t2qY-El9sF0S"
      },
      "outputs": [],
      "source": [
        "average_df = pd.DataFrame(\n",
        "    {'DSC': mix_res_list,\n",
        "     'TRANSFER DSC': transfer_res_list,\n",
        "     'VSC': vsc_res_list,# + [np.mean(vsc_res_list)], #the original week 7 was nan, need to fix\n",
        "     'TRANSFER VSC': tvsc_res_list,# + [np.mean(tvsc_res_list)],\n",
        "    }\n",
        "    )\n",
        "\n",
        "plt.figure(figsize=(15,16))\n",
        "sns.displot(average_df, kde=True, bins=20)\n",
        "plt.title('Average DD accuracy for DSC, TrDSC, VSC, TrVSC on all training weeks')\n",
        "plt.show()"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "rtpSH1mSfhFz"
      },
      "source": [
        "# **PLOTS**"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "47rtMzRQvAkD"
      },
      "outputs": [],
      "source": [
        "import matplotlib.pyplot as plt\n",
        "from matplotlib.backends.backend_pdf import PdfPages"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "a00h5j7PvDRd",
        "outputId": "0b32f593-13f0-4340-f0f0-4e600410ddd8"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "4"
            ]
          },
          "metadata": {},
          "execution_count": 18
        }
      ],
      "source": [
        "method_dict = {\n",
        "    'DSC': y_apps_test,\n",
        "    'Transfer DSC': y_apps_test_tdsc,\n",
        "    'VSC': y_apps_test_vsc,\n",
        "    'Transfer VSC': y_apps_test_tvsc,\n",
        "}\n",
        "colors = ['orange', 'green', 'red', 'purple']\n",
        "data_source = ''\n",
        "\n",
        "nb_houses = test[0]['X_bar'].shape[1]\n",
        "nb_houses"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "duLVXCZiu3VO"
      },
      "outputs": [],
      "source": [
        "def get_all_category_plots_by_method(data, nb_houses, nb_weeks, data_type='test'):\n",
        "    for ind, cat in enumerate(appliance_categories):\n",
        "        figs, axes = [], []\n",
        "        for week in range(nb_weeks):\n",
        "            for house in range(nb_houses):\n",
        "\n",
        "                fig, ax = plt.subplots(figsize=(20, 20), nrows=len(list(method_dict.keys())))\n",
        "                xt = test[week]['X'][appliance_categories[ind]]\n",
        "                house_name = xt.columns[house]\n",
        "                plt.suptitle('Week {}, house {}'.format(week, house_name), fontsize=20)\n",
        "\n",
        "                for method_ind, (method, y_apps) in enumerate(method_dict.items()):\n",
        "                    xt_pred = y_apps[week][appliance_categories[ind]][:,:,house]\n",
        "\n",
        "                    ax[method_ind].plot([i*100 for i in range(len(xt))], xt.values[:,house], c='blue', alpha=0.5)\n",
        "                    ax[method_ind].plot([i*100 for i in range(len(xt_pred))], xt_pred, c=colors[method_ind], alpha=0.5)\n",
        "                    ax[method_ind].set_xlabel('Timestamp', fontsize=10)\n",
        "                    ax[method_ind].set_ylabel('Consumption', fontsize=10)\n",
        "                    ax[method_ind].set_title('DD for {} house {}, method={}, category={}'.format(data_type, house_name, method, cat), fontsize=14)\n",
        "                    ax[method_ind].legend(['real', 'predicted'])\n",
        "                figs.append(fig)\n",
        "                axes.append(ax)\n",
        "\n",
        "        with PdfPages('all_{}_plots_by_method_{}_{}.pdf'.format(cat, data_type, data_source), 'w') as pdf:\n",
        "            for fig in figs:\n",
        "                pdf.savefig(fig)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "Im_tsn_cwhER"
      },
      "outputs": [],
      "source": [
        "get_all_category_plots_by_method(data, nb_houses, 35, data_type='test')"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "6hVgfNjZM_6i"
      },
      "outputs": [],
      "source": [
        "week=1\n",
        "c=1\n",
        "house_train = 4\n",
        "\n",
        "xt = train[week]['X'][appliance_categories[c]]\n",
        "xt_pred = y_apps[week][appliance_categories[c]][:,0][:,house_train]\n",
        "\n",
        "plt.figure(figsize=(12,6))\n",
        "plt.plot([i*100 for i in range(len(xt_pred))], xt_pred, c='orange')\n",
        "plt.plot([i*100 for i in range(len(xt))], xt.values[:,house_train], c='blue')\n",
        "plt.xlabel('Iteration', fontsize=14)\n",
        "plt.ylabel('norm2(X-AS)', fontsize=14)\n",
        "plt.title('DD for train house {} for {} using DSC on mix'.format(house_train, appliance_categories[c]), fontsize=20)\n",
        "plt.legend(['predicted',' real'])\n",
        "#plt.axis((0,300,0,10000))\n",
        "plt.savefig(fname='it.png')"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "XzdX5NLiLEnz",
        "outputId": "08d7d1f4-6ca5-41a4-c260-404666118e26"
      },
      "outputs": [
        {
          "data": {
            "text/plain": [
              "(168,)"
            ]
          },
          "execution_count": 63,
          "metadata": {},
          "output_type": "execute_result"
        }
      ],
      "source": [
        "y_apps_test[week][appliance_categories[c]][:,0][:,house_test].shape"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 416
        },
        "id": "1431vLdKJtmG",
        "outputId": "d62694dd-f9d8-459e-bd1c-838b3946af46"
      },
      "outputs": [
        {
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 864x432 with 1 Axes>"
            ]
          },
          "metadata": {},
          "output_type": "display_data"
        }
      ],
      "source": [
        "week=2\n",
        "c=3\n",
        "house_test = 3\n",
        "\n",
        "y_apps[week][appliance_categories[c]].shape\n",
        "xt = test[week]['X'][appliance_categories[c]].values[:,house_test]\n",
        "xt_pred = y_apps_test[week][appliance_categories[c]][:,0][:,house_test]\n",
        "\n",
        "plt.figure(figsize=(12,6))\n",
        "plt.plot([i*100 for i in range(len(xt_pred))], xt_pred, c='orange')\n",
        "plt.plot([i*100 for i in range(len(xt))], xt, c='blue')\n",
        "plt.xlabel('Iteration', fontsize=14)\n",
        "plt.ylabel('norm2(X-AS)', fontsize=14)\n",
        "plt.title('DD for test house {} for {} using DSC on mix'.format(house_test, appliance_categories[c]), fontsize=20)\n",
        "plt.legend(['predicted',' real'])\n",
        "#plt.axis((0,300,0,10000))\n",
        "plt.savefig(fname='it.png')"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 416
        },
        "id": "QYaiQ-ozTt_1",
        "outputId": "deeed852-d376-4c66-df34-a4e300711655"
      },
      "outputs": [
        {
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 864x432 with 1 Axes>"
            ]
          },
          "metadata": {},
          "output_type": "display_data"
        }
      ],
      "source": [
        "xt = test[week]['X'][appliance_categories[c]]\n",
        "xt_pred = y_apps_test_tdsc[week][appliance_categories[c]][:,0][:,house_test]\n",
        "\n",
        "plt.figure(figsize=(12,6))\n",
        "plt.plot([i*100 for i in range(len(xt_pred))], xt_pred, c='orange')\n",
        "plt.plot([i*100 for i in range(len(xt))], xt.values[:,house_test], c='blue')\n",
        "plt.xlabel('Iteration', fontsize=14)\n",
        "plt.ylabel('norm2(X-AS)', fontsize=14)\n",
        "plt.title('DD for test house {} for {} using Transfer DSC'.format(house_test, appliance_categories[c]), fontsize=20)\n",
        "plt.legend(['predicted',' real'])\n",
        "#plt.axis((0,300,0,10000))\n",
        "plt.savefig(fname='it.png')"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 416
        },
        "id": "0k_JequszU1i",
        "outputId": "1e6f3809-7245-4259-85ab-6449911a1729"
      },
      "outputs": [
        {
          "data": {
            "image/png": "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69atw7Vr17Bq1Sq7/yYA+OGHH3DgwAF0794dbdq0weHDh/Hdd9/hwYMH6NatG8aNG4ennnoKgwcPxunTp7F161bcu3cP//d//1fo41aqVAmff/45hg8fjnHjxmHz5s3m19eiRYtw/PhxDBw4EP379y9SeUlmBKJSpNVqBa1WW+htMjMzhSZNmgharVa4fv26efv7778vaLVaYePGjYXef8KECYJWqxW++uoru8pketwbN25YbE9NTRXatGkjBAQECCdOnLDYt2zZMkGr1QojR460+lgdO3a0KLs9unbtKnTt2tXqvvv37wuhoaFCmzZthAsXLljsO3/+vNCyZUuhf//+5m179uwRtFqtMGPGjHyPlZmZKaSkpJh/P3r0qKDVaoUFCxYUqbyCkPP//OCDDwS9Xm/efuHCBSEwMFDo1auXxe2jo6MFrVYr9O/fX0hNTTVvT0tLEwYMGCBotVph69at5u03btwQtFqt8P7771s9/vDhw/M9n9q0aSN06tRJSE9Pz3f7pKQk88/Z2dlC9+7dhaCgIOHYsWMWt7t9+7bQsWNHoUOHDkJmZqYdNZHj//7v/4QFCxYIM2bMEIYOHSpotVqhT58+Fse2RU7PSa1WK4wZM0Z49OiReXtiYqIQEhIihISECFlZWebtly9fFpo2bSp0795duH37tsVj/fbbb0JAQIDw2muvWWyPj4+3eO6YrFu3TtBqtcKyZcsstm/cuLHQdmDBggWCVqsVjh49arG9qM/VzZs3C1qtVhg2bJjFc+DBgwdCeHi4oNVqheHDh1stQ162XmN5X/sPHz4U/P39hQEDBlitm+Tk5Hx/W96ymOqhVatWwl9//WWxb/z48YJWqxViYmLM2wwGg/D0008LWq1W2L9/v8Xt16xZY66/vPVakIsXLwparVYICwsTjEajxb64uDhBq9UKERERFttv374thISECFqtVnj55ZeFrVu3CleuXMl3/9y6desmaLVa4fDhw3aVy5bHeY116dJFuHnzpnl7dna2MGzYMEGr1Qp//PGHXcc3/d+Cg4OFixcvmrdnZmYKvXv3FgICAoQ2bdpYtFkGg0F48cUXBa1WK8TFxVk8XkHnleXLlwtarVYYN26cIAiCcOTIESEgIEDo1auX1baTnAuH2ZDkNBqNuYfG2seGttSoUQOAOPTjcezZswf3799H7969ERoaarFv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UaNGYejQoflu/9xzz0EQBHz33XfYvHkzKlWqZL5oyptvvmlxW09PT0yYMAHHjh3D6dOnsXv3bpQvXx716tXDxx9/bP5kwCQgIABRUVH49ttvsX//fmzatAlqtRrVqlVDkyZNMHbsWLuWAWzfvj2uX78OnU6HuLg4pKSkwNPTE35+fujXrx8iIyNL7HnpyOdkcfTr1w8BAQH49ttvcezYMRw6dAjlypVD9erVER4ebr4iLiA+977++mt8+eWXOHDgAL7//nvUqFEDzz//PF599VU888wz+R6/UqVKWLBgARYvXozNmzebJ9P27du3RMO8SqXC4sWLsXTpUkRFReH7779H9erVMWDAAAwbNgy7d+8uUqB+88034enpiXXr1mHdunWoWrUqevfujbFjx+b7O2vXro2xY8fi+PHjOHbsGO7duwdvb280aNAA77zzjtV6KQlt27bFDz/8gC+//BL79+8HIA5HW7VqFaKjowGgWG8ievfujZkzZyIlJQU9evQo8DXVt29feHl54bfffsNff/2FkydPIj09HRUqVEBAQAB69uyJ559/Pl/IdHNzwyeffIKBAwfip59+gk6nwx9//IHs7GxUqVIFQUFBeP/999GzZ0+7yiv319jj2Lt3L1atWoWgoCC88847Fvu6du2KF198Ed999x3mzJmDDz/8UKJS0uNSCY+zJiAREVEZd/jwYYwaNQr//e9/8wWismrIkCE4c+YMTp48iXLlykldHCIqBMfMExERwfoa9/fu3TPP73j66acdXaRS9ejRI6srRG3atAmnT59Ghw4dGOSJnACH2RAREQGYNWsW/vrrL7Rq1Qo+Pj64ffs2Dh48iPv372Pw4MElfnE4qd26dQsDBgxA+/btUb9+fRgMBsTFxUGn06FixYqYOHGi1EUkIjswzBMREUHseU9MTMS+ffuQkpICjUaDxo0b47nnnrNYdamsqFq1Kvr06YMTJ06YJ5lXrVoVAwcOxKuvvop69epJXUQisgPHzBMREREROSnF9swbjUakpaXBzc3NIVdKJCIiIiLlEQQB2dnZKF++fLGWe7VFsWE+LS3NfGVIIiIiIqLSpNVqS3RJXRPFhnnT1fS0Wq3DL5QQGxuLoKAghx5TqVjXjsO6dizWt+Owrh2Hde04rGvHiY2NBYASv5KziWLDvGlojUajgbu7u8OPL8UxlYp17Tis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JWKYFzHME5EsMMwTEdknd4g1/a5EDPMihnkikgWOmScisg/DvIir2YgY5olIFnjRKCIi+zDMi9gzL2KYJyJZ4DAbIiL7MMyLuJqNiGGeiGSBS60REdnHYLCcAKvE9lIQxC/2zDPME5FM5A7zarWyG2YiosLo9ZY980rslTadIxjmGeaJSCZMJyM2zEREheMwG4b53BjmiUgW8jbMSuxpIiKyB8N8zjmCq9kwzBORTLCXhYjIPgzzPGfkxjBPRLJgaohdXdkwExEVhhNg+WlubgzzRCQLucfMK/0jUyKiwnACLHvmc2OYJyJZYMNMRGQfDrPhOSM3hnkikgV+ZEpEZB+GeYb53BjmiUgW2DATEdmHYZ6r2eTGME9EspB7AqzSG2YiosIwzLMDKDeGeSKSBV40iojIPnq95Wo2ShyWyKGZOYoV5o1GIx49elTSZSEiBWPDTERkH/bM5z9nAIDRKF15pORq7w1//fVXxMTE4MSJE7hz5w4EQYC7uzuaNGmCTp06YeDAgahRo0ZplpWIyjB+ZEpEZB+Geeth3mAA1Aocc2IzzP/yyy+YN28e0tLS0LlzZ7z88suoXr06PDw8cP/+fVy4cAG//fYblixZggEDBuDtt9+Gj4+PI8pORGUILxpFRGQfgwFwd2eYB/KHeTc36cokFZthfvny5Zg4cSK6dOkCdSFvd+7cuYOVK1diy5YtGDVqVIkWkojKPl40iojIPuyZz7+aDaDMegDsCPPr16+364Fq1KiB995777ELRETKxGE2RET24QTYgnvmleixRhbp9XqkpaWVVFmISME4AZaIyD7smWeYz82uMH/kyBFs377dYtvy5cvRqlUrtG7dGqNHj8bDhw9LpYBEpAzsmScisg/DvPUwr9ROILvC/PLly3Hnzh3z72fOnMEXX3yBfv364d1338X58+fx9ddfl1ohiajsMxgAlUpciYBj5omICsYwz5753OwK83///Tdat25t/v3nn39Gq1atMH36dIwcORKTJ0/G3r17S62QRFT26fU5DTJ75omICsYwzzCfm11h/uHDh6hSpYr599OnT6NTp07m35s1a4a7d++WfOmISDFMJyeAY+aJiArDCbAM87nZFearVauG69evAwCysrIQFxeHVq1amfenpaVBo9GUTgmJSBHyhnmlNspERLawZ55LU+ZmV5jv3Lkz5s6diyNH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\n",
            "text/plain": [
              "<Figure size 864x432 with 1 Axes>"
            ]
          },
          "metadata": {},
          "output_type": "display_data"
        }
      ],
      "source": [
        " xt = test[week]['X'][appliance_categories[c]]\n",
        "xt_pred = y_apps_test_vsc[week][appliance_categories[c]][:,0][:,house_test]\n",
        "\n",
        "plt.figure(figsize=(12,6))\n",
        "plt.plot([i*100 for i in range(len(xt_pred))], xt_pred, c='orange')\n",
        "plt.plot([i*100 for i in range(len(xt))], xt.values[:,house_test], c='blue')\n",
        "plt.xlabel('Iteration', fontsize=14)\n",
        "plt.ylabel('norm2(X-AS)', fontsize=14)\n",
        "plt.title('DD for test house {} for {} using VSC on mix'.format(house_test, appliance_categories[c]), fontsize=20)\n",
        "plt.legend(['predicted',' real'])\n",
        "#plt.axis((0,300,0,10000))\n",
        "plt.savefig(fname='it.png')"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 416
        },
        "id": "FcRC7ESeUVi-",
        "outputId": "22b7118f-3cb3-49c8-e379-4457699afb5b"
      },
      "outputs": [
        {
          "data": {
            "image/png": "iVBORw0KGgoAAAANSUhEUgAAAvMAAAGPCAYAAADRDV/wAAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjUuMywgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy/NK7nSAAAACXBIWXMAAAsTAAALEwEAmpwYAABzoUlEQVR4nO3deVxUVeMG8GcGGBZRERFDXDMHUTQF9zVRQ809c0t9c6neerPFrDRLe00zl7JyedX3Z6W9triGW1puuZXLqBnigiuiiAIimzDMzP39cb0DAwMM28wd7vP9fPjA3DvLmcNw7sO555yrEgRBABEREREROR21owtARERERESlwzBPREREROSkGOaJiIiIiJwUwzwRERERkZNimCciIiIiclIM80RERERETophniq17du3Y/DgwWjdujWCgoIwd+5cRxfJKQQFBWHs2LGOLkalJIfPZHh4OMLDw+3+umWxZMkSBAUF4dixY44uit3w79B+0tPTMWfOHISHh6NZs2YICgrC+fPnHV0sIpu4OroAVDkEBQVZ3HZzc4O3tzcCAgLQrFkzPP300+jSpQtcXFwKPHbatGnYsmWL+bZarYaXlxdq1KgBrVaLTp064ZlnnkGNGjVKVKbTp09j6tSpqFevHkaNGgVPT088+eSTpXuDZSCFpn379tn1dY8dO4Zx48bhtddew+TJk+362pXJwoULERUVhevXr+P+/fvw8PBAnTp10KtXLzz//PMl+lzK5TMpR5s3b8b06dMxb948DB061NHFoXyWLFmCpUuX2nz/wMBAu7d5ZbFgwQL89NNP6NGjBwYOHAgXFxf4+fnZ7fXffvttbN++HTNnzsTzzz9f5H0nTJiAI0eOYOnSpejduzcAICEhAatXr8bhw4dx69YtCIIAX19f1K1bF2FhYXj22WdRv379As+VmZmJ9evXY9++fYiJiUFaWho8PDzQsGFDdO7cGcOGDUO9evUq5D1T+WGYp3L12muvAQCMRiPS0tIQExODyMhIbNy4ESEhIVi0aBEaNWpk9bE9e/ZEcHAwACAjIwPx8fHQ6XTYu3cvFi9ejBkzZpToIH/gwAEIgoD58+cjNDS07G+OFGnNmjVo1qwZOnXqhJo1a+Lhw4c4c+YMlixZgp9++gnr169HQECATc/Fz2TpPf/88+jXrx/q1Knj6KLYzc6dO+Hp6enoYgAA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\n",
            "text/plain": [
              "<Figure size 864x432 with 1 Axes>"
            ]
          },
          "metadata": {},
          "output_type": "display_data"
        }
      ],
      "source": [
        "xt = test[week]['X'][appliance_categories[c]]\n",
        "xt_pred = y_apps_test_tvsc[week][appliance_categories[c]][:,0][:,house_test]\n",
        "\n",
        "plt.figure(figsize=(12,6))\n",
        "plt.plot([i*100 for i in range(len(xt_pred))], xt_pred, c='orange')\n",
        "plt.plot([i*100 for i in range(len(xt))], xt.values[:,house_test], c='blue')\n",
        "plt.xlabel('Iteration', fontsize=14)\n",
        "plt.ylabel('norm2(X-AS)', fontsize=14)\n",
        "plt.title('DD for test house {} for {} using Transfer VSC'.format(house_test, appliance_categories[c]), fontsize=20)\n",
        "plt.legend(['predicted',' real'])\n",
        "#plt.axis((0,300,0,10000))\n",
        "plt.savefig(fname='it.png')"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "kuqdDITyYYJP"
      },
      "outputs": [],
      "source": []
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "1r9hyDNifpAx"
      },
      "outputs": [],
      "source": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "2d-15gmYfnjC"
      },
      "source": [
        "# **Hyperparameter tuning**"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "lVKtT5SvhgAt"
      },
      "outputs": [],
      "source": [
        "input_size = 168\n",
        "output_size = 168\n",
        "encoding_dim = 64\n",
        "\n",
        "nb_displays = 4\n",
        "target_ind = 8\n",
        "\n",
        "appliance_categories = list(train[0]['X'].keys())\n",
        "weeks_to_train = len(train) - 1 #*"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "U_oxvKJdhU24"
      },
      "outputs": [],
      "source": [
        "# Define hyperparameters\n",
        "\n",
        "#num_filters_list = [25, 50, 100]\n",
        "#filter_size_list = [10, 20, 40]\n",
        "#num_epochs_list = [151, 301, 401]\n",
        "#learning_rate_list = [0.0005, 0.0001]\n",
        "\n",
        "\n",
        "num_filters_list = [50, 100]\n",
        "filter_size_list = [10, 20, 40]\n",
        "num_epochs_list = [201]\n",
        "learning_rate_list = [0.0005, 0.0001]"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "AMQHVslEfnqH"
      },
      "outputs": [],
      "source": [
        "def train_for_params(weeks, learning_rate, num_filters, filter_size, num_epochs, enable_transfer_learning, train_fct):\n",
        "  y_apps = []\n",
        "  y_apps_test = []\n",
        "\n",
        "  display_every_n_epochs = num_epochs // nb_displays\n",
        "\n",
        "  t = time.time()\n",
        "  for week in range(weeks):\n",
        "    print('WEEK {}'.format(week))\n",
        "    current_y = dict()\n",
        "    current_y_test = dict()\n",
        "    for cat in appliance_categories:\n",
        "      current_y_cat, current_y_test_cat = train_fct(week, cat, learning_rate, input_size, output_size, num_filters, filter_size, encoding_dim, num_epochs, display_every_n_epochs, enable_transfer_learning)\n",
        "\n",
        "      current_y[cat] = current_y_cat\n",
        "      current_y_test[cat] = current_y_test_cat\n",
        "\n",
        "    y_apps.append(current_y)\n",
        "    y_apps_test.append(current_y_test)\n",
        "\n",
        "  print('training took {} seconds'.format(round(time.time() - t, 2)))\n",
        "  return y_apps, y_apps_test"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "LXzQr169h07G"
      },
      "outputs": [],
      "source": [
        "def get_accuracy(y_hat, data, weeks, target_only=False):\n",
        "  res_list = []\n",
        "  is_nan = []\n",
        "  for week in range(weeks):\n",
        "    if dd_acc_cat(y_hat[week], data[week], target_only)[1] < 1e10: #not nan\n",
        "      res_list.append(dd_acc_cat(y_hat[week], data[week], target_only)[1])\n",
        "    else:\n",
        "      is_nan.append(week)\n",
        "\n",
        "  return np.mean(res_list), is_nan"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "PdJBvbSN1sA6"
      },
      "outputs": [],
      "source": [
        "#test_y_hat_dsc[0]['fridge'].shape, test[0]['X']['fridge'].values.shape, np.transpose(train_y_hat_dsc[0]['fridge'], (2, 1, 0)).shape, train[0]['X']['fridge'].values.shape"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "YJSNKIvq7x6Q"
      },
      "outputs": [],
      "source": [
        "weeks = 10\n",
        "def tuning(learning_rate, num_filters, filter_size, num_epochs):\n",
        "    print('########## Training on num_filters = {}, filter_size = {}, num_epochs = {} learning_rate = {} \\n'.format(num_filters, filter_size, num_epochs, learning_rate))\n",
        "    print('DSC')\n",
        "    train_y_hat_dsc, test_y_hat_dsc = train_for_params(weeks, learning_rate, num_filters, filter_size, num_epochs, enable_transfer_learning=False, train_fct=train_on_week_and_category)\n",
        "    print('TRANSFER DSC')\n",
        "    train_y_hat_tdsc, test_y_hat_tdsc = train_for_params(weeks, learning_rate, num_filters, filter_size, num_epochs, enable_transfer_learning=True, train_fct=train_on_week_and_category)\n",
        "    print('VSC')\n",
        "    train_y_hat_vsc, test_y_hat_vsc = train_for_params(weeks, learning_rate, num_filters, filter_size, num_epochs, enable_transfer_learning=False, train_fct=VSC_train_on_week_and_category)\n",
        "    print('TRANSFER VSC')\n",
        "    train_y_hat_tvsc, test_y_hat_tvsc = train_for_params(weeks, learning_rate, num_filters, filter_size, num_epochs, enable_transfer_learning=True, train_fct=VSC_train_on_week_and_category)\n",
        "    print('\\n')\n",
        "\n",
        "    return (\n",
        "        {'learning_rate': learning_rate,\n",
        "         'num_filters': num_filters,\n",
        "          'filter_size': filter_size,\n",
        "          'num_epochs': num_epochs,\n",
        "          'DD_accuracy_DSC_and_nans': get_accuracy(train_y_hat_dsc, train, weeks),\n",
        "          'DD_accuracy_TransferDSC_and_nans': get_accuracy(train_y_hat_tdsc, train, weeks, target_only=True),\n",
        "          'DD_accuracy_VSC_and_nans': get_accuracy(train_y_hat_vsc, train, weeks),\n",
        "          'DD_accuracy_TransferVSC_and_nans': get_accuracy(train_y_hat_tvsc, train, weeks, target_only=True),\n",
        "          }\n",
        "        )"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "db2IsXoojrBQ"
      },
      "outputs": [],
      "source": [
        "res_dict = list()\n",
        "#weeks = 5\n",
        "\n",
        "t_before = time.time()\n",
        "total_nb_of_trials = len(num_filters_list) * len(filter_size_list) * len(num_epochs_list) * len(learning_rate_list)\n",
        "trial = 0\n",
        "\n",
        "for num_filters in num_filters_list:\n",
        "  for filter_size in filter_size_list:\n",
        "    for num_epochs in num_epochs_list:\n",
        "      for learning_rate in learning_rate_list:\n",
        "        trial = trial + 1\n",
        "        print('LOOP {}/{}'.format(trial, total_nb_of_trials))\n",
        "\n",
        "        res_dict.append(tuning(learning_rate, num_filters, filter_size, num_epochs))\n",
        "        with open('/content/drive/MyDrive/tuning_deep_learning.pickle', 'wb') as f:\n",
        "          pickle.dump({'nb_trials': trial, 'res_dict': res_dict}, f)\n",
        "\n",
        "print('Total tuning took {}s'.format(round(time.time() - t_before, 2)))"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "ba36DPXCTygT"
      },
      "outputs": [],
      "source": [
        "with open('/content/drive/MyDrive/tuning_deep_learning.pickle', 'rb') as f:\n",
        "  c=pickle.load(f)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "srflLZBOoNg0",
        "outputId": "e5242319-f2b4-4c73-c3cf-092de5ef70ba"
      },
      "outputs": [
        {
          "data": {
            "text/plain": [
              "[[0.7309999999999999,\n",
              "  0.7323000000000001,\n",
              "  0.7242999999999999,\n",
              "  0.7316,\n",
              "  0.6738999999999999,\n",
              "  0.7201,\n",
              "  0.6891999999999999,\n",
              "  0.7163,\n",
              "  0.5885,\n",
              "  0.7158,\n",
              "  -0.8014999999999999,\n",
              "  0.6747],\n",
              " [0.7310000000000001,\n",
              "  0.73,\n",
              "  0.716,\n",
              "  0.7279,\n",
              "  0.6248,\n",
              "  0.7191000000000001,\n",
              "  0.6747,\n",
              "  0.7179999999999999,\n",
              "  0.5151000000000001,\n",
              "  0.7114999999999999,\n",
              "  0.011899999999999999,\n",
              "  0.5662],\n",
              " [0.7833,\n",
              "  0.7600999999999999,\n",
              "  0.7809999999999999,\n",
              "  0.7758,\n",
              "  0.6992,\n",
              "  0.7287,\n",
              "  0.7614,\n",
              "  0.7865,\n",
              "  0.6718999999999999,\n",
              "  0.7426000000000001,\n",
              "  -0.12879999999999997,\n",
              "  0.6020999999999999],\n",
              " [nan,\n",
              "  0.6449999999999999,\n",
              "  nan,\n",
              "  0.6343000000000001,\n",
              "  nan,\n",
              "  0.649888888888889,\n",
              "  nan,\n",
              "  0.4407,\n",
              "  nan,\n",
              "  0.17109999999999997,\n",
              "  nan,\n",
              "  -0.153625]]"
            ]
          },
          "execution_count": 39,
          "metadata": {},
          "output_type": "execute_result"
        }
      ],
      "source": [
        "[[elt[acc][0] for elt in res_dict] for acc in ['DD_accuracy_DSC_and_nans', 'DD_accuracy_TransferDSC_and_nans', 'DD_accuracy_VSC_and_nans', 'DD_accuracy_TransferVSC_and_nans'] if acc != 'nan']"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "n5QzfrI-wPpq"
      },
      "outputs": [],
      "source": [
        "best = [max([elt[acc][0] for elt in res_dict]) for acc in ['DD_accuracy_DSC_and_nans', 'DD_accuracy_TransferDSC_and_nans', 'DD_accuracy_VSC_and_nans', 'DD_accuracy_TransferVSC_and_nans'] if acc != 'nan']"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "hcYaLdPzwt0t",
        "outputId": "f96daa40-29d4-456b-c8c1-27438cf65851"
      },
      "outputs": [
        {
          "data": {
            "text/plain": [
              "[0.7323000000000001, 0.7310000000000001, 0.7865, nan]"
            ]
          },
          "execution_count": 38,
          "metadata": {},
          "output_type": "execute_result"
        }
      ],
      "source": [
        "best"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "I5GWtU3cw6fK",
        "outputId": "49d3c60f-1800-40f2-8b73-77e4a1d0c4b7"
      },
      "outputs": [
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "The best parameters for DD_accuracy_DSC_and_nans are [{'num_filters': 25, 'filter_size': 40, 'num_epochs': 201, 'DD_accuracy_DSC_and_nans': (0.7754000000000001, []), 'DD_accuracy_TransferDSC_and_nans': (0.7408, []), 'DD_accuracy_VSC_and_nans': (0.782, [2, 4]), 'DD_accuracy_TransferVSC_and_nans': (nan, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9])}]\n",
            "The best parameters for DD_accuracy_TransferDSC_and_nans are [{'num_filters': 100, 'filter_size': 10, 'num_epochs': 401, 'DD_accuracy_DSC_and_nans': (0.736, []), 'DD_accuracy_TransferDSC_and_nans': (0.7456, []), 'DD_accuracy_VSC_and_nans': (0.7753, []), 'DD_accuracy_TransferVSC_and_nans': (0.7473333333333333, [2, 3, 4, 5, 6, 7, 8])}]\n",
            "The best parameters for DD_accuracy_VSC_and_nans are [{'num_filters': 100, 'filter_size': 40, 'num_epochs': 201, 'DD_accuracy_DSC_and_nans': (0.7424999999999999, []), 'DD_accuracy_TransferDSC_and_nans': (0.5702999999999999, []), 'DD_accuracy_VSC_and_nans': (0.789, [0, 1, 2, 3, 4, 5, 7, 8, 9]), 'DD_accuracy_TransferVSC_and_nans': (nan, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9])}]\n",
            "The best parameters for DD_accuracy_TransferVSC_and_nans are [{'num_filters': 50, 'filter_size': 20, 'num_epochs': 401, 'DD_accuracy_DSC_and_nans': (0.7485, []), 'DD_accuracy_TransferDSC_and_nans': (0.7445, []), 'DD_accuracy_VSC_and_nans': (0.7803, []), 'DD_accuracy_TransferVSC_and_nans': (0.827, [0, 1, 2, 3, 4, 5, 6, 8, 9])}]\n"
          ]
        }
      ],
      "source": [
        "for acc_ind, acc in enumerate(['DD_accuracy_DSC_and_nans', 'DD_accuracy_TransferDSC_and_nans', 'DD_accuracy_VSC_and_nans', 'DD_accuracy_TransferVSC_and_nans']):\n",
        "  best_params = [x for x in res_dict if x[acc][0] == best[acc_ind]]\n",
        "  print('The best parameters for {} are {}'.format(acc, best_params))"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "6XfjjkQgwyCv"
      },
      "outputs": [],
      "source": [
        "best_params = [x for x in res_dict if x ]"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "CtP9ALX9juXK",
        "outputId": "506260bd-0f5d-4eb4-a6db-facb86415b32"
      },
      "outputs": [
        {
          "data": {
            "text/plain": [
              "[{'num_filters': 25,\n",
              "  'filter_size': 10,\n",
              "  'num_epochs': 201,\n",
              "  'DD_accuracy_DSC_and_nans': (0.7392, []),\n",
              "  'DD_accuracy_TransferDSC_and_nans': (0.7351000000000001, []),\n",
              "  'DD_accuracy_VSC_and_nans': (0.7670999999999999, []),\n",
              "  'DD_accuracy_TransferVSC_and_nans': (0.704, [0, 1, 2, 3, 4, 5, 6, 7, 9])},\n",
              " {'num_filters': 25,\n",
              "  'filter_size': 10,\n",
              "  'num_epochs': 401,\n",
              "  'DD_accuracy_DSC_and_nans': (0.7404, []),\n",
              "  'DD_accuracy_TransferDSC_and_nans': (0.7404000000000001, []),\n",
              "  'DD_accuracy_VSC_and_nans': (0.7756000000000001, []),\n",
              "  'DD_accuracy_TransferVSC_and_nans': (nan, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9])},\n",
              " {'num_filters': 25,\n",
              "  'filter_size': 20,\n",
              "  'num_epochs': 201,\n",
              "  'DD_accuracy_DSC_and_nans': (0.7436, []),\n",
              "  'DD_accuracy_TransferDSC_and_nans': (0.7414000000000001, []),\n",
              "  'DD_accuracy_VSC_and_nans': (0.7768, []),\n",
              "  'DD_accuracy_TransferVSC_and_nans': (nan, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9])},\n",
              " {'num_filters': 25,\n",
              "  'filter_size': 20,\n",
              "  'num_epochs': 401,\n",
              "  'DD_accuracy_DSC_and_nans': (0.746, []),\n",
              "  'DD_accuracy_TransferDSC_and_nans': (0.7447999999999999, []),\n",
              "  'DD_accuracy_VSC_and_nans': (0.7813, []),\n",
              "  'DD_accuracy_TransferVSC_and_nans': (nan, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9])},\n",
              " {'num_filters': 25,\n",
              "  'filter_size': 40,\n",
              "  'num_epochs': 201,\n",
              "  'DD_accuracy_DSC_and_nans': (0.7754000000000001, []),\n",
              "  'DD_accuracy_TransferDSC_and_nans': (0.7408, []),\n",
              "  'DD_accuracy_VSC_and_nans': (0.782, [2, 4]),\n",
              "  'DD_accuracy_TransferVSC_and_nans': (nan, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9])},\n",
              " {'num_filters': 25,\n",
              "  'filter_size': 40,\n",
              "  'num_epochs': 401,\n",
              "  'DD_accuracy_DSC_and_nans': (0.7631, []),\n",
              "  'DD_accuracy_TransferDSC_and_nans': (0.7428000000000001, []),\n",
              "  'DD_accuracy_VSC_and_nans': (0.780625, [2, 5]),\n",
              "  'DD_accuracy_TransferVSC_and_nans': (nan, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9])},\n",
              " {'num_filters': 50,\n",
              "  'filter_size': 10,\n",
              "  'num_epochs': 201,\n",
              "  'DD_accuracy_DSC_and_nans': (0.7416, []),\n",
              "  'DD_accuracy_TransferDSC_and_nans': (0.7394999999999999, []),\n",
              "  'DD_accuracy_VSC_and_nans': (0.7696, []),\n",
              "  'DD_accuracy_TransferVSC_and_nans': (nan, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9])},\n",
              " {'num_filters': 50,\n",
              "  'filter_size': 10,\n",
              "  'num_epochs': 401,\n",
              "  'DD_accuracy_DSC_and_nans': (0.7462, []),\n",
              "  'DD_accuracy_TransferDSC_and_nans': (0.7434000000000001, []),\n",
              "  'DD_accuracy_VSC_and_nans': (0.7762, []),\n",
              "  'DD_accuracy_TransferVSC_and_nans': (nan, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9])},\n",
              " {'num_filters': 50,\n",
              "  'filter_size': 20,\n",
              "  'num_epochs': 201,\n",
              "  'DD_accuracy_DSC_and_nans': (0.7394000000000001, []),\n",
              "  'DD_accuracy_TransferDSC_and_nans': (0.7430000000000001, []),\n",
              "  'DD_accuracy_VSC_and_nans': (0.7695000000000001, []),\n",
              "  'DD_accuracy_TransferVSC_and_nans': (nan, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9])},\n",
              " {'num_filters': 50,\n",
              "  'filter_size': 20,\n",
              "  'num_epochs': 401,\n",
              "  'DD_accuracy_DSC_and_nans': (0.7485, []),\n",
              "  'DD_accuracy_TransferDSC_and_nans': (0.7445, []),\n",
              "  'DD_accuracy_VSC_and_nans': (0.7803, []),\n",
              "  'DD_accuracy_TransferVSC_and_nans': (0.827, [0, 1, 2, 3, 4, 5, 6, 8, 9])},\n",
              " {'num_filters': 50,\n",
              "  'filter_size': 40,\n",
              "  'num_epochs': 201,\n",
              "  'DD_accuracy_DSC_and_nans': (0.7575000000000001, []),\n",
              "  'DD_accuracy_TransferDSC_and_nans': (0.7011, []),\n",
              "  'DD_accuracy_VSC_and_nans': (0.766, [0, 1, 2, 3, 6, 7, 9]),\n",
              "  'DD_accuracy_TransferVSC_and_nans': (nan, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9])},\n",
              " {'num_filters': 50,\n",
              "  'filter_size': 40,\n",
              "  'num_epochs': 401,\n",
              "  'DD_accuracy_DSC_and_nans': (0.7453000000000001, []),\n",
              "  'DD_accuracy_TransferDSC_and_nans': (0.7276999999999999, []),\n",
              "  'DD_accuracy_VSC_and_nans': (0.7713333333333333, [1, 2, 4, 5, 6, 7, 9]),\n",
              "  'DD_accuracy_TransferVSC_and_nans': (nan, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9])},\n",
              " {'num_filters': 100,\n",
              "  'filter_size': 10,\n",
              "  'num_epochs': 201,\n",
              "  'DD_accuracy_DSC_and_nans': (0.7441, []),\n",
              "  'DD_accuracy_TransferDSC_and_nans': (0.7363999999999999, []),\n",
              "  'DD_accuracy_VSC_and_nans': (0.7772000000000001, []),\n",
              "  'DD_accuracy_TransferVSC_and_nans': (0.7075, [1, 2, 7, 8])},\n",
              " {'num_filters': 100,\n",
              "  'filter_size': 10,\n",
              "  'num_epochs': 401,\n",
              "  'DD_accuracy_DSC_and_nans': (0.736, []),\n",
              "  'DD_accuracy_TransferDSC_and_nans': (0.7456, []),\n",
              "  'DD_accuracy_VSC_and_nans': (0.7753, []),\n",
              "  'DD_accuracy_TransferVSC_and_nans': (0.7473333333333333,\n",
              "   [2, 3, 4, 5, 6, 7, 8])},\n",
              " {'num_filters': 100,\n",
              "  'filter_size': 20,\n",
              "  'num_epochs': 201,\n",
              "  'DD_accuracy_DSC_and_nans': (0.7507, []),\n",
              "  'DD_accuracy_TransferDSC_and_nans': (0.6717, []),\n",
              "  'DD_accuracy_VSC_and_nans': (0.7782857142857144, [1, 6, 9]),\n",
              "  'DD_accuracy_TransferVSC_and_nans': (0.821, [0, 1, 2, 4, 5, 6, 7, 8, 9])},\n",
              " {'num_filters': 100,\n",
              "  'filter_size': 20,\n",
              "  'num_epochs': 401,\n",
              "  'DD_accuracy_DSC_and_nans': (0.7432000000000001, []),\n",
              "  'DD_accuracy_TransferDSC_and_nans': (0.7414000000000001, []),\n",
              "  'DD_accuracy_VSC_and_nans': (0.7797777777777778, [9]),\n",
              "  'DD_accuracy_TransferVSC_and_nans': (nan, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9])},\n",
              " {'num_filters': 100,\n",
              "  'filter_size': 40,\n",
              "  'num_epochs': 201,\n",
              "  'DD_accuracy_DSC_and_nans': (0.7424999999999999, []),\n",
              "  'DD_accuracy_TransferDSC_and_nans': (0.5702999999999999, []),\n",
              "  'DD_accuracy_VSC_and_nans': (0.789, [0, 1, 2, 3, 4, 5, 7, 8, 9]),\n",
              "  'DD_accuracy_TransferVSC_and_nans': (nan, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9])},\n",
              " {'num_filters': 100,\n",
              "  'filter_size': 40,\n",
              "  'num_epochs': 401,\n",
              "  'DD_accuracy_DSC_and_nans': (0.7544, []),\n",
              "  'DD_accuracy_TransferDSC_and_nans': (0.7381, []),\n",
              "  'DD_accuracy_VSC_and_nans': (0.779, [0, 1, 2, 4, 5, 6, 7, 8]),\n",
              "  'DD_accuracy_TransferVSC_and_nans': (nan, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9])}]"
            ]
          },
          "execution_count": 29,
          "metadata": {},
          "output_type": "execute_result"
        }
      ],
      "source": [
        "res_dict"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "txqs75p47SHz"
      },
      "outputs": [],
      "source": []
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "e8RkWuvS9mgD"
      },
      "outputs": [],
      "source": [
        "import multiprocessing\n",
        "from itertools import product\n",
        "\n",
        "res_dict = list()\n",
        "\n",
        "def tuning_by_typle(input):\n",
        "  return tuning(*input)\n",
        "\n",
        "if __name__ == '__main__':\n",
        "    multiprocessing.set_start_method('spawn')\n",
        "    pool = multiprocessing.Pool(processes=4) # specify number of processes to run in parallel\n",
        "    inputs = [1, 2, 3, 4, 5] # list of inputs to the function\n",
        "    res_dict = pool.map(tuning_by_typle, list(product(num_filters_list, filter_size_list, num_epochs_list))) # run the function on the inputs in parallel\n",
        "    pool.close()\n",
        "    pool.join()\n"
      ]
    }
  ],
  "metadata": {
    "accelerator": "GPU",
    "colab": {
      "collapsed_sections": [
        "G4R8WKqfEUWf",
        "g1ZHk6ztEbiA",
        "WZQn4xzIEkwt",
        "xGGa4FVAEmHX",
        "nTxTkfJJe864",
        "2d-15gmYfnjC"
      ],
      "provenance": []
    },
    "gpuClass": "standard",
    "kernelspec": {
      "display_name": "Python 3",
      "name": "python3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "nbformat": 4,
  "nbformat_minor": 0
}